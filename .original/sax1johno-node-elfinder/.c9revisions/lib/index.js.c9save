{"ts":1364331197056,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1364331257142,"patch":[[{"diffs":[[1,"/**\n * This connector is used to interface with the ElFinder file manager (elfinder.org).\n * @author John O'Connor\n **/\n \nvar opts = {};\n"]],"start1":0,"start2":0,"length1":0,"length2":137}]],"length":137,"saved":false}
{"ts":1364331297219,"patch":[[{"diffs":[[0,"**/\n"],[-1," \nvar opts = {"],[1,"\n/** Global variables for this module. **/\nvar opts;\n/** First, lets set up some default options. **/\n\nopts = {\n    "],[0,"};\n"]],"start1":116,"start2":116,"length1":21,"length2":123}]],"length":239,"saved":false}
{"ts":1364331312443,"patch":[[{"diffs":[[0,"pts = {\n"],[1,"    \n"],[0,"    };\n"]],"start1":224,"start2":224,"length1":15,"length2":20}]],"length":244,"saved":false}
{"ts":1364331326432,"patch":[[{"diffs":[[0,"pts = {\n"],[1,"    'locale': 'en_US.UTF-8',\n"],[0,"    \n   "]],"start1":224,"start2":224,"length1":16,"length2":45}]],"length":273,"saved":false}
{"ts":1364331328401,"patch":[[{"diffs":[[0,"',\n    \n"],[-1,"    "],[0,"};\n"]],"start1":258,"start2":258,"length1":15,"length2":11}]],"length":269,"saved":false}
{"ts":1364331331858,"patch":[[{"diffs":[[0,"r opts;\n"],[1,"\n"],[0,"/** Firs"]],"start1":165,"start2":165,"length1":16,"length2":17},{"diffs":[[0,"ns. **/\n"],[-1,"\n"],[0,"opts = {"]],"start1":215,"start2":215,"length1":17,"length2":16}]],"length":269,"saved":false}
{"ts":1364331376012,"patch":[[{"diffs":[[0,".UTF-8',"],[1," /** Sets the user locale. **/\n    'debug': false, /** Set to true to enable debug throughout the connector. **/"],[0,"\n    \n};"]],"start1":252,"start2":252,"length1":16,"length2":128}]],"length":381,"saved":false}
{"ts":1364331404655,"patch":[[{"diffs":[[0," to "],[1,"s"],[0,"en"],[-1,"able"],[1,"d"],[0," debug t"],[-1,"hroughout the connector"],[1,"o the client"],[0,". **"]],"start1":326,"start2":326,"length1":45,"length2":32}]],"length":368,"saved":false}
{"ts":1364331442812,"patch":[[{"diffs":[[0,"**/\n    "],[1,"'bind': '[]' /** Bind callbacks to certain commands **/"],[0,"\n};\n"]],"start1":356,"start2":356,"length1":12,"length2":67}]],"length":423,"saved":false}
{"ts":1364331450403,"patch":[[{"diffs":[[0,"d': '[]'"],[1,","],[0," /** Bin"]],"start1":368,"start2":368,"length1":16,"length2":17},{"diffs":[[0,"nds **/\n"],[1,"    \n"],[0,"};\n"]],"start1":413,"start2":413,"length1":11,"length2":16}]],"length":429,"saved":false}
{"ts":1364331507558,"patch":[[{"diffs":[[0,"ommands **/\n"],[1,"    'roots': {}, /** A list of roots for each driver.  This is a required param. **/\n"],[0,"    \n};\n"]],"start1":409,"start2":409,"length1":20,"length2":105}]],"length":514,"saved":false}
{"ts":1364331779085,"patch":[[{"diffs":[[0,"var opts"],[1,", defaultRoot"],[0,";\n\n/** F"]],"start1":163,"start2":163,"length1":16,"length2":29},{"diffs":[[0,"    \n};\n"],[1,"\ndefaultRoot = {\n    \n}\n"]],"start1":519,"start2":519,"length1":8,"length2":32}]],"length":551,"saved":false}
{"ts":1364331804785,"patch":[[{"diffs":[[0,"ultRoot = {\n"],[1,"    'driver': 'LocalFileSystem',\n    'path': '/files',\n"],[0,"    \n}\n"]],"start1":532,"start2":532,"length1":19,"length2":74}]],"length":606,"saved":false}
{"ts":1364331822685,"patch":[[{"diffs":[[0,"path': '"],[1,".."],[0,"/files',"]],"start1":582,"start2":582,"length1":16,"length2":18}]],"length":608,"saved":false}
{"ts":1364331829939,"patch":[[{"diffs":[[0,"': '"],[-1,".."],[1,"/tmp"],[0,"/fil"]],"start1":586,"start2":586,"length1":10,"length2":12}]],"length":610,"saved":false}
{"ts":1364331846445,"patch":[[{"diffs":[[0,"': '"],[-1,"/tmp/files"],[0,"',\n "]],"start1":586,"start2":586,"length1":18,"length2":8}]],"length":600,"saved":false}
{"ts":1364331886583,"patch":[[{"diffs":[[0,"oots': {"],[1,"\n        defaultRoot\n    "],[0,"}, /** A"]],"start1":440,"start2":440,"length1":16,"length2":41},{"diffs":[[0,"h': '',\n"],[1,"    'startPath': '',\n    'URL': '',\n    'alias': '',\n"],[0,"    \n}\n"]],"start1":610,"start2":610,"length1":15,"length2":68}]],"length":678,"saved":false}
{"ts":1364331921939,"patch":[[{"diffs":[[0,"oots': {"],[1,"    /** The available roots.  This has the defaults from the php version."],[0,"\n       "]],"start1":440,"start2":440,"length1":16,"length2":89}]],"length":751,"saved":false}
{"ts":1364331971540,"patch":[[{"diffs":[[0,"s': "],[-1,"{    /** The available roots.  This has the defaults from the php version.\n        defaultRoot\n    },"],[1,"[ "],[0," /**"]],"start1":443,"start2":443,"length1":109,"length2":10},{"diffs":[[0," param. "],[-1,"**/"],[1,"A default is provided **/\n        defaultRoot\n    ],"],[0,"\n    \n};"]],"start1":506,"start2":506,"length1":19,"length2":68}]],"length":701,"saved":false}
{"ts":1364332527501,"patch":[[{"diffs":[[0,"alias': '',\n"],[1,"    'mimeDetect': 'auto',\n    'mimeFile': 'auto',\n    'imgLib': 'auto',\n    'tmbPath': '.tmb',\n    'tmbPathMode': '0777',\n    'tmbSize': '48',\n    'tmbCrop': true,\n    'tmbBgColor': '#ffffff',\n    'copyOverwrite': true,\n    'copyJoin': true,\n    'copyFrom': true,\n    'copyTo': true,\n    'uploadOverwrite': true,\n    'uploadAllow': [],\n"],[0,"    \n}\n"]],"start1":682,"start2":682,"length1":19,"length2":355}]],"length":1037,"saved":false}
{"ts":1364332650883,"patch":[[{"diffs":[[0,"w': [],\n"],[1,"    'uploadDeny': [],\n    'uploadOrder': ['deny', 'allow'],\n    'uploadMaxSize': 0,\n    'defaults': {\n        'read': true,\n        'write': true\n    },\n    'attributes': []\n    'acceptedName': '/^\\w[\\w\\s\\.\\%\\-]*$/u',\n"],[0,"    \n}\n"]],"start1":1022,"start2":1022,"length1":15,"length2":233}]],"length":1255,"saved":false}
{"ts":1364332669431,"patch":[[{"diffs":[[0,"tes': []"],[1,","],[0,"\n    'ac"]],"start1":1195,"start2":1195,"length1":16,"length2":17}]],"length":1256,"saved":false}
{"ts":1364332809512,"patch":[[{"diffs":[[0,"r\n **/\n\n"],[1,"/** Requires for this class **/\nvar path = require('path');\n\n"],[0,"/** Glob"]],"start1":113,"start2":113,"length1":16,"length2":77},{"diffs":[[0,"]*$/u',\n"],[1,"    'accessControl': null,\n    'accessControlData': null,\n    'disabled': [],\n    'treeDeep': 1,\n    'checkSubfolders': true,\n    'directorySeparator': \n"],[0,"    \n}\n"]],"start1":1302,"start2":1302,"length1":15,"length2":168}]],"length":1470,"saved":false}
{"ts":1364332832945,"patch":[[{"diffs":[[0,"rator': "],[1,"path.sep,\n    "],[0,"\n    \n}\n"]],"start1":1454,"start2":1454,"length1":16,"length2":30}]],"length":1484,"saved":false}
{"ts":1364332887549,"patch":[[{"diffs":[[0,"th.sep,\n"],[1,"    'dateFormat': 'j M Y H:i',\n    'timeFormat': 'H:i',\n    'cryptLib': undefined, /** Not yet implemented. **/\n"],[0,"    \n   "]],"start1":1464,"start2":1464,"length1":16,"length2":128}]],"length":1596,"saved":false}
{"ts":1364332910872,"patch":[[{"diffs":[[0,"**/\n    "],[-1,"\n    "],[1,"'archiveMimes': [],\n    'archivers': []"],[0,"\n}\n"]],"start1":1580,"start2":1580,"length1":16,"length2":50}]],"length":1630,"saved":false}
{"ts":1364332914792,"patch":[[{"diffs":[[0,"s': []\n}"],[1,";"],[0,"\n"]],"start1":1621,"start2":1621,"length1":9,"length2":10}]],"length":1631,"saved":false}
{"ts":1364333426046,"patch":[[{"diffs":[[0,"r.  "],[-1,"This is a required param. A"],[1,"A quasi-sane"],[0," def"]],"start1":545,"start2":545,"length1":35,"length2":20}]],"length":1616,"saved":false}
{"ts":1364333443515,"patch":[[{"diffs":[[0,"aultRoot"],[1,"Volume"],[0,";\n\n/** F"]],"start1":237,"start2":237,"length1":16,"length2":22},{"diffs":[[0,"aultRoot"],[1,"Volume"],[0,"\n    ],\n"]],"start1":603,"start2":603,"length1":16,"length2":22},{"diffs":[[0,"aultRoot"],[1,"Volume"],[0," = {\n   "]],"start1":637,"start2":637,"length1":16,"length2":22}]],"length":1634,"saved":false}
{"ts":1364333446014,"patch":[[{"diffs":[[0," of root"],[1," volume"],[0,"s for ea"]],"start1":527,"start2":527,"length1":16,"length2":23}]],"length":1641,"saved":false}
{"ts":1364333450396,"patch":[[{"diffs":[[0,"umes"],[-1," for each driver"],[0,".  A"]],"start1":539,"start2":539,"length1":24,"length2":8}]],"length":1625,"saved":false}
{"ts":1364333598640,"patch":[[{"diffs":[[0,"ar path "],[-1,"="],[1,"   = "],[0," require"]],"start1":154,"start2":154,"length1":17,"length2":21},{"diffs":[[0,"('path')"],[1,",\n    _       =  require('underscore')"],[0,";\n\n/** G"]],"start1":175,"start2":175,"length1":16,"length2":54},{"diffs":[[0,"ers': []\n};\n"],[1,"\nvar ElFinder = function(opts) {\n    if (!_.isUndefined(opts) && !_.isNull(opts)) {\n        \n    }\n}\n"]],"start1":1655,"start2":1655,"length1":12,"length2":113}]],"length":1768,"saved":false}
{"ts":1364333619620,"patch":[[{"diffs":[[0,"unction("],[-1,"o"],[1,"newO"],[0,"pts) {\n "]],"start1":1684,"start2":1684,"length1":17,"length2":20},{"diffs":[[0,"defined("],[-1,"o"],[1,"newO"],[0,"pts) && "]],"start1":1718,"start2":1718,"length1":17,"length2":20},{"diffs":[[0,".isNull("],[-1,"o"],[1,"newO"],[0,"pts)) {\n"]],"start1":1740,"start2":1740,"length1":17,"length2":20},{"diffs":[[0,"        "],[1,"_.extends(opts, newOpts)"],[0,"\n    }\n}"]],"start1":1760,"start2":1760,"length1":16,"length2":40}]],"length":1801,"saved":false}
{"ts":1364333620748,"patch":[[{"diffs":[[0,"newOpts)"],[1,";"],[0,"\n    }\n}"]],"start1":1784,"start2":1784,"length1":16,"length2":17}]],"length":1802,"saved":false}
{"ts":1364333658150,"patch":[[{"diffs":[[0,"\n       "],[1," opts ="],[0," _.exten"]],"start1":1759,"start2":1759,"length1":16,"length2":23}]],"length":1809,"saved":false}
{"ts":1364333660647,"patch":[[{"diffs":[[0,"_.extend"],[-1,"s"],[0,"(opts, n"]],"start1":1775,"start2":1775,"length1":17,"length2":16}]],"length":1808,"saved":false}
{"ts":1364333712675,"patch":[[{"diffs":[[0," []\n};\n\n"],[1,"/** \n * ElFinder constructor\n * @param newOpts an object of options that can be passed in. Uses the format\n * specified above in the defaultRootVolume.\n"],[0,"var ElFi"]],"start1":1660,"start2":1660,"length1":16,"length2":168}]],"length":1960,"saved":false}
{"ts":1364333731035,"patch":[[{"diffs":[[0,"the "],[1,"same "],[0,"format"],[-1,"\n * specified above in"],[1," as"],[0," the"]],"start1":1764,"start2":1764,"length1":36,"length2":22}]],"length":1946,"saved":false}
{"ts":1364333736844,"patch":[[{"diffs":[[0,"Volume.\n"],[1," **/\n"],[0,"var ElFi"]],"start1":1798,"start2":1798,"length1":16,"length2":21}]],"length":1951,"saved":false}
{"ts":1364333741677,"patch":[[{"diffs":[[0," default"],[-1,"RootVolume"],[1,"s opts"],[0,".\n **/\nv"]],"start1":1786,"start2":1786,"length1":26,"length2":22}]],"length":1947,"saved":false}
{"ts":1364333848456,"patch":[[{"diffs":[[0,"rscore')"],[1,",\n    elUtils =   require('./elUtils')"],[0,";\n\n/** G"]],"start1":213,"start2":213,"length1":16,"length2":54},{"diffs":[[0,"    }\n}\n"],[1,"\n"]],"start1":1977,"start2":1977,"length1":8,"length2":9}]],"length":1986,"saved":false}
{"ts":1364333861032,"patch":[[{"diffs":[[0,"uire('./"],[-1,"elU"],[1,"u"],[0,"tils');\n"]],"start1":242,"start2":242,"length1":19,"length2":17}]],"length":1984,"saved":false}
{"ts":1364333866962,"patch":[[{"diffs":[[0,"    "],[-1,"elU"],[1,"u"],[0,"tils"]],"start1":223,"start2":223,"length1":11,"length2":9}]],"length":1982,"saved":false}
{"ts":1364334859809,"patch":[[{"diffs":[[0,"   }\n}\n\n"],[1,"/**\n * Takes a currently running JSON response object and adds the error\n * specified in the 'error' parameter.\n * @param response the current JSON response.\n * @param error the error and errordata.\n * @param next the next function to be called.  Receives the response as a param.\n **/\nElFinder.prototype.error = function(response, error, next) {\n    if (!_.isUndefined(response.error) && !_.isNull(response.error)) {\n        response.error\n    }\n    response.error = error;\n}\n\n"]],"start1":1974,"start2":1974,"length1":8,"length2":486}]],"length":2460,"saved":false}
{"ts":1364334864488,"patch":[[{"diffs":[[0,"error;\n}"],[-1,"\n\n"]],"start1":2450,"start2":2450,"length1":10,"length2":8}]],"length":2458,"saved":false}
{"ts":1364334957742,"patch":[[{"diffs":[[0,"se.error"],[1,".push(error);\n    } else {"],[0,"\n    "],[-1,"}\n"],[0,"    resp"]],"start1":2414,"start2":2414,"length1":23,"length2":47},{"diffs":[[0," error;\n"],[1,"    }\n"],[0,"}"]],"start1":2473,"start2":2473,"length1":9,"length2":15}]],"length":2488,"saved":false}
{"ts":1364334964351,"patch":[[{"diffs":[[0," = error;\n    }\n"],[-1,"}"],[1,"    next(response);\n};\n\n"]],"start1":2471,"start2":2471,"length1":17,"length2":40}]],"length":2511,"saved":false}
{"ts":1364334968500,"patch":[[{"diffs":[[0,"\n    }\n}"],[1,";"],[0,"\n\n/**\n *"]],"start1":1972,"start2":1972,"length1":16,"length2":17}]],"length":2512,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364572593135,"patch":[[{"diffs":[[0,"\n * "],[-1,"@author John O'Connor\n **/\n\n/** Requires for this class **/\nvar path    =  require('path'),\n    _       =  require('underscore'),\n    utils =   require('./utils');\n\n/** Global variables for this module. **/\nvar opts, defaultRootVolume"],[1,"This is a close port to the PHP version, with a few key exceptions.\n * 1) The bind format is different: Rather than using a comma-separated-values list of keys,\n *    we just use one key / value.\n * @author John O'Connor\n **/\n\n/** Requires for this class **/\nvar path    =  require('path'),\n    _       =  require('underscore'),\n    utils =   require('./utils'),\n    commands = require('./commands'),\n    ERRORS   = require('./errors'),\n    Q       = require('q'),\n    drivers = require('./drivers'),\n    util = require('util'),    \n    eventEmitter = require('events').EventEmitter; /** An event emitter for listeners. **/\n\n/**\n * API version number\n **/\nvar version = '2.0';\n\n/**\n * Storages\n **/\nvar volumes = {};\nvar netDrivers = [];\nvar defaultVolume = null;\n\n/**\n * Mounted volumes count\n * Required to create a unique volume id\n **/\nvar volumesCount = 0;\n\n/** \n * Options\n **/\nvar opts"],[0,";\n\n/"]],"start1":89,"start2":89,"length1":242,"length2":900},{"diffs":[[0,"   ]"],[-1,",\n    \n};\n\n"],[1,"\n};\n\n/**\n * Default root volume (storage);\n **/\nvar "],[0,"defa"]],"start1":1344,"start2":1344,"length1":19,"length2":60},{"diffs":[[0," []\n};\n\n"],[1,"/** \n * Time for debug\n **/\nvar time = 0;\n\n/**\n * Should we send debug to the client?\n **/\nvar debug = false;\n\n/**\n * Errors from unmounted volumes\n **/\nvar mountErrors = [];\n\n/**\n * Ensure that the application is loaded complete for async commands\n **/\nvar loaded = false;\n\n/**\n * Return the API version;\n **/\nElFinder.prototype.apiVersion = function() {\n    return this.API_VERSION;\n};\n\n"],[0,"/** \n * "]],"start1":2393,"start2":2393,"length1":16,"length2":405},{"diffs":[[0,"opts.\n *"],[-1,""],[0,""],[1," @return a Q promise on the mounting and event listener binding.\n*"],[0,"*/\nvar E"]],"start1":2918,"start2":2918,"length1":16,"length2":82},{"diffs":[[0,"        "],[1,"this."],[0,"opts = _"]],"start1":3087,"start2":3087,"length1":16,"length2":21},{"diffs":[[0,".extend("],[1,"this."],[0,"opts, ne"]],"start1":3108,"start2":3108,"length1":16,"length2":21},{"diffs":[[0,"  }\n"],[-1,"};\n\n/**\n * Takes a currently running JSON response object and adds the error\n * specified in the 'error' parameter.\n * @param response the current JSON response.\n * @param error the error and errordata.\n * @param next the next function to be called.  Receives the response as a param.\n **/\nElFinder.prototype.error = function(response, error, next) {\n    if (!_.isUndefined(response.error) && !_.isNull(response.error)) {\n        response.error.push(error);\n    } else {\n        response.error = error;\n    }\n    next(response);\n};\n"],[1,"    \n    var root = this.opts.roots[0];\n    \n    var bindEvents = _.pairs(opts.bind);\n    \n    /** Bind event listeners **/\n    function bindEventListeners() {\n        var eventListenerDeferred = Q.defer();\n        function doBinding(index) {\n            if (index >= _.size(bindEvents) - 1) {\n                eventListenerDeferred.resolve();\n            } else {\n                this.on(bindEvents[index][0], bindEvents[index][1]);\n                return doBinding(++index);\n            }\n        }\n        doBinding(0);\n        return eventListenerDeferred.promise;\n    }\n    \n    var that = this;\n    /** Mount volumes **/\n    function mountVolumes() {\n        var mountVolumesDeferred = Q.defer();\n        function doMountVolumes(index) {\n            if (index >= _.size(opts.roots) - 1) {\n                that.loaded = _.isNull(that.defaultVolume);\n                mountVolumesDeferred.resolve();\n            } else {\n                var driver = opts.roots[index].driver;\n                if (_.has(drivers, driver)) {\n                    var volume = require(drivers[driver]);\n                    volume.mount(opts.roots[index], function(err, id) {\n                        if (err) {\n                            that.mountErrors.push(\"Driver \" + driver + \": \" + err);\n                        } else {\n                            that.volumes[id] = volume;\n                            if (!that.defaultVolume && volume.isReadable()) {\n                                that.defaultVolume = that.volumes[id];\n                            }\n                        }\n                    });\n                } else {\n                    that.mountErrors.push(\"Driver \" + driver + \" does not exist\");\n                }\n                doMountVolumes(++index);\n                // var volume = drivers.\n            }\n        }\n        doMountVolumes(0);\n        return mountVolumesDeferred.promise;\n    }\n    \n    return Q.all([\n        bindEventListeners(),\n        mountVolumes(),\n        Q.fcall(function () {\n            loaded = true;\n        })\n    ]);\n    // currentVolume = require('./drivers/')[root.driver](root);\n};\n\n/**\n * Takes a currently running JSON response object and adds the error\n * specified in the 'error' parameter. Uses the next function so responses\n * can be built incrementally, since errors are not terminating events in some cases.\n * @param response the current JSON response.\n * @param error the error and errordata.\n * @param next the next function to be called.  Receives the response as a param.\n **/\nElFinder.prototype.error = function(response, error, next) {\n    if (!_.isUndefined(response.error) && !_.isNull(response.error)) {\n        response.error.push(error);\n    } else {\n        response.error = error;\n    }\n    next(response);\n};\n\n/**\n * Execute an ElFinder command and return the result in a promise.\n * @param commandString the name of the command (ie: 'open');\n * @param commandArgs an array of the command arguments.\n * @return returns a promise for execution.\n **/\nElFinder.prototype.exec = function(commandString, commandArgs) {\n    var execDefer = Q.defer();\n    var volumeKeys = _.keys(volumes);\n    var result = null;\n    var time = process.hrtime();\n    var self = this;\n    \n    if (!this.loaded) {\n        ElFinder.error({}, ERRORS.ERROR_UNKNOWN, function(response) {\n            execDefer.reject(response);\n        });\n        return execDefer.promise;\n    }\n    \n    // First, check if the user has sent a valid command.\n    if (!commands.isValid(commandString)) {\n        // Generate the error and send the response to the \n        ElFinder.error({}, ERRORS.ERROR_UNKNOWN_CMD, function(response) {\n            execDefer.reject(response);\n        });\n        return execDefer.promise;\n    }\n    \n    function setMimeTypes() {\n        var mimeTypeDeferred = Q.defer();\n        \n        if (_.has(commandArgs, 'mimes')) {\n            iterateVolumes(0, volumeKeys, \n            function(volume) {\n                volume.setMimesFilter(commandArgs.mimes);\n            }, function() {\n                mimeTypeDeferred.resolve();\n            });\n        } else {\n            mimeTypeDeferred.resolve();\n        }\n        \n        return mimeTypeDeferred.promise;\n    }\n    \n    /** Now, execute the command. **/    \n    function executeCommand() {\n        var execCommandDefer = Q.defer();\n        \n        Q.fcall(ElFinder[commandString](commandArgs))\n        .then(function(res) {\n            result = res;\n        }, function(error) {\n            ElFinder.error({}, error, function(response) {\n                execCommandDefer.reject(response);\n            });\n        });\n        \n        return execCommandDefer.promise;\n    }\n    \n    /** Add removed items to an array of items to be removed. **/\n    function removeItems() {\n        var removeItemsDeferred = Q.defer();\n        // If something is to be removed.\n        if (_.has(result, 'removed')) {\n            iterateVolumes(0, volumeKeys, \n            function(volume) {\n                result.removed = _.extend(result.removed, volume.removed());\n                volume.resetRemoved();\n                \n            }, function() {\n                removeItemsDeferred.resolve();\n            });\n        }\n        return removeItemsDeferred.promise;\n    }\n    \n    function emitEvents() {\n        return Q.fcall(function() {\n            ElFinder.emit(commandString);\n        });\n    }\n    \n    function convertRemovedToHashes() {\n        return Q.fcall(function() {\n            if (!_.isEmpty(result.removed)) {\n                var removedArray = [];\n                var index = 0;\n                result.removed.forEach(function(removed) {\n                    removedArray.push(removed['hash']);\n                    if (++index > _.size(result.removed) - 1) {\n                        result.removed = _.uniq(removedArray);\n                    }\n                });\n            } else {\n               return; \n            }\n        })\n    }\n    \n    // Remove hidden files and filter files by mimetypes.\n    function removeHiddenFiles() {\n        return Q.fcall(function() {\n             if (result.added) {\n                 result.added = ElFinder.filter(result.added);\n             }\n             if (result.changed) {\n                 result.changed = ElFinder.filter(result.changed);\n             }\n             return true;\n        });\n    }\n    \n    function runDebug() {\n        return Q.fcall(function() {\n            if (debug && _.has(commandArgs, 'debug')) {\n                result.debug = {\n                    'connector': 'node.js',\n                    'nodeversion': process.version,\n                    'time': process.hrtime(time),\n                    'memory': util.inspect(process.memoryUsage()),\n                    'upload': self.uploadDebug,\n                    'volumes': [],\n                    'mountErrors': self.mountErrors\n                };\n                iterateVolumes(0, volumeKeys, function(volume) {\n                    result.debug.volumes.push(volume.debug());\n                }, function() {\n                    return;\n                });\n            }\n        });\n    }\n    \n    function unmountVolumes() {\n        return Q.fcall(function() {\n           self.iterateVolumes(0, volumeKeys, function(volume) {\n               volume.umount();\n           }, function() {\n               return;\n           });\n        });\n    }\n    \n    return Q.all([\n        setMimeTypes(),\n        executeCommand(),\n        removeItems(),\n        emitEvents(),\n        convertRemovedToHashes(),\n        removeHiddenFiles(),\n        runDebug(),\n        unmountVolumes()\n    ]);\n};\n\n/**\n * protected iterateVolumes\n * Iterates through the volumes and runs the function on each encountered volume.\n * @param index the index of the current volume.\n * @param keys an array of the volume id's (which are keys into the volumes object)\n * @param fn the function to run on each item.\n * @param completeFn a function that is called when iteration is complete.\n**/\nfunction iterateVolumes(index, keys, fn, completeFn) {\n    if (index < _.size(_.keys(volumes)) -1) {\n        fn(volumes[keys[index]], index, keys[index]);\n        iterateVolumes(++index, keys, fn, completeFn);\n    } else {\n        completeFn();\n    }\n}\n\n/**\n * Gets the real file path of a hash.  Operates on the default volume.\n * @param hash the hash of the file whose path will be returned.\n * @return the real path as a string.\n **/\n ElFinder.prototype.realpath = function(hash) {\n    return defaultVolume.realpath(hash);\n };\n\n/**\n * Return the network volumes.  Not currently implemented.\n * \n * @return an array of the network volumes.\n **/\n ElFinder.prototype.getNetVolumes = function() {\n     throw \"Command not supported\";\n };\n \n /**\n  * Save network volumes config.  Not currently implemented.\n  * \n  * @param array the volumes configuration.\n  **/\nElFinder.prototype.saveNetVolumes = function() {\n    throw \"Command not supported\";\n};\n\n\n/**\n * Mount the network volumes. Not currently implemented.\n * \n * @param args the arguments for the network mount.\n * @return A promise to execute the netmount.\n **/\nElFinder.prototype.netmount = function(args) {\n    throw ERRORS.ERROR_UNKNOWN_CMD;\n};\n\n/**\n * Open a directory\n *\n * @param args the command arguments.\n * @return a response object with the following format: \n * - cwd:   information about the opened directory.\n * - files: the content of the opened directory (with the entire tree if args.tree = true)\n * - api:   the api version (if args.init)\n * - uplMaxSize:    The maximum size of uploads (if args.init)\n * - error:         Failures that were encountered during opening.\n**/\nElFinder.prototype.open = function(args) {\n    var target = args.target;\n    var init = args.init;\n    var tree = args.tree;\n    var volume = ElFinder.target;\n    var cwd = defaultVolume ? volume.dir(target, true) : false;\n    \n};\n\n/**\n * Create an archive.\n * \n * @param args the command arguments.\n * @return a response object.\n **/\nfunction archive(args) {\n    var archiveDeferred = Q.defer();\n    var type = args.type;\n    var targets = args.targets ? args.targets: [];\n    \n    var vol = volume(targets[0]);\n    if (!vol) {\n        ElFinder.error({}, ERRORS.ERROR_ARCHIVE, function(response) {\n            ElFinder.error(response, ERRORS.ERROR_TRGDIR_NOT_FOUND, function(res) {\n                archiveDeferred.reject(res);\n            });\n        });\n    }\n}\n\n/**\n * Search files.\n * \n * @param args the command arguments.\n * @return a response object.\n **/\nfunction search(args) {\n    var q = args.q;\n    var mimes = args.mimes ? args.mimes : [];\n    var result = {};\n    var searchDeferred = Q.defer();\n    \n    iterateVolumes(0, volumeKeys,\n    function(volume) {\n        volume.search(q.mimes).then(function(results) {\n            result = _.extend(result, results);\n        })\n    }, function() {\n        searchDeferred.resolve({'files': result});\n    });\n    \n    return searchDeferred.promise;\n}\n\n/**\n * Return file info (used by client \"places\" ui)\n * @param args command arguments.\n * @return response object.\n **/\n function info(args) {\n    var deferred = Q.defer();\n     \n    if (!_.isUndefined(args.targets) && !_.isNull(args.targets)) {\n        var targetKeys = _.keys(args.targets);\n        var files = [];\n        function iterateTargets(index) {\n            if (index >= _.size(targetKeys)) {\n                deferred.resolve({'files': files});\n            } else {\n                if (args.targets[targetKeys[index]]) {\n                    var hash = args.targets[targetKeys[index]];\n                    var vol = volume(args.targets[targetKeys[index]]);\n                    if (vol) {\n                        var info = vol.file(hash);\n                        if (info) {\n                            files.push(info);\n                        }\n                    }\n                }\n                iterateTargets(++index);\n            }\n        }\n        iterateTargets(0);\n    }\n     return deferred.promise;\n }\n \n/**\n * Return image dimensions.\n * \n * @param args the command arguments.\n * @return a return object.\n **/\nfunction dim(args) {\n    if (volume(args.target)) {\n        var dim = volume.dimensions(args.target);\n        if (dim) {\n            return {\n                'dim': dim\n            }\n        } else {\n            return {};\n        }\n    }\n}\n/**\n * Resize an image\n * \n * @param args command arguments.\n * @return a response object.\n **/\nfunction resize(args) {\n    var resizeDefer = Q.defer();\n    \n    var target = args.target;\n    var width = args.width;\n    var height = args.height;\n    var x = args.x;\n    var y = args.y;\n    var mode = args.mode;\n    var bg = null;\n    var degree = args.degree;\n    var vol = volume(target);\n    var file = null;\n    if (!_.isUndefined(vol) && !_.isNull(vol) && vol) {\n        file = vol.file(target);\n        if (!_.isUndefined(file) && !_.null(file) && file) {\n        } else {\n            ElFinder.error({}, ERRORS.ERROR_FILE_NOT_FOUND, function(response) {\n                resizeDefer.reject(response);\n            });\n        }\n    } else {\n        ElFinder.error(vol.error(), ERRORS.ERROR_FILE_NOT_FOUND, function(response) {\n            resizeDefer.reject(response);\n        });\n    }\n    \n    file = vol.resize(target, width, height, x, y, mode, bg, degree);\n    if (file) {\n        resizeDefer.resolve({'changed': file});\n    } else {\n        ElFinder.error(vol.error(), ERRORS.ERROR_RESIZE, function(response) {\n            resizeDefer.reject(response);\n        });\n    }\n    \n    return resizeDefer.promise;\n}\n\n/** Utilities **/\n\n/**\n * Return root - file's owner\n * @param file hash\n * @return elFinderStorageDriver\n **/\nfunction volume(hash) {\n    if (_.has(volumes, hash)) {\n        return volumes[hash];\n    } else {\n        return false;\n    }\n}\n\n/**\n * Returnes a files hashes list.\n * \n * @param an array of files info.\n * @return an array of file hashes.\n **/\nfunction hashes(files) {\n    var ret = [];\n    \n    return (function iterateFiles(index) {\n        if (index >= _.size(files) - 1) {\n            return ret;\n        } else {\n            ret.push(files[index]['hash']);\n            return iterateFiles(++index);\n        }\n    });\n}\n\n/**\n * Remove hidden files and files with required mime times from files list.\n * \n * @param files the file info.\n * @return the array of files.\n **/\nfunction filter(files) {\n    var ret = [];\n    var self = this;\n    return (function iterateFiles(index) {\n        if (index >= _.size(files) - 1) {\n            return ret;\n        } else {\n            if (!files[index].hidden && self.defaultVolume.mimeAccepted(files[index].mime)) {\n                ret.push(files[index]);\n            }\n        }\n    });\n    // How does this work?\n}\n/** Make this an event emitter **/\nElFinder.prototype.__proto__ = eventEmitter.prototype;\n\nmodule.exports = ElFinder;"],[0,"\n"]],"start1":3139,"start2":3139,"length1":537,"length2":14838}]],"length":17977,"saved":false}
{"ts":1364572741643,"patch":[[{"diffs":[[0,"        });\n"],[1,"    } else {\n        var file = vol.archive(targets, args.type);\n        if (file) {\n            archive.resolve({'added': file});\n        } else {\n            ElFinder.error(vol.error(), ERRORS.ERROR_ARCHIVE, function(response) {\n                archive.reject(response);\n            })\n        }\n"],[0,"    }\n}\n\n/**"]],"start1":13521,"start2":13521,"length1":24,"length2":322}]],"length":18275,"saved":false}
{"ts":1364572744259,"patch":[[{"diffs":[[0,"          })"],[1,";"],[0,"\n        }\n "]],"start1":13808,"start2":13808,"length1":24,"length2":25}]],"length":18276,"saved":false}
{"ts":1364572759667,"patch":[[{"diffs":[[0," archive"],[1,"Deferred"],[0,".resolve"]],"start1":13629,"start2":13629,"length1":16,"length2":24},{"diffs":[[0," archive"],[1,"Deferred"],[0,".reject("]],"start1":13787,"start2":13787,"length1":16,"length2":24}]],"length":18292,"saved":false}
{"ts":1364572764270,"patch":[[{"diffs":[[0,"e;\n    \n};\n\n"],[1,"\n\n"],[0,"/**\n * Creat"]],"start1":12997,"start2":12997,"length1":24,"length2":26}]],"length":18294,"saved":false}
{"ts":1364573262847,"patch":[[{"diffs":[[0,"   \n};\n\n"],[1,"/**\n * Extract files from an archive\n * \n * @param args the command arguments.\n * @return a response object.\n **/\nfunction extract(args) {\n    var extractDeferred = Q.defer();\n    var target = args.target;\n    var mimes = [];\n    if (!_.isEmpty(args.mimes)) {\n        mimes = args.mimes;\n    }\n    var vol = volume(target);\n    var file = vol.file(target);\n    if (vol && file) {\n        file = vol.extract(target);\n        if (file) {\n            extractDeferred.resolve({'added': file});\n        } else {\n            ElFinder.error(vol.error(), ERRORS.ERROR_EXTRACT, function(response) {\n                response.errors.push('#' + target);\n                ElFinder.error(response, ERRORS.ERROR_FILE_NOT_FOUND, function(res) {\n                    extractDeferred.reject(res);\n                })\n            })\n        }\n        if (vol.extract(target)) {\n            \n        }    \n    }\n    \n    return extractDeferred.promise;\n}"],[0,"\n\n/**\n *"]],"start1":13001,"start2":13001,"length1":16,"length2":947}]],"length":19225,"saved":false}
{"ts":1364573294662,"patch":[[{"diffs":[[0,"ush("],[-1,"'#' + "],[1,"vol.path("],[0,"target)"],[1,")"],[0,";\n  "]],"start1":13632,"start2":13632,"length1":21,"length2":25}]],"length":19229,"saved":false}
{"ts":1364573304520,"patch":[[{"diffs":[[0,"));\n"],[-1,"                ElFinder.error(response, ERRORS.ERROR_FILE_NOT_FOUND, function(res) {\n    "],[0,"    "]],"start1":13651,"start2":13651,"length1":98,"length2":8},{"diffs":[[0,"(res"],[-1,");\n                })"],[1,"ponse);"],[0,"\n   "]],"start1":13693,"start2":13693,"length1":29,"length2":15}]],"length":19125,"saved":false}
{"ts":1364573310177,"patch":[[{"diffs":[[0,"          })"],[1,";"],[0,"\n        }\n "]],"start1":13707,"start2":13707,"length1":24,"length2":25}]],"length":19126,"saved":false}
{"ts":1364573321988,"patch":[[{"diffs":[[0,"  }\n"],[-1,"        if (vol.extract(target)) {\n            \n        }    \n"],[0,"    "]],"start1":13727,"start2":13727,"length1":70,"length2":8}]],"length":19064,"saved":false}
{"ts":1364573410388,"patch":[[{"diffs":[[0,"sponse.error"],[-1,"s"],[0,".push(vol.pa"]],"start1":13617,"start2":13617,"length1":25,"length2":24},{"diffs":[[0,"h(target));\n"],[1,""],[0,"            "]],"start1":13642,"start2":13642,"length1":24,"length2":24},{"diffs":[[0,"            });\n"],[-1,""],[0,"        }\n    }\n"]],"start1":13704,"start2":13704,"length1":32,"length2":32},{"diffs":[[0,";\n        }\n"],[1,"    } else {\n        ElFinder.error({}, ERRORS.ERROR_EXTRACT, function(response) {\n            response.error.push('#' + target);\n            ElFinder.error(response, ERRORS.ERROR_FILE_NOT_FOUND, function(response) {\n                extractDeferred.reject(response);\n            })\n        })\n"],[0,"    }\n    \n "]],"start1":13718,"start2":13718,"length1":24,"length2":317}]],"length":19356,"saved":false}
{"ts":1364573414842,"patch":[[{"diffs":[[0,"          })"],[1,";"],[0,"\n        })\n"]],"start1":13999,"start2":13999,"length1":24,"length2":25},{"diffs":[[0,"  });\n        })"],[1,";"],[0,"\n    }\n    \n    "]],"start1":14007,"start2":14007,"length1":32,"length2":33}]],"length":19358,"saved":false}
{"ts":1364578884335,"patch":[[{"diffs":[[0,"    "],[-1,"var target = args.target;\n    var init = args.init"],[1,"\n};\n\n/**\n * Save content to a text file.\n * \n * @return a response object.\n **/\nfunction put(args) {\n    var putDeferred = Q.defer()"],[0,";\n  "]],"start1":12820,"start2":12820,"length1":58,"length2":140},{"diffs":[[0,"   var t"],[-1,"ree"],[1,"arget"],[0," = args."]],"start1":12959,"start2":12959,"length1":19,"length2":21},{"diffs":[[0,"= args.t"],[-1,"ree"],[1,"arget"],[0,";\n    va"]],"start1":12973,"start2":12973,"length1":19,"length2":21},{"diffs":[[0," var"],[1," vol ="],[0," volume"],[-1," = ElFinder."],[1,"(target);\n    var file = vol.file("],[0,"target"],[1,")"],[0,";\n    "],[-1,"var cwd = defaultVolume ? volume.dir(target, true) : false"],[1,"\n    if (vol && file) {\n        file.putContents(target, args.content)\n        .then(\n            function(file) {\n                putDeferred.resolve({'changed': })\n            });\n        if (file.putContents(target, args.content))\n        putDeferred.resolve({'changed': file})"],[0,";\n    "],[1,"} "],[0,"\n}"],[-1,";"],[0,"\n\n/*"]],"start1":12991,"start2":12991,"length1":106,"length2":358}]],"length":19696,"saved":false}
{"ts":1364578886577,"patch":[[{"diffs":[[0,"ed': })\n        "],[-1,"    "],[0,"});\n        if ("]],"start1":13213,"start2":13213,"length1":36,"length2":32}]],"length":19692,"saved":false}
{"ts":1364578891292,"patch":[[{"diffs":[[0,"': })\n        })"],[-1,";"],[0,"\n        if (fil"]],"start1":13215,"start2":13215,"length1":33,"length2":32}]],"length":19691,"saved":false}
{"ts":1364578990271,"patch":[[{"diffs":[[0,"d': "],[-1,"})\n        })"],[1,"file});\n            }, function(err) {\n                ElFinder.error(volume.error(), ERRORS.ERROR_SAVE, function(response) {\n                    response.error.push(vol.path(target));\n                    \n                }\n               putDeferred.reject() \n            });"],[0,"\n   "]],"start1":13214,"start2":13214,"length1":21,"length2":284}]],"length":19954,"saved":false}
{"ts":1364579005225,"patch":[[{"diffs":[[0,"    "],[-1,"\n                }\n               putDeferred.reject() "],[1,"putDeferred.reject(response);\n                }"],[0,"\n   "]],"start1":13419,"start2":13419,"length1":63,"length2":55}]],"length":19946,"saved":false}
{"ts":1364579028620,"patch":[[{"diffs":[[0,"               }"],[1,");"],[0,"\n            });"]],"start1":13454,"start2":13454,"length1":32,"length2":34},{"diffs":[[0,"            });\n"],[1,"        \n"],[0,"        if (file"]],"start1":13473,"start2":13473,"length1":32,"length2":41}]],"length":19957,"saved":false}
{"ts":1364579098616,"patch":[[{"diffs":[[0,"        });\n    "],[-1,"    "],[1,"} else {"],[0,"\n        if (fil"]],"start1":13477,"start2":13477,"length1":36,"length2":40},{"diffs":[[0,"    "],[-1,"if (file.putContents(target, args.content))\n        putDeferred.resolve({'changed': file});\n    } "],[1,"ElFinder.error({}, ERRORS.ERROR_SAVE, function(response) {\n            response.error.push('#'+target);\n            ElFinder.error(response, ERRORS.ERROR_FILE_NOT_FOUND, function(response) {\n                putDeferred.reject(response);\n            })\n        })\n    }"],[0,"\n}\n\n"]],"start1":13506,"start2":13506,"length1":106,"length2":276}]],"length":20131,"saved":false}
{"ts":1364579103524,"patch":[[{"diffs":[[0,"          })"],[1,";"],[0,"\n        })\n"]],"start1":13749,"start2":13749,"length1":24,"length2":25},{"diffs":[[0,";\n        })"],[1,";"],[0,"\n    }\n}\n\n/*"]],"start1":13761,"start2":13761,"length1":24,"length2":25}]],"length":20133,"saved":false}
{"ts":1364579113418,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"\n"],[0,"/**\n * Save "]],"start1":12817,"start2":12817,"length1":24,"length2":25}]],"length":20134,"saved":false}
{"ts":1364579114293,"patch":[[{"diffs":[[0,"{\n    \n};\n\n\n"],[1,"\n"],[0,"/**\n * Save "]],"start1":12818,"start2":12818,"length1":24,"length2":25}]],"length":20135,"saved":false}
{"ts":1364579366556,"patch":[[{"diffs":[[0,"   \n};\n\n"],[1,"/**\n * Get the contents of a text file.\n * \n * @param args the command arguments.\n * @return a response object\n **/\nfunction get(args) {\n    var getDeferred = Q.defer();\n    var target = args.target;\n    var vol = volume(target);\n    var file = vol.file(target);\n    \n    if (vol && file) {\n        var content = vol.getContents(target);\n        if (content) {\n            getDeferred.resolve(encodeURI(JSON.stringify(content)));\n        }\n    }\n    \n    return getDeferred.promise;\n}"],[0,"\n\n/**\n *"]],"start1":12821,"start2":12821,"length1":16,"length2":500}]],"length":20619,"saved":false}
{"ts":1364579381474,"patch":[[{"diffs":[[0,"lve("],[-1,"encodeURI("],[0,"JSON"]],"start1":13218,"start2":13218,"length1":18,"length2":8},{"diffs":[[0,"ontent))"],[-1,")"],[0,";\n      "]],"start1":13238,"start2":13238,"length1":17,"length2":16}]],"length":20608,"saved":false}
{"ts":1364579474141,"patch":[[{"diffs":[[0,");\n        }"],[1," else {\n            ElFinder.error({}, ERRORS.ERROR_NOT_UTF8_CONTENT, function(response) {\n                getDeferred.reject(response);\n            })\n        }\n    } else {\n        "],[0,"\n    }\n    \n"]],"start1":13245,"start2":13245,"length1":24,"length2":207}]],"length":20791,"saved":false}
{"ts":1364579512610,"patch":[[{"diffs":[[0," ElFinder.error("],[-1,"{}"],[1,"vol.error()"],[0,", ERRORS.ERROR_N"]],"start1":13276,"start2":13276,"length1":34,"length2":43},{"diffs":[[0,"ROR_"],[-1,"NOT_UTF8_CONT"],[1,"OP"],[0,"EN"],[-1,"T"],[0,", fu"]],"start1":13314,"start2":13314,"length1":24,"length2":12},{"diffs":[[0,"ion(response) {\n"],[1,"                response.error.push(vol.path(target));\n"],[0,"                "]],"start1":13329,"start2":13329,"length1":32,"length2":87}]],"length":20843,"saved":false}
{"ts":1364579516275,"patch":[[{"diffs":[[0,"          })"],[1,";"],[0,"\n        }\n "]],"start1":13448,"start2":13448,"length1":24,"length2":25}]],"length":20844,"saved":false}
{"ts":1364579584658,"patch":[[{"diffs":[[0,"e {\n        "],[1,"ElFinder.error({}, ERRORS.ERROR_OPEN, function(response) {\n            response.error.push('#' + target);\n            ElFinder.error(response, ERRORS.ERROR_FILE_NOT_FOUND, function(response) {\n                getDeferred.reject(response);\n            })\n        });"],[0,"\n    }\n    \n"]],"start1":13481,"start2":13481,"length1":24,"length2":289}]],"length":21109,"saved":false}
{"ts":1364579755412,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"/**\n * Copy / move files into new destination.\n * \n * @param args command arguments.\n * @return a promise to complete with a response object.\n **/\nfunction paste(args) {\n    var pasteDeferred = Q.defer();\n    var dst = args.dst;\n    var targets = [];\n    if (!_.isUndefined(args.targets) && !_.isNull(args.targets)) {\n        _.extend(targets, args.targets);\n    }\n}\n\n"],[0,"/**\n * Get t"]],"start1":12817,"start2":12817,"length1":24,"length2":392}]],"length":21477,"saved":false}
{"ts":1364579960772,"patch":[[{"diffs":[[0," targets"],[-1," = []"],[0,";\n"],[1,""],[0,"    if ("]],"start1":13065,"start2":13065,"length1":23,"length2":18},{"diffs":[[0,"    "],[-1,"_.extend(targets,"],[1,"if (!_.isArray(args.targets)) {\n            targets = [];\n            targets.push(args.targets);\n        } else {\n            targets ="],[0," arg"]],"start1":13146,"start2":13146,"length1":25,"length2":144},{"diffs":[[0,".targets"],[-1,")"],[0,";\n    "],[1,"   "],[-1,"}"],[1," }\n    }\n    "],[0,"\n}\n\n/**\n"]],"start1":13291,"start2":13291,"length1":24,"length2":38}]],"length":21605,"saved":false}
{"ts":1364580191574,"patch":[[{"diffs":[[0,"  }\n    "],[1,"var cut = (!_.isUndefined(args.cut) && !_.isNull(args.cut)) ? true : false;\n    var error = cut ? ERRORS.ERROR_MOVE : ERRORS.ERROR_COPY;\n    var result = {\n        'added': {},\n        'removed': {}\n    };\n    \n    var dstVolume = volume(dst);\n    if (dstVolume) {\n        \n    } else {\n        ElFinder.error({}, ERRORS.ERROR_TRGDIR_NOT_FOUND, function(response) {\n            response.error.push('#' + targets[0]);\n            response.error.push('#' + dst);\n            ElFinder.error(response, error, function(response) {\n                pasteDeferred.reject(response); \n            });\n        });\n    }"],[0,"\n}\n\n/**\n"]],"start1":13313,"start2":13313,"length1":16,"length2":624}]],"length":22213,"saved":false}
{"ts":1364580383460,"patch":[[{"diffs":[[0,") {\n        "],[1,"_.each(targets, function(target, index, list) {\n            if (index >= _.size(list) - 1) {\n                \n            } \n        });"],[0,"\n    } else "]],"start1":13582,"start2":13582,"length1":24,"length2":160}]],"length":22349,"saved":false}
{"ts":1364580573325,"patch":[[{"diffs":[[0,"                "],[1,"pasteDeferred.resolve(result);\n            } else {\n                var srcVol = volume(target);\n                if (!srcVol) {\n                    ElFinder({}, ERRORS.ERROR_FILE_NOT_FOUND, function(response) {\n                        response.error.push('#' + target);\n                        response.error.push(error);\n                    });\n                    result.push({'warning': response});\n                }"],[0,"\n            } \n"]],"start1":13687,"start2":13687,"length1":32,"length2":451},{"diffs":[[0,"       }"],[-1," "],[0,"\n       "]],"start1":14128,"start2":14128,"length1":17,"length2":16}]],"length":22767,"saved":false}
{"ts":1364580866419,"patch":[[{"diffs":[[0,"volume(target);\n"],[1,"                var file = dstVolume.paste(srcVol, target, dst, cut);\n"],[0,"                "]],"start1":13784,"start2":13784,"length1":32,"length2":102},{"diffs":[[0,"r);\n    "],[-1,"                });\n"],[0,"        "]],"start1":14091,"start2":14091,"length1":36,"length2":16},{"diffs":[[0,"response});\n"],[1,"                    });\n                }\n                if (file) {\n                    ElFinder.error({}, )\n"],[0,"            "]],"start1":14143,"start2":14143,"length1":24,"length2":135}]],"length":22928,"saved":false}
{"ts":1364580915316,"patch":[[{"diffs":[[0,"ved': {}"],[1,",\n        'warning': []"],[0,"\n    };\n"]],"start1":13511,"start2":13511,"length1":16,"length2":39},{"diffs":[[0," result."],[1,"warning."],[0,"push({'w"]],"start1":14141,"start2":14141,"length1":16,"length2":24},{"diffs":[[0,"response});\n"],[-1,""],[0,"            "]],"start1":14174,"start2":14174,"length1":24,"length2":24},{"diffs":[[0,"            if ("],[1,"!"],[0,"file) {\n        "]],"start1":14232,"start2":14232,"length1":32,"length2":33},{"diffs":[[0,"ror({}, "],[1,"dstVolume.error(), function(response) {\n                        result\n                    }"],[0,")\n      "]],"start1":14288,"start2":14288,"length1":16,"length2":108}]],"length":23052,"saved":false}
{"ts":1364580923913,"patch":[[{"diffs":[[0,"ush("],[-1,"{'warning': "],[0,"response"],[-1,"}"],[0,");\n "]],"start1":14158,"start2":14158,"length1":29,"length2":16}]],"length":23039,"saved":false}
{"ts":1364580930305,"patch":[[{"diffs":[[0,"  result"],[1,".warning.push(response);"],[0,"\n       "]],"start1":14345,"start2":14345,"length1":16,"length2":40}]],"length":23063,"saved":false}
{"ts":1364580958510,"patch":[[{"diffs":[[0,"                "],[1,"else "],[0,"if (!file) {\n   "]],"start1":14215,"start2":14215,"length1":32,"length2":37},{"diffs":[[0,"             })\n"],[1,"                } else {\n                    result.added.push(file);\n"],[0,"                "]],"start1":14390,"start2":14390,"length1":32,"length2":102}]],"length":23138,"saved":false}
{"ts":1364581172279,"patch":[[{"diffs":[[0,"              })"],[1,";"],[0,"\n               "]],"start1":14389,"start2":14389,"length1":32,"length2":33}]],"length":23139,"saved":false}
{"ts":1364581299729,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"/**\n * Save uploaded files\n * \n * @param an object for uploaded files.\n * @return a response object.\n **/\nfunction upload(args) {\n    var uploadDeferred = Q.defer();\n}\n\n"],[0,"/**\n * Copy "]],"start1":12817,"start2":12817,"length1":24,"length2":193},{"diffs":[[0,"      });\n    }\n"],[1,"    \n    return pasteDeferred.promise;\n"],[0,"}\n\n/**\n * Get th"]],"start1":15009,"start2":15009,"length1":32,"length2":71}]],"length":23347,"saved":false}
{"ts":1364581407018,"patch":[[{"diffs":[[0,"efer();\n"],[1,"    var target = args.target;\n    var vol = volume(target);\n    var files = [];\n    var result = {\n        'added': []\n    }\n    if (args.html) {\n        result.header = 'Content-Type: text/html; charset=utf-8';\n    } else {\n        result.header = false;\n    }\n    \n    \n"],[0,"}\n\n/**\n "]],"start1":12987,"start2":12987,"length1":16,"length2":288}]],"length":23619,"saved":false}
{"ts":1364582204063,"patch":[[{"diffs":[[0,"   \n    "],[1,"if (_.isEmpty(files)) {\n        ElFinder.error({}, ERRORS.ERROR_UPLOAD, function(response) {\n            response.error.push(ERRORS.ERROR_UPLOAD_NO_FILES);\n            response.header = result.header;\n            uploadDeferred.reject(response);\n        })\n    } else if (!vol) {\n        ElFinder.error({}, ERRORS.ERROR_UPLOAD, function(response) {\n            response.error.push(ERRORS.ERROR_TRGDIR_NOT_FOUND);\n            response.error.push('#' + target);\n            response.header = result.header;\n            uploadDeferred.reject(response);\n        });\n    } else {\n        var filesList = _.keys(files.name);\n        _.each(filesList, function(fileName, index, list) {\n            var tmpName = files.tmp_name[fileName];\n            var error = files.error[fileName];\n            if (index >= _.size(list) - 1) {\n                uploadDeferred.resolve(result);\n            } else if (error > 0) {\n                ElFinder.error({}, ERRORS.ERROR_UPLOAD_FILE, function(response) {\n                    response.error.push(fileName);\n                    response.error.push(ERRORS.ERROR_UPLOAD_TRANSFER);\n                    uploadDebug = 'Upload error code: ' + error;\n                });\n            }\n        }); \n    }"],[0,"\n}\n\n/**\n"]],"start1":13258,"start2":13258,"length1":16,"length2":1244}]],"length":24847,"saved":false}
{"ts":1364582243468,"patch":[[{"diffs":[[0,"R);\n"],[-1,"                    uploadDebug = 'Upload error code: ' + error;\n"],[0,"    "]],"start1":14373,"start2":14373,"length1":73,"length2":8}]],"length":24782,"saved":false}
{"ts":1364582567840,"patch":[[{"diffs":[[0,"rror[fileName];\n"],[1,"            Q.nfcall(fs.open, tmpName, 'rb').then(function(file) {\n                if (!file) {\n                    \n                }\n            })\n"],[0,"            if ("]],"start1":14028,"start2":14028,"length1":32,"length2":182},{"diffs":[[0,");\n            }"],[1," else if ()"],[0,"\n        }); \n  "]],"start1":14544,"start2":14544,"length1":32,"length2":43}]],"length":24943,"saved":false}
{"ts":1364582580614,"patch":[[{"diffs":[[0,"'util'),"],[1,"\n"],[0,"    "],[1,"fs  = require('fs'),"],[0,"\n    eve"]],"start1":613,"start2":613,"length1":20,"length2":41}]],"length":24964,"saved":false}
{"ts":1364582679286,"patch":[[{"diffs":[[0,".then(function(f"],[-1,"ile"],[1,"p"],[0,") {\n            "]],"start1":14109,"start2":14109,"length1":35,"length2":33},{"diffs":[[0,"      if (!f"],[-1,"ile)"],[1,"p) {\n                    ElFinder.error({}, ERRORS.ERROR_UPLOAD_FILE, function(response) {\n                        response.error.push(name);\n                        response.error.push(ERRORS.ERROR_UPLOAD_TRANSFER);\n                        result.warning.push(response);\n                    });\n                } else"],[0," {\n         "]],"start1":14140,"start2":14140,"length1":28,"length2":342}]],"length":25276,"saved":false}
{"ts":1364582856528,"patch":[[{"diffs":[[0,"                "],[1,"var file = vol.upload(fp, target, name, tmpName);\n                    if (!file) {\n                        ElFinder.error({}, ERRORS.ERROR_UPLOAD_FILE, function(response) {\n                            response.error.push(vol.error());\n                            response.error.push(name);\n                            result.warning.push(response);\n                        });\n                    } else {\n                        Q.nfcall(fs.close).then(function() {\n                            result.added.push(file);\n                        })\n                    }"],[0,"\n               "]],"start1":14477,"start2":14477,"length1":32,"length2":600}]],"length":25844,"saved":false}
{"ts":1364582858257,"patch":[[{"diffs":[[0,"              })"],[1,";"],[0,"\n               "]],"start1":15023,"start2":15023,"length1":32,"length2":33}]],"length":25845,"saved":false}
{"ts":1364585398916,"patch":[[{"diffs":[[0," })\n"],[-1,"            if (index >= _.size(list) - 1) {\n                uploadDeferred.resolve(result);\n            } else if (error > 0) {\n                ElFinder.error({}, ERRORS.ERROR_UPLOAD_FILE, function(response) {\n                    response.error.push(fileName);\n                    response.error.push(ERRORS.ERROR_UPLOAD_TRANSFER);\n                });\n            } else if ()\n"],[0,"    "]],"start1":15092,"start2":15092,"length1":386,"length2":8}]],"length":25467,"saved":false}
{"ts":1364585402524,"patch":[[{"diffs":[[0,"}\n            })"],[1,";"],[0,"\n        }); \n  "]],"start1":15079,"start2":15079,"length1":32,"length2":33}]],"length":25468,"saved":false}
{"ts":1364585610949,"patch":[[{"diffs":[[0,"    var "],[-1,"filesL"],[1,"l"],[0,"ist = _."]],"start1":13866,"start2":13866,"length1":22,"length2":17},{"diffs":[[0,"    "],[-1,"_.each(filesList, function(fileName, index, "],[1,"function iterateFilesList(index) {\n            var fileName = list[index];\n            if (index >= _.size("],[0,"list)"],[1," -1)"],[0," {\n"],[1,"                uploadDeferred.resolve(result);\n            } else {\n    "],[0,"    "]],"start1":13905,"start2":13905,"length1":60,"length2":200},{"diffs":[[0,"            "],[1," "],[1,"   "],[0,"var error = "]],"start1":14153,"start2":14153,"length1":24,"length2":28},{"diffs":[[0,"rror[fileName];\n"],[1,"    "],[0,"            Q.nf"]],"start1":14188,"start2":14188,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"if (!fp) {\n "]],"start1":14277,"start2":14277,"length1":24,"length2":28},{"diffs":[[0," if (!fp) {\n"],[1,"    "],[0,"            "]],"start1":14292,"start2":14292,"length1":24,"length2":28},{"diffs":[[0,"ion(response) {\n"],[1,"    "],[0,"                "]],"start1":14378,"start2":14378,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"response.error.p"]],"start1":14457,"start2":14457,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"result.warning.p"]],"start1":14536,"start2":14536,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"});\n"],[1,"    "],[0,"                "]],"start1":14591,"start2":14591,"length1":36,"length2":44},{"diffs":[[0,"       } else {\n"],[1,"    "],[0,"                "]],"start1":14628,"start2":14628,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"if (!file) {\n   "]],"start1":14722,"start2":14722,"length1":32,"length2":36},{"diffs":[[0,"   if (!file) {\n"],[1,"    "],[0,"                "]],"start1":14739,"start2":14739,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"response.error.p"]],"start1":14861,"start2":14861,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"response.error.p"]],"start1":14927,"start2":14927,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"  "],[1,"  "],[0,"result.warning.p"]],"start1":14986,"start2":14986,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"});\n            "]],"start1":15045,"start2":15045,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"} else {\n       "]],"start1":15073,"start2":15073,"length1":32,"length2":36},{"diffs":[[0,"       } else {\n"],[1,"    "],[0,"                "]],"start1":15086,"start2":15086,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"result.added.pus"]],"start1":15179,"start2":15179,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"});\n            "]],"start1":15232,"start2":15232,"length1":32,"length2":36},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n  "],[0,"                "]],"start1":15260,"start2":15260,"length1":34,"length2":40},{"diffs":[[0,"                "],[-1,"}\n"],[1,"  }\n    "],[0,"            });\n"]],"start1":15284,"start2":15284,"length1":34,"length2":40},{"diffs":[[0,"             });"],[1,"                \n            }"],[0,"\n        }); \n  "]],"start1":15307,"start2":15307,"length1":32,"length2":62},{"diffs":[[0,"       }"],[-1,"); "],[0,"\n    }\n}"]],"start1":15355,"start2":15355,"length1":19,"length2":16}]],"length":25722,"saved":false}
{"ts":1364585639563,"patch":[[{"diffs":[[0,"push(response);\n"],[1,"                            iterateFilesList(++index);\n"],[0,"                "]],"start1":14571,"start2":14571,"length1":32,"length2":87},{"diffs":[[0,"push(response);\n"],[1,"                                iterateFilesList(++index);\n"],[0,"                "]],"start1":15076,"start2":15076,"length1":32,"length2":91},{"diffs":[[0,"ded.push(file);\n"],[1,"                                iterateFilesList(++index);\n"],[0,"                "]],"start1":15322,"start2":15322,"length1":32,"length2":91}]],"length":25895,"saved":false}
{"ts":1364585645900,"patch":[[{"diffs":[[0,"     });"],[-1,"                "],[0,"\n       "]],"start1":15488,"start2":15488,"length1":32,"length2":16}]],"length":25879,"saved":false}
{"ts":1364585652945,"patch":[[{"diffs":[[0,"              }\n"],[1,"                }, function(err) {\n                    \n"],[0,"                "]],"start1":15461,"start2":15461,"length1":32,"length2":88}]],"length":25935,"saved":false}
{"ts":1364585710645,"patch":[[{"diffs":[[0,"                "],[1,"ElFinder.error({}, ERRORS.ERROR_OPEN, function(response) {\n                        response.error.push(err);\n                        uploadDeferred.reject(response);\n                    })"],[0,"\n               "]],"start1":15516,"start2":15516,"length1":32,"length2":220}]],"length":26123,"saved":false}
{"ts":1364585748992,"patch":[[{"diffs":[[0,"    }\n        }\n"],[1,"        iterateFilesList(0);\n"],[0,"    }\n}\n\n/**\n * "]],"start1":15749,"start2":15749,"length1":32,"length2":61}]],"length":26152,"saved":false}
{"ts":1364585769556,"patch":[[{"diffs":[[0,"sList(0);\n    }\n"],[1,"    return uploadDeferred.promise;\n"],[0,"}\n\n/**\n * Copy /"]],"start1":15784,"start2":15784,"length1":32,"length2":67}]],"length":26187,"saved":false}
{"ts":1364585773895,"patch":[[{"diffs":[[0,"              })"],[1,";"],[0,"\n               "]],"start1":15704,"start2":15704,"length1":32,"length2":33}]],"length":26188,"saved":false}
{"ts":1364586917976,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"\n/**\n * Remove directories / files\n * @param args command arguments.\n * @return a promise to remove and send a response.\n **/\nfunction rm(args) {\n    var targets = [];\n    if (!_.isArray(args.targets)) {\n        targets = args.targets;\n    } else {\n        targets.push(args.targets);\n    }\n    var result = {\n        removed: []\n    };\n    \n}\n"],[0,"/**\n * Save "]],"start1":12838,"start2":12838,"length1":24,"length2":368}]],"length":26532,"saved":false}
{"ts":1364586934760,"patch":[[{"diffs":[[0,"tion rm(args) {\n"],[1,"    var rmDeferred = Q.defer();\n"],[0,"    var targets "]],"start1":12980,"start2":12980,"length1":32,"length2":64},{"diffs":[[0,"};\n    \n"],[1,"    \n    \n"],[0,"}\n/**\n *"]],"start1":13216,"start2":13216,"length1":16,"length2":26}]],"length":26574,"saved":false}
{"ts":1364586964398,"patch":[[{"diffs":[[0,"   \n    "],[-1,"\n    "],[1,"_.each(targets, function(target, index, list) {\n                \n    });\n    return rmDeferred.promise;"],[0,"\n}\n/**\n "]],"start1":13220,"start2":13220,"length1":21,"length2":119}]],"length":26672,"saved":false}
{"ts":1364586967858,"patch":[[{"diffs":[[0,"\n           "],[-1,"     "],[0,"\n    });\n   "]],"start1":13275,"start2":13275,"length1":29,"length2":24}]],"length":26667,"saved":false}
{"ts":1364587073060,"patch":[[{"diffs":[[0,") {\n        "],[-1,"   "],[1,"var vol = volume(target);\n        if (!vol) {\n            ElFinder.error({}, ERRORS.ERROR_RM, function(response) {\n                response.error.push('#'+target);\n                response.error.push(ERRORS.ERROR_FILE_NOT_FOUND);\n                result.warning = response;\n                rmDeferred.reject(result);\n            });\n        } else {\n            \n        }"],[0,"\n    });\n   "]],"start1":13272,"start2":13272,"length1":27,"length2":395}]],"length":27035,"saved":false}
{"ts":1364587193100,"patch":[[{"diffs":[[0,"e {\n            "],[1,"vol.rm(target)\n            .then(function() {\n                rmDeferred.resolve(result);\n            }, function(err) {\n                ElFinder.error({}, err, function(response) {\n                    result.warning = response;\n                    rmDeferred.reject(result);\n                });\n            });"],[0,"\n        }\n    }"]],"start1":13629,"start2":13629,"length1":32,"length2":343}]],"length":27346,"saved":false}
{"ts":1364587216757,"patch":[[{"diffs":[[0,"en(function() {\n"],[1,"                result.removed.push(result);\n"],[0,"                "]],"start1":13675,"start2":13675,"length1":32,"length2":77}]],"length":27391,"saved":false}
{"ts":1364587236349,"patch":[[{"diffs":[[0,"se;\n"],[-1,"                rmDeferred.reject(result);\n"],[0,"    "]],"start1":13553,"start2":13553,"length1":51,"length2":8},{"diffs":[[0,"se;\n"],[-1,"                    rmDeferred.reject(result);\n"],[0,"    "]],"start1":13872,"start2":13872,"length1":55,"length2":8}]],"length":27301,"saved":false}
{"ts":1364587248401,"patch":[[{"diffs":[[0,"t);\n"],[-1,"                rmDeferred.resolve(result);\n"],[0,"    "]],"start1":13689,"start2":13689,"length1":52,"length2":8},{"diffs":[[0,"sult.warning"],[-1," = "],[1,".push("],[0,"response"],[1,")"],[0,";\n          "]],"start1":13807,"start2":13807,"length1":35,"length2":39}]],"length":27261,"saved":false}
{"ts":1364587263954,"patch":[[{"diffs":[[0,"ning"],[-1," = "],[1,".push("],[0,"response"],[1,")"],[0,";\n  "]],"start1":13540,"start2":13540,"length1":19,"length2":23}]],"length":27265,"saved":false}
{"ts":1364587282215,"patch":[[{"diffs":[[0,"ion(response) {\n"],[1,"                    response.error.push('#'+target);\n"],[0,"                "]],"start1":13773,"start2":13773,"length1":32,"length2":85}]],"length":27318,"saved":false}
{"ts":1364587343754,"patch":[[{"diffs":[[0,"};\n    \n    "],[-1,"_.each("],[1,"var list = "],[0,"targets"],[-1,","],[1,";\n   "],[0," function(ta"]],"start1":13216,"start2":13216,"length1":39,"length2":47},{"diffs":[[0,"function"],[-1,"(t"],[1," iterateT"],[0,"arget"],[-1,", "],[1,"s("],[0,"index"],[-1,", list) {"],[1,") {\n        var target = targets[index];"],[0,"\n       "]],"start1":13252,"start2":13252,"length1":39,"length2":77},{"diffs":[[0,");\n        }"],[1,"        "],[0,"\n    }"],[-1,");"],[0,"\n    return "]],"start1":13972,"start2":13972,"length1":32,"length2":38}]],"length":27370,"saved":false}
{"ts":1364587345304,"patch":[[{"diffs":[[0,"       }"],[-1,"        "],[0,"\n    }\n "]],"start1":13976,"start2":13976,"length1":24,"length2":16}]],"length":27362,"saved":false}
{"ts":1364587372669,"patch":[[{"diffs":[[0,"push(response);\n"],[1,"                iterateTargets(++index);\n"],[0,"            });\n"]],"start1":13591,"start2":13591,"length1":32,"length2":73},{"diffs":[[0,"            });\n"],[-1,""],[0,"        } else {"]],"start1":13648,"start2":13648,"length1":32,"length2":32},{"diffs":[[0,"d.push(result);\n"],[1,"                iterateTargets(++index);                \n"],[0,"            }, f"]],"start1":13768,"start2":13768,"length1":32,"length2":89},{"diffs":[[0,"sh('#'+target);\n"],[-1,""],[0,"                "]],"start1":13970,"start2":13970,"length1":32,"length2":32},{"diffs":[[0,"push(response);\n"],[1,"                    iterateTargets(++index);                    \n"],[0,"                "]],"start1":14021,"start2":14021,"length1":32,"length2":97}]],"length":27525,"saved":false}
{"ts":1364587401971,"patch":[[{"diffs":[[0,"argets(index) {\n"],[1,"        if (index >= _.size(list) -1) {\n            rmDeferred.resolve(result);\n        }\n"],[0,"        var targ"]],"start1":13269,"start2":13269,"length1":32,"length2":122}]],"length":27615,"saved":false}
{"ts":1364587411086,"patch":[[{"diffs":[[0,"    }\n    }\n"],[1,"    iterateTargets(0);\n"],[0,"    return r"]],"start1":14232,"start2":14232,"length1":24,"length2":47}]],"length":27638,"saved":false}
{"ts":1364587459694,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"/**\n * Duplicate file\n * @param args the command arguments.\n * @return a response object.\n **/\nfunction duplicate(args) {\n    var dupDeferred = Q.defer();\n    var targets = [];\n    if (!_.isArray(args.targets)) {\n        targets = args.targets;\n    } else {\n        targets.push(args.targets);\n    }    \n}\n"],[0,"\n/**\n * Remo"]],"start1":12838,"start2":12838,"length1":24,"length2":330}]],"length":27944,"saved":false}
{"ts":1364587477316,"patch":[[{"diffs":[[0,");\n    }"],[1,"\n"],[0,"    "],[1,"var result = {\n        'added': []\n    }"],[0,"\n}\n\n/**\n"]],"start1":13141,"start2":13141,"length1":20,"length2":61}]],"length":27985,"saved":false}
{"ts":1364587519825,"patch":[[{"diffs":[[0,"': []\n    }\n"],[1,"    var suffix = (!_.isUndefined(args.suffix) && !_.isNull(args.suffix)) ? 'copy': args.suffix;\n    \n"],[0,"}\n\n/**\n * Re"]],"start1":13183,"start2":13183,"length1":24,"length2":125}]],"length":28086,"saved":false}
{"ts":1364587896569,"patch":[[{"diffs":[[0,"suffix;\n"],[1,"    var list = targets;\n    function iterateTargets(index) {\n        if (index >= _.size(list) -1) {\n            dupDeferred.resolve(result);\n        }\n        var target = targets[index];\n        var vol = volume(target);\n        if (!vol) {\n            ElFinder.error({}, ERRORS.ERROR_RM, function(response) {\n                response.error.push('#'+target);\n                response.error.push(ERRORS.ERROR_FILE_NOT_FOUND);\n                result.warning.push(response);\n                iterateTargets(++index);\n            });\n        } else {\n            vol.rm(target)\n            .then(function() {\n                result.removed.push(result);\n                iterateTargets(++index);                \n            }, function(err) {\n                ElFinder.error({}, err, function(response) {\n                    response.error.push('#'+target);\n                    result.warning.push(response);\n                    iterateTargets(++index);                    \n                });\n            });\n        }\n    }\n    iterateTargets(0);\n"],[0,"    \n}\n\n"]],"start1":13283,"start2":13283,"length1":16,"length2":1060}]],"length":29130,"saved":false}
{"ts":1364587947803,"patch":[[{"diffs":[[0,"t);\n        "],[-1,"if (!vol"],[1,"var src = vol.file(target);\n        if (!vol || !src"],[0,") {\n        "]],"start1":13510,"start2":13510,"length1":32,"length2":76},{"diffs":[[0,"({}, ERRORS."],[-1,"ERROR_RM"],[1,"COPY"],[0,", function(r"]],"start1":13604,"start2":13604,"length1":32,"length2":28}]],"length":29170,"saved":false}
{"ts":1364587958152,"patch":[[{"diffs":[[0,"            vol."],[-1,"rm"],[1,"duplicate"],[0,"(target)\n       "]],"start1":13879,"start2":13879,"length1":34,"length2":41}]],"length":29177,"saved":false}
{"ts":1364587965578,"patch":[[{"diffs":[[0,"icate(target"],[1,", suffix"],[0,")\n          "]],"start1":13899,"start2":13899,"length1":24,"length2":32}]],"length":29185,"saved":false}
{"ts":1364587973625,"patch":[[{"diffs":[[0,"         result."],[-1,"remov"],[1,"add"],[0,"ed.push(result);"]],"start1":13959,"start2":13959,"length1":37,"length2":35}]],"length":29183,"saved":false}
{"ts":1364587984204,"patch":[[{"diffs":[[0," .then(function("],[1,"file"],[0,") {\n            "]],"start1":13932,"start2":13932,"length1":32,"length2":36}]],"length":29187,"saved":false}
{"ts":1364587996228,"patch":[[{"diffs":[[0,"sult.added.push("],[-1,"result"],[1,"file"],[0,");\n             "]],"start1":13974,"start2":13974,"length1":38,"length2":36}]],"length":29185,"saved":false}
{"ts":1364588009790,"patch":[[{"diffs":[[0," .then(function("],[1,"file"],[0,") {\n            "]],"start1":15356,"start2":15356,"length1":32,"length2":36},{"diffs":[[0,"ed.push("],[-1,"result"],[1,"file"],[0,");\n     "]],"start1":15408,"start2":15408,"length1":22,"length2":20}]],"length":29187,"saved":false}
{"ts":1364588016760,"patch":[[{"diffs":[[0," .then(function("],[-1,"f"],[1,"removedF"],[0,"ile) {\n         "]],"start1":15356,"start2":15356,"length1":33,"length2":40},{"diffs":[[0,"lt.removed.push("],[-1,"f"],[1,"removedF"],[0,"ile);\n          "]],"start1":15407,"start2":15407,"length1":33,"length2":40}]],"length":29201,"saved":false}
{"ts":1364588032447,"patch":[[{"diffs":[[0,"0);\n    "],[1,"return dupDeferred.promise;"],[0,"\n}\n\n/**\n"]],"start1":14386,"start2":14386,"length1":16,"length2":43}]],"length":29228,"saved":false}
{"ts":1364588062189,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"\n"],[0,"/**\n * Dupli"]],"start1":12838,"start2":12838,"length1":24,"length2":25}]],"length":29229,"saved":false}
{"ts":1364588323191,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"/**\n * Rename file\n * @param args the command arguments.\n * @return a promise to rename with a response object.\n **/\n function rename(args) {\n    var renDeferred = Q.defer();\n    var target = args.target;\n    var name = args.name;\n    var vol = volume(target);\n    var rm = vol.file(target);\n    \n    if (!vol || !rm) {\n        ElFinder.error({}, [ERRORS.ERROR_RENAME, '#'+target, ERRORS.ERROR_FILE_NOT_FOUND], function(response) {\n            renDeferred.reject(response);\n        });\n    } else {\n        rm.realpath = vol.realpath(target);\n        var file = vol.rename(target, name);\n        if (!file) {\n            ElFinder.error({}, ERRORS.ERROR_RENAME, function(response) {\n                \n            });\n        }\n    }\n }\n "],[0,"\n/**\n * Dupl"]],"start1":12838,"start2":12838,"length1":24,"length2":759},{"diffs":[[0,"s.\n * @return a "],[1,"promise to duplicate with a "],[0,"response object."]],"start1":13643,"start2":13643,"length1":32,"length2":60}]],"length":29992,"saved":false}
{"ts":1364588389331,"patch":[[{"diffs":[[0,"inder.error({}, "],[1,"["],[0,"ERRORS.ERROR_REN"]],"start1":13474,"start2":13474,"length1":32,"length2":33},{"diffs":[[0,"_RENAME,"],[1," rm.name, vol.error()],"],[0," functio"]],"start1":13503,"start2":13503,"length1":16,"length2":39},{"diffs":[[0,"    "],[-1,"\n            });\n        }\n    }"],[1,"renDeferred.reject(response);\n            });\n        } else {\n            renDeferred.resolve({'added': file, 'removed': rm});\n        }\n    }\n    return renDeferred.promise;"],[0,"\n }\n"]],"start1":13568,"start2":13568,"length1":40,"length2":183}]],"length":30159,"saved":false}
{"ts":1364588444944,"patch":[[{"diffs":[[0,"et);\n       "],[-1," var file ="],[0," vol.rename("]],"start1":13388,"start2":13388,"length1":35,"length2":24},{"diffs":[[0,"arget, name)"],[-1,";\n"],[1,".then(function(file) {\n    "],[0,"        if ("]],"start1":13413,"start2":13413,"length1":26,"length2":51},{"diffs":[[0,"   if (!file) {\n"],[1,"    "],[0,"            ElFi"]],"start1":13457,"start2":13457,"length1":32,"length2":36},{"diffs":[[0,"                "],[1,"    "],[0,"renDeferred.reje"]],"start1":13574,"start2":13574,"length1":32,"length2":36},{"diffs":[[0,"e);\n            "],[-1,"});\n"],[1,"    });\n    "],[0,"        } else {"]],"start1":13620,"start2":13620,"length1":36,"length2":44},{"diffs":[[0,"e {\n            "],[1,"   "],[1," "],[0,"renDeferred.reso"]],"start1":13661,"start2":13661,"length1":32,"length2":36},{"diffs":[[0,": rm});\n        "],[-1,"}"],[1,"    }\n        }, function(err) {\n            \n        });"],[0,"\n    }\n    retur"]],"start1":13726,"start2":13726,"length1":33,"length2":89}]],"length":30249,"saved":false}
{"ts":1364588475859,"patch":[[{"diffs":[[0,") {\n            "],[1,"ElFinder.error({}, [ERRORS.ERROR_RENAME, rm.name, vol.error()], function(response) {\n                renDeferred.reject(response);                \n            });"],[0,"\n        });\n   "]],"start1":13771,"start2":13771,"length1":32,"length2":194}]],"length":30411,"saved":false}
{"ts":1364588637726,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"/**\n * Create an empty file\n * \n * @param args the command arguments.\n * @return a promise to create an empty file with a response object.\n **/\nfunction mkfile(args) {\n    var mkFileDeferred = Q.defer();\n    var target = args.target;\n    var name = args.name;\n    var vol = volume(target);\n    \n    if (!vol) {\n        ElFinder.error({}, [ERRORS.ERROR_MKFILE, name, ERRORS.ERROR_TRGDIR_NOT_FOUND, '#'+target], function(response) {\n            mkFileDeferred.reject(response);            \n        });\n    }\n}\n\n"],[0,"/**\n * Renam"]],"start1":12838,"start2":12838,"length1":24,"length2":533}]],"length":30920,"saved":false}
{"ts":1364588755734,"patch":[[{"diffs":[[0,"   \n        });\n"],[1,"    } else {\n        vol.mkfile(target, name).then(function(file) {\n            mkFileDeferred.resolve({'added': file});            \n        }, function(err) {\n            ElFinder.error({}, [ERRORS.ERROR_MKFILE, name, err], function(response) {\n                mkFileDeferred.reject(response);\n            });\n        });\n"],[0,"    }\n}\n\n/**\n * "]],"start1":13334,"start2":13334,"length1":32,"length2":355}]],"length":31243,"saved":false}
{"ts":1364588793414,"patch":[[{"diffs":[[0,"      });\n    }\n"],[1,"    return mkFileDeferred.promise;\n"],[0,"}\n\n/**\n * Rename"]],"start1":13663,"start2":13663,"length1":32,"length2":67}]],"length":31278,"saved":false}
{"ts":1364588836048,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"/**\n * Create an empty directory\n * \n * @param args the command arguments.\n * @return a promise to create an empty file with a response object.\n **/\nfunction mkfile(args) {\n    var mkDirDeferred = Q.defer();\n    var target = args.target;\n    var name = args.name;\n    var vol = volume(target);\n    \n    if (!vol) {\n        ElFinder.error({}, [ERRORS.ERROR_MKDIR, name, ERRORS.ERROR_TRGDIR_NOT_FOUND, '#'+target], function(response) {\n            mkFileDeferred.reject(response);            \n        });\n    } else {\n        vol.mkfile(target, name).then(function(file) {\n            mkFileDeferred.resolve({'added': file});            \n        }, function(err) {\n            ElFinder.error({}, [ERRORS.ERROR_MKFILE, name, err], function(response) {\n                mkFileDeferred.reject(response);\n            });\n        });\n    }\n    return mkFileDeferred.promise;\n}\n\n\n"],[0,"/**\n * Creat"]],"start1":12838,"start2":12838,"length1":24,"length2":895}]],"length":32149,"saved":false}
{"ts":1364588843606,"patch":[[{"diffs":[[0,"{\n            mk"],[-1,"File"],[1,"Dir"],[0,"Deferred.reject("]],"start1":13282,"start2":13282,"length1":36,"length2":35},{"diffs":[[0,"{\n            mk"],[-1,"File"],[1,"Dir"],[0,"Deferred.resolve"]],"start1":13418,"start2":13418,"length1":36,"length2":35},{"diffs":[[0,"              mk"],[-1,"File"],[1,"Dir"],[0,"Deferred.reject("]],"start1":13599,"start2":13599,"length1":36,"length2":35},{"diffs":[[0," }\n    return mk"],[-1,"File"],[1,"Dir"],[0,"Deferred.promise"]],"start1":13676,"start2":13676,"length1":36,"length2":35}]],"length":32145,"saved":false}
{"ts":1364588851354,"patch":[[{"diffs":[[0,"[ERRORS.ERROR_MK"],[-1,"FILE"],[1,"DIR"],[0,", name, err], fu"]],"start1":13542,"start2":13542,"length1":36,"length2":35}]],"length":32144,"saved":false}
{"ts":1364588859037,"patch":[[{"diffs":[[0,").then(function("],[-1,"file"],[1,"dir"],[0,") {\n            "]],"start1":13396,"start2":13396,"length1":36,"length2":35},{"diffs":[[0,"solve({'added': "],[-1,"file"],[1,"dir"],[0,"});            \n"]],"start1":13447,"start2":13447,"length1":36,"length2":35}]],"length":32142,"saved":false}
{"ts":1364589264398,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"/**\n * Count total files size\n * \n * @param args the command arguments.\n * @return a promise to count the files with a response object.\n **/\nfunction size(args) {\n    var sizeDeferred = Q.defer();\n    var size = 0;\n    \n    function iterateTargets(index) {\n        var target = args.targets[index];\n        var vol = volume(target);\n        var file = vol.file(target);\n        if (!vol || !file || !_.has(file, 'read')) {\n            ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target], function(response) {\n                sizeDeferred.reject(response);\n            });\n        } else {\n            vol.size(target).then(function(thisSize) {\n                size += thisSize;\n                \n            }, function(err) {\n                ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target, err], function(response) {\n                    sizeDeferred.reject(response);\n                });                \n            })\n        }\n    }\n}\n\n"],[0,"/**\n * Creat"]],"start1":12838,"start2":12838,"length1":24,"length2":964}]],"length":33082,"saved":false}
{"ts":1364589318940,"patch":[[{"diffs":[[0,"    "],[-1,"\n    function iterateTargets(index) {"],[1,"var targetSize = _.size(args.targets) - 1;\n    \n    function iterateTargets(index) {\n        if (index >= targetSize) {\n            sizeDeferred.resolve(size);\n        }"],[0,"\n   "]],"start1":13065,"start2":13065,"length1":45,"length2":177},{"diffs":[[0,"                "],[-1,""],[0,""],[1,"iterateTargets(++index);"],[0,"\n            }, "]],"start1":13659,"start2":13659,"length1":32,"length2":56},{"diffs":[[0,"\n        }\n    }"],[-1,""],[0,""],[1,"\n    iterateTargets(0);\n    return sizeDeferred.promise;"],[0,"\n}\n\n/**\n * Creat"]],"start1":13926,"start2":13926,"length1":32,"length2":88}]],"length":33294,"saved":false}
{"ts":1364589320979,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"\n\n"],[0,"/**\n * Count"]],"start1":12838,"start2":12838,"length1":24,"length2":26}]],"length":33296,"saved":false}
{"ts":1364589445318,"patch":[[{"diffs":[[0,"   \n};\n\n"],[1,"/**\n * Required to output file in browser when volume URL is not set.\n * \n * @param args the command arguments.\n * @return a promise to return the file with a response.\n **/\nfunction file(args) {\n    var target = args.target;\n    var download = (!_.isUndefined(args.download) && !_.isNull(args.download))\n    \n}"],[0,"\n\n/**\n *"]],"start1":12842,"start2":12842,"length1":16,"length2":327}]],"length":33607,"saved":false}
{"ts":1364596310737,"patch":[[{"diffs":[[0,"d))\n    "],[1,"var h403 = 'HTTP/1.x 403 Access Denied';\n    var h404 = 'HTTP/1.x 404 Not Found';\n    \n    var vol = volume(target);\n    if (!vol) {\n        ElFinder.error(})\n    }"],[0,"\n}\n\n/**\n"]],"start1":13151,"start2":13151,"length1":16,"length2":180}]],"length":33771,"saved":false}
{"ts":1364596464667,"patch":[[{"diffs":[[0,"on file(args) {\n"],[1,"    var fileDeferred = Q.defer();\n"],[0,"    var target ="]],"start1":13030,"start2":13030,"length1":32,"length2":66},{"diffs":[[0," = args.target;\n"],[-1,""],[0,"    var download"]],"start1":13094,"start2":13094,"length1":32,"length2":32},{"diffs":[[0,"volume(target);\n"],[1,"    var file = vol.file(target);\n    \n"],[0,"    if (!vol) {\n"]],"start1":13294,"start2":13294,"length1":32,"length2":70},{"diffs":[[0,"   \n    if (!vol"],[1," || !file"],[0,") {\n        ElFi"]],"start1":13344,"start2":13344,"length1":32,"length2":41},{"diffs":[[0,"r.error("],[1,"{}, \"FileNotFound\", function(response) {\n            response.header = h404;\n            response.raw = true;\n            fileDeferred.reject(response);\n        });\n    } else {\n        if (!file.read) {\n            ElFinder.error({}, 'Access Denied', function(response) {\n                response.header = h403;\n                response.raw = true;\n                fileDeferred.reject(response);\n            });\n        "],[0,"}"],[-1,")"],[0,"\n    }\n}"]],"start1":13388,"start2":13388,"length1":18,"length2":438}]],"length":34272,"saved":false}
{"ts":1364596506775,"patch":[[{"diffs":[[0,"l.file(target);\n"],[1,"    var fp = vol.open(target);\n"],[0,"    \n    if (!vo"]],"start1":13327,"start2":13327,"length1":32,"length2":63},{"diffs":[[0,"   });\n        }"],[1," else if ()"],[0,"\n    }\n}\n\n/**\n *"]],"start1":13833,"start2":13833,"length1":32,"length2":43}]],"length":34314,"saved":false}
{"ts":1364596510594,"patch":[[{"diffs":[[0,"t);\n"],[-1,"    var fp = vol.open(target);\n"],[0,"    "]],"start1":13339,"start2":13339,"length1":39,"length2":8}]],"length":34283,"saved":false}
{"ts":1364596805202,"patch":[[{"diffs":[[0,"t);\n"],[-1,"    var file = vol.file(target);\n"],[0,"    "]],"start1":13306,"start2":13306,"length1":41,"length2":8},{"diffs":[[0,"if (!vol"],[-1," || !file"],[0,") {\n    "]],"start1":13319,"start2":13319,"length1":25,"length2":16},{"diffs":[[0,"e);\n        });\n"],[-1,""],[0,"    } else {\n   "]],"start1":13503,"start2":13503,"length1":32,"length2":32},{"diffs":[[0,");\n    } else {\n"],[1,"        vol.file(target).then(function(file) {\n            return file;\n        }, function(err) {\n            ElFinder.error({}, 'File not found', function(response) {\n                response.header = h404;\n                response.raw = true;\n                return response;\n            });\n        }).then(function(file) {\n                        \n        })\n        \n"],[0,"        if (!fil"]],"start1":13516,"start2":13516,"length1":32,"length2":405}]],"length":34614,"saved":false}
{"ts":1364596823866,"patch":[[{"diffs":[[0,"et)."],[-1,"then(function(file) {\n            return file;\n        }, "],[1,"fail("],[0,"func"]],"start1":13553,"start2":13553,"length1":66,"length2":13}]],"length":34561,"saved":false}
{"ts":1364596826816,"patch":[[{"diffs":[[0,"            "],[-1,"            "],[0,"\n        })\n"]],"start1":13807,"start2":13807,"length1":36,"length2":24}]],"length":34549,"saved":false}
{"ts":1364596927007,"patch":[[{"diffs":[[0,") {\n            "],[1,"if (!file.read) {\n                ElFinder.error({}, 'Access Denied', function(response) {\n                    response.header = h403;\n                    response.raw = true;\n                    Q.reject(false);\n                });\n            }"],[0,"\n        })\n    "]],"start1":13803,"start2":13803,"length1":32,"length2":278}]],"length":34795,"saved":false}
{"ts":1364597092177,"patch":[[{"diffs":[[0,"et)."],[-1,"fail(function(err) {\n            ElFinder.error({}, 'File not found', function(response) {\n                response.header = h404;\n                response.raw = true;\n                return response;\n            });\n        })."],[1,"\n        "],[0,"then"]],"start1":13553,"start2":13553,"length1":236,"length2":17},{"diffs":[[0,"   }"],[-1,")\n        \n        if (!file.read"],[1,", function(err"],[0,") {\n"]],"start1":13852,"start2":13852,"length1":41,"length2":22},{"diffs":[[0,".error({}, '"],[-1,"Access Denie"],[1,"File not foun"],[0,"d', function"]],"start1":13894,"start2":13894,"length1":36,"length2":37},{"diffs":[[0,"nse.header = h40"],[-1,"3"],[1,"4"],[0,";\n              "]],"start1":13965,"start2":13965,"length1":33,"length2":33},{"diffs":[[0,"    "],[-1,"fileDeferred.reject("],[1,"return "],[0,"response"],[-1,")"],[0,";\n  "]],"start1":14033,"start2":14033,"length1":37,"length2":23},{"diffs":[[0,"   }"],[-1," else if ()"],[1,");\n        "],[0,"\n   "]],"start1":14075,"start2":14075,"length1":19,"length2":19}]],"length":34544,"saved":false}
{"ts":1364597183923,"patch":[[{"diffs":[[0,"        "],[-1,"Q"],[1,"this"],[0,".reject("]],"start1":13788,"start2":13788,"length1":17,"length2":20}]],"length":34547,"saved":false}
{"ts":1364597413339,"patch":[[{"diffs":[[0,"        "],[1,"fail(function(err) {\n            ElFinder.error({}, 'File not found', function(response) {\n                response.header = h404;\n                response.raw = true;\n                return response;\n            });\n        })."],[0,"then(fun"]],"start1":13558,"start2":13558,"length1":16,"length2":244},{"diffs":[[0,"   }"],[-1,", function(err) {\n            ElFinder.error({}, 'File not found', function(response) {\n                response.header = h404;\n                response.raw = true;\n                return response;\n            });\n        });"],[1,")"],[0,"\n   "]],"start1":14083,"start2":14083,"length1":233,"length2":9}]],"length":34551,"saved":false}
{"ts":1364597423759,"patch":[[{"diffs":[[0,"    "],[-1,"this"],[1,"return Q"],[0,".reject("],[-1,"fal"],[1,"respon"],[0,"se);"]],"start1":14020,"start2":14020,"length1":23,"length2":30}]],"length":34558,"saved":false}
{"ts":1364597449326,"patch":[[{"diffs":[[0,"me(target);\n    "],[1,"var file;"],[0,"\n    if (!vol) {"]],"start1":13298,"start2":13298,"length1":32,"length2":41},{"diffs":[[0,"            });\n"],[1,"            } else {\n                return file;\n"],[0,"            }\n  "]],"start1":14064,"start2":14064,"length1":32,"length2":82}]],"length":34617,"saved":false}
{"ts":1364597471291,"patch":[[{"diffs":[[0,"et);\n    var"],[1," mainFile ="],[0," file;\n    i"]],"start1":13305,"start2":13305,"length1":24,"length2":35},{"diffs":[[0,"       } else {\n"],[1,"                \n"],[0,"                "]],"start1":14096,"start2":14096,"length1":32,"length2":49}]],"length":34645,"saved":false}
{"ts":1364597475155,"patch":[[{"diffs":[[0,"mainFile"],[-1," = file"],[0,";\n    if"]],"start1":13318,"start2":13318,"length1":23,"length2":16}]],"length":34638,"saved":false}
{"ts":1364597481503,"patch":[[{"diffs":[[0,"                "],[1,"mainFile = file;"],[0,"\n               "]],"start1":14105,"start2":14105,"length1":32,"length2":48}]],"length":34654,"saved":false}
{"ts":1364597506585,"patch":[[{"diffs":[[0,"t);\n"],[-1,"    var mainFile;\n"],[0,"    "]],"start1":13306,"start2":13306,"length1":26,"length2":8},{"diffs":[[0,"    "],[-1,"mainFile ="],[1,"return"],[0," fil"]],"start1":14099,"start2":14099,"length1":18,"length2":14},{"diffs":[[0,"        "],[1,"}\n"],[0,"    "],[-1,"return file;"],[1,"    }).then(function() {"],[0,"\n       "]],"start1":14120,"start2":14120,"length1":32,"length2":46},{"diffs":[[0,") {\n            "],[-1,"}"],[0,"\n        })\n    "]],"start1":14155,"start2":14155,"length1":33,"length2":32}]],"length":34645,"saved":false}
{"ts":1364597623909,"patch":[[{"diffs":[[0,"Not Found';\n"],[1,"    var disp;\n    var mime;\n"],[0,"    \n    var"]],"start1":13263,"start2":13263,"length1":24,"length2":52},{"diffs":[[0,"    }).then("],[-1,"function("],[1,"vol.open(target))\n        .then(function(fp) {\n            if (download) {\n                disp = 'attachment'\n                mime = 'application/octet-stream';\n            } else {\n                \n            }\n        }, function(err"],[0,") {\n        "]],"start1":14162,"start2":14162,"length1":33,"length2":261},{"diffs":[[0,"     \n        })"],[1,";"],[0,"\n        \n    }\n"]],"start1":14422,"start2":14422,"length1":32,"length2":33}]],"length":34902,"saved":false}
{"ts":1364597664272,"patch":[[{"diffs":[[0,") {\n            "],[1,"ElFinder.error({}, 'File not found', function(response) {\n                response.header = h404;\n                response.raw = true;\n                return Q.reject(response);\n            });"],[0,"\n        });\n   "]],"start1":14411,"start2":14411,"length1":32,"length2":225}]],"length":35095,"saved":false}
{"ts":1364597773415,"patch":[[{"diffs":[[0,"                "],[1,"disp = file.mime.match(/^(image|text)/i) || file.mime == 'application/x-shockwave-flash' \n                    ? 'inline'\n                    : 'attachment';"],[0,"\n            }\n "]],"start1":14357,"start2":14357,"length1":32,"length2":188}]],"length":35251,"saved":false}
{"ts":1364597778088,"patch":[[{"diffs":[[0,"hment';\n"],[1,"                    \n"],[0,"        "]],"start1":14522,"start2":14522,"length1":16,"length2":37}]],"length":35272,"saved":false}
{"ts":1364597785096,"patch":[[{"diffs":[[0,"                "],[-1,"    "],[1,"mime = file.mime;"],[0,"\n            }\n "]],"start1":14530,"start2":14530,"length1":36,"length2":49}]],"length":35285,"saved":false}
{"ts":1364597786732,"patch":[[{"diffs":[[0,";\n            }\n"],[1,"            \n"],[0,"        }, funct"]],"start1":14562,"start2":14562,"length1":32,"length2":45}]],"length":35298,"saved":false}
{"ts":1364597805200,"patch":[[{"diffs":[[0,";\n            }\n"],[1,"            var filenameEncoded = encodeURI(file.name);\n"],[0,"            \n   "]],"start1":14562,"start2":14562,"length1":32,"length2":88}]],"length":35354,"saved":false}
{"ts":1364597862001,"patch":[[{"diffs":[[0,"e);\n            "],[1,"if (!_.contains(filenameEncoded, '%')) {\n                \n            }"],[0,"\n        }, func"]],"start1":14630,"start2":14630,"length1":32,"length2":103}]],"length":35425,"saved":false}
{"ts":1364597935019,"patch":[[{"diffs":[[0,"  var mime;\n"],[1,"    var filename;\n"],[0,"    \n    var"]],"start1":13291,"start2":13291,"length1":24,"length2":42},{"diffs":[[0,"f (!"],[-1,"_.contains("],[0,"file"]],"start1":14665,"start2":14665,"length1":19,"length2":8},{"diffs":[[0,"eEncoded"],[-1,", "],[1,".indexOf("],[0,"'%')) {\n"]],"start1":14676,"start2":14676,"length1":18,"length2":25},{"diffs":[[0,") {\n            "],[-1,"    "],[0,"\n            }\n "]],"start1":14697,"start2":14697,"length1":36,"length2":32}]],"length":35435,"saved":false}
{"ts":1364597957471,"patch":[[{"diffs":[[0,") {\n            "],[1,"    filename = 'filename=\"' + file.name + '\"';"],[0,"\n            }\n "]],"start1":14697,"start2":14697,"length1":32,"length2":78}]],"length":35481,"saved":false}
{"ts":1364598062930,"patch":[[{"diffs":[[0," + '\"';\n"],[1,"            } else {\n                \n"],[0,"        "]],"start1":14752,"start2":14752,"length1":16,"length2":54}]],"length":35519,"saved":false}
{"ts":1364598077349,"patch":[[{"diffs":[[0,"e);\n"],[-1,"            if (!filenameEncoded.indexOf('%')) {\n                filename = 'filename=\"' + file.name + '\"';\n            } else {\n                \n            }"],[0,"\n   "]],"start1":14648,"start2":14648,"length1":167,"length2":8}]],"length":35360,"saved":false}
{"ts":1364598086086,"patch":[[{"diffs":[[0,";\n            }\n"],[1,"            // Just doing uri encoded filename for now.\n"],[0,"            var "]],"start1":14580,"start2":14580,"length1":32,"length2":88},{"diffs":[[0,".name);\n"],[1,"    "],[0,"\n       "]],"start1":14700,"start2":14700,"length1":16,"length2":20}]],"length":35420,"saved":false}
{"ts":1364598087646,"patch":[[{"diffs":[[0,".name);\n    "],[1,"        "],[0,"\n        }, "]],"start1":14700,"start2":14700,"length1":24,"length2":32}]],"length":35428,"saved":false}
{"ts":1364598100587,"patch":[[{"diffs":[[0," for now"],[1," until I figure out how we'll access\n            // the user-agent string"],[0,".\n      "]],"start1":14642,"start2":14642,"length1":16,"length2":89}]],"length":35501,"saved":false}
{"ts":1364598105005,"patch":[[{"diffs":[[0,".name);\n"],[-1,"            \n"],[0,"        "]],"start1":14773,"start2":14773,"length1":29,"length2":16}]],"length":35488,"saved":false}
{"ts":1364598312305,"patch":[[{"diffs":[[0,"URI(file.name);\n"],[1,"            return {'fp': fp, 'filename': filenameEncoded, 'disp': disp, 'size': size};\n"],[0,"        }, funct"]],"start1":14765,"start2":14765,"length1":32,"length2":120},{"diffs":[[0,"            });\n"],[1,"        }).then(function(resultargs) {\n            var result = {\n                'volume': vol,\n                'pointer': resultargs[0],\n                'info': resultargs[1],\n                'header': [\n                    'Content-Type: ' + mime,\n                    'Content-Disposition: ' + disp + '; ' + filename,\n                    \n                ]\n            };    \n"],[0,"        });\n    "]],"start1":15086,"start2":15086,"length1":32,"length2":411}]],"length":35955,"saved":false}
{"ts":1364598346817,"patch":[[{"diffs":[[0,"disp"],[-1,", 'size': size"],[0,"};\n "]],"start1":14848,"start2":14848,"length1":22,"length2":8}]],"length":35941,"saved":false}
{"ts":1364598372330,"patch":[[{"diffs":[[0,"fp': fp,"],[1," 'info': info,"],[0," 'filena"]],"start1":14802,"start2":14802,"length1":16,"length2":30},{"diffs":[[0,"sultargs"],[-1,"[0]"],[1,".fp"],[0,",\n      "]],"start1":15228,"start2":15228,"length1":19,"length2":19},{"diffs":[[0,"sultargs"],[-1,"[1]"],[1,".info"],[0,",\n      "]],"start1":15267,"start2":15267,"length1":19,"length2":21}]],"length":35957,"saved":false}
{"ts":1364598385059,"patch":[[{"diffs":[[0," fp,"],[-1," 'info': info,"],[0," 'fi"]],"start1":14806,"start2":14806,"length1":22,"length2":8}]],"length":35943,"saved":false}
{"ts":1364598403210,"patch":[[{"diffs":[[0,"  var mime;\n"],[1,"    var file;\n"],[0,"    var file"]],"start1":13291,"start2":13291,"length1":24,"length2":38}]],"length":35957,"saved":false}
{"ts":1364598409500,"patch":[[{"diffs":[[0,"me;\n"],[-1,"    var file;\n"],[0,"    "]],"start1":13299,"start2":13299,"length1":22,"length2":8}]],"length":35943,"saved":false}
{"ts":1364598423489,"patch":[[{"diffs":[[0,").then(function("],[-1,"f"],[1,"theF"],[0,"ile) {\n         "]],"start1":13833,"start2":13833,"length1":33,"length2":36},{"diffs":[[0,"   if (!"],[-1,"f"],[1,"theF"],[0,"ile.read"]],"start1":13869,"start2":13869,"length1":17,"length2":20}]],"length":35949,"saved":false}
{"ts":1364598427934,"patch":[[{"diffs":[[0," return "],[-1,"f"],[1,"theF"],[0,"ile;\n   "]],"start1":14154,"start2":14154,"length1":17,"length2":20}]],"length":35952,"saved":false}
{"ts":1364598445868,"patch":[[{"diffs":[[0,"r filename;\n"],[1,"    var theFile;\n"],[0,"    \n    var"]],"start1":13309,"start2":13309,"length1":24,"length2":41}]],"length":35969,"saved":false}
{"ts":1364598464658,"patch":[[{"diffs":[[0,"ion("],[1,"f) {\n            f = "],[0,"theFile"],[-1,") {"],[1,";"],[0,"\n   "]],"start1":13862,"start2":13862,"length1":18,"length2":37}]],"length":35988,"saved":false}
{"ts":1364598470463,"patch":[[{"diffs":[[0,"    "],[-1," f ="],[0," theFile"],[1," = f"],[0,";\n  "]],"start1":13878,"start2":13878,"length1":20,"length2":20}]],"length":35988,"saved":false}
{"ts":1364598479214,"patch":[[{"diffs":[[0,"o': "],[-1,"resultargs.info"],[1,"theFile"],[0,",\n  "]],"start1":15292,"start2":15292,"length1":23,"length2":15}]],"length":35980,"saved":false}
{"ts":1364598501300,"patch":[[{"diffs":[[0," '; ' + "],[1,"resultargs."],[0,"filename"]],"start1":15430,"start2":15430,"length1":16,"length2":27},{"diffs":[[0,"                "],[1,"''"],[0,"\n               "]],"start1":15463,"start2":15463,"length1":32,"length2":34}]],"length":35993,"saved":false}
{"ts":1364598539224,"patch":[[{"diffs":[[0,"       '"],[1,"Content-Location: ' + theFile.name,\n                    'Content-Transfer-Encoding: binary',\n                    'Content-Length: ' + theFile.size,\n                    'Connection: Close"],[0,"'\n      "]],"start1":15472,"start2":15472,"length1":16,"length2":202}]],"length":36179,"saved":false}
{"ts":1364598543438,"patch":[[{"diffs":[[0,"      };"],[1,"\n        "],[0,"    \n   "]],"start1":15692,"start2":15692,"length1":16,"length2":25}]],"length":36188,"saved":false}
{"ts":1364598556422,"patch":[[{"diffs":[[0,"    \n        });"],[-1,"\n     "],[0,"   \n    }\n}\n\n/**"]],"start1":15709,"start2":15709,"length1":38,"length2":32}]],"length":36182,"saved":false}
{"ts":1364598593361,"patch":[[{"diffs":[[0,"    "],[-1,"\n        });   \n    }"],[1,"fileDeferred.resolve(result);\n        });   \n    }\n    return fileDeferred.promise;"],[0,"\n}\n\n"]],"start1":15709,"start2":15709,"length1":29,"length2":91}]],"length":36244,"saved":false}
{"ts":1364598597312,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"\n\n"],[0,"/**\n * Requi"]],"start1":12838,"start2":12838,"length1":24,"length2":26}]],"length":36246,"saved":false}
{"ts":1364598656047,"patch":[[{"diffs":[[0,"   \n};\n\n"],[1,"/**\n * Return new created thumbnails list\n * \n * @param args the command arguments.\n * @return a promise to create thumbnails and return the list.\n **/\nfunction tmb(args) {\n    var result = {'images': []};\n    var targets = args.targets;\n    \n}"],[0,"\n\n/**\n *"]],"start1":12842,"start2":12842,"length1":16,"length2":260}]],"length":36490,"saved":false}
{"ts":1364598674188,"patch":[[{"diffs":[[0,"gs.targets;\n"],[1,"    var targetSize = _.size(targets) - 1;\n    \n    function iterateTargets(index) {\n        if (index >= targetSize) {\n            sizeDeferred.resolve(size);\n        }\n        var target = args.targets[index];\n        var vol = volume(target);\n        var file = vol.file(target);\n        if (!vol || !file || !_.has(file, 'read')) {\n            ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target], function(response) {\n                sizeDeferred.reject(response);\n            });\n        } else {\n            vol.size(target).then(function(thisSize) {\n                size += thisSize;\n                iterateTargets(++index);\n            }, function(err) {\n                ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target, err], function(response) {\n                    sizeDeferred.reject(response);\n                });                \n            })\n        }\n    }\n    iterateTargets(0);"],[0,"    \n}\n\n/**\n"]],"start1":13076,"start2":13076,"length1":24,"length2":919}]],"length":37385,"saved":false}
{"ts":1364598685319,"patch":[[{"diffs":[[0,"ion tmb(args) {\n"],[1,"    var tmbDeferred = Q.defer();\n"],[0,"    var result ="]],"start1":13007,"start2":13007,"length1":32,"length2":65}]],"length":37418,"saved":false}
{"ts":1364598691272,"patch":[[{"diffs":[[0,") {\n            "],[-1,"size"],[1,"tmb"],[0,"Deferred.resolve"]],"start1":13236,"start2":13236,"length1":36,"length2":35}]],"length":37417,"saved":false}
{"ts":1364598701731,"patch":[[{"diffs":[[0,"eferred.resolve("],[-1,"size"],[1,"result"],[0,");\n        }\n   "]],"start1":13256,"start2":13256,"length1":36,"length2":38}]],"length":37419,"saved":false}
{"ts":1364598793451,"patch":[[{"diffs":[[0,"mages': "],[-1,"[]"],[1,"{}"],[0,"};\n    v"]],"start1":13076,"start2":13076,"length1":18,"length2":18},{"diffs":[[0,"   v"],[-1,"ar file = vol.file(target);"],[1,"ol.tmb(target).then(function(tmb) {\n            result.images.\n        });\n        "],[0,"\n   "]],"start1":13372,"start2":13372,"length1":35,"length2":91}]],"length":37475,"saved":false}
{"ts":1364598866825,"patch":[[{"diffs":[[0,".images."],[-1,"\n        }"],[1,"target = tmb;\n            return true;\n        }).then(function() {\n            return iterateTargets(++index"],[0,");\n     "]],"start1":13430,"start2":13430,"length1":26,"length2":125},{"diffs":[[0,"index);\n        "],[1,"})"],[0,"\n        if (!vo"]],"start1":13542,"start2":13542,"length1":32,"length2":34}]],"length":37576,"saved":false}
{"ts":1364598869893,"patch":[[{"diffs":[[0,"            "],[-1,"return "],[0,"iterateTarge"]],"start1":13506,"start2":13506,"length1":31,"length2":24}]],"length":37569,"saved":false}
{"ts":1364598876123,"patch":[[{"diffs":[[0,") {\n            "],[1,"return "],[0,"iterateTargets(+"]],"start1":13502,"start2":13502,"length1":32,"length2":39}]],"length":37576,"saved":false}
{"ts":1364598902537,"patch":[[{"diffs":[[0,"            "],[-1,"return "],[0,"iterateTarge"]],"start1":13506,"start2":13506,"length1":31,"length2":24}]],"length":37569,"saved":false}
{"ts":1364598906025,"patch":[[{"diffs":[[0,"dex);\n        })"],[1,";\n        "],[0,"\n        if (!vo"]],"start1":13537,"start2":13537,"length1":32,"length2":42}]],"length":37579,"saved":false}
{"ts":1364598913084,"patch":[[{"diffs":[[0,"rgets(++index);\n"],[1,"            return true;\n"],[0,"        });\n    "]],"start1":13527,"start2":13527,"length1":32,"length2":57}]],"length":37604,"saved":false}
{"ts":1364598919628,"patch":[[{"diffs":[[0,"});\n"],[-1,"        \n        if (!vol || !file || !_.has(file, 'read')) {\n            ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target], function(response) {\n                sizeDeferred.reject(response);\n            });\n        } else {\n            vol.size(target).then(function(thisSize) {\n                size += thisSize;\n                iterateTargets(++index);\n            }, function(err) {\n                ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target, err], function(response) {\n                    sizeDeferred.reject(response);\n                });                \n            })\n        }\n"],[0,"    "]],"start1":13576,"start2":13576,"length1":602,"length2":8}]],"length":37010,"saved":false}
{"ts":1364598929002,"patch":[[{"diffs":[[0,"gets(0);"],[1,"\n"],[0,"    "],[1,"return tmbDeferred.promise;"],[0,"\n}\n\n/**\n"]],"start1":13600,"start2":13600,"length1":20,"length2":48}]],"length":37038,"saved":false}
{"ts":1364599072135,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"/**\n * Return parent directory for required directory.\n * \n * @param cmd command arguments.\n * @return a promise to return the parent directory.\n **/\nfunction parents(args) {\n    var parentsDefer = Q.defer();\n    var target = args.target;\n    var vol = volume(target);\n\n    vol.parents(target).then(function() {\n        \n    }, function(err) {\n        ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target], function(response) {\n            parentsDefer.reject(response);\n        });\n    })\n}\n\n"],[0,"/**\n * Retur"]],"start1":12838,"start2":12838,"length1":24,"length2":514}]],"length":37528,"saved":false}
{"ts":1364599092550,"patch":[[{"diffs":[[0,").then(function("],[1,"tree"],[0,") {\n        \n   "]],"start1":13142,"start2":13142,"length1":32,"length2":36},{"diffs":[[0,") {\n        "],[1,"parentsDefer.resolve({'tree': tree});"],[0,"\n    }, func"]],"start1":13162,"start2":13162,"length1":24,"length2":61}]],"length":37569,"saved":false}
{"ts":1364599115569,"patch":[[{"diffs":[[0," {\n    \n};\n\n"],[1,"\n\n"],[0,"/**\n * Retur"]],"start1":12838,"start2":12838,"length1":24,"length2":26}]],"length":37571,"saved":false}
{"ts":1364599165066,"patch":[[{"diffs":[[0,"   \n};\n\n"],[1,"\n/**\n * Return parent directory for required directory.\n * \n * @param cmd command arguments.\n * @return a promise to return the parent directory.\n **/\nfunction tree(args) {\n    var treeDefer = Q.defer();\n    var target = args.target;\n    var vol = volume(target);\n\n    vol.tree(target).then(function(tree) {\n        treeDefer.resolve({'tree': tree});\n    }, function(err) {\n        ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target], function(response) {\n            treeDefer.reject(response);\n        });\n    })\n}"],[0,"\n\n/**\n *"]],"start1":12842,"start2":12842,"length1":16,"length2":531}]],"length":38086,"saved":false}
{"ts":1364599173547,"patch":[[{"diffs":[[0,"     });\n    })\n"],[1,"    \n    return parentsDefer.promise;\n"],[0,"}\n\n/**\n * Return"]],"start1":13879,"start2":13879,"length1":32,"length2":70}]],"length":38124,"saved":false}
{"ts":1364599179855,"patch":[[{"diffs":[[0,"\n    })\n"],[1,"    \n    return parentsDefer.promise;\n"],[0,"}\n\n/**\n "]],"start1":13356,"start2":13356,"length1":16,"length2":54}]],"length":38162,"saved":false}
{"ts":1364599183411,"patch":[[{"diffs":[[0,"    \n    return "],[-1,"parents"],[1,"tree"],[0,"Defer.promise;\n}"]],"start1":13364,"start2":13364,"length1":39,"length2":36}]],"length":38159,"saved":false}
{"ts":1364599193383,"patch":[[{"diffs":[[0," Return "],[-1,"parent directory"],[1,"subdirs"],[0," for req"]],"start1":12857,"start2":12857,"length1":32,"length2":23}]],"length":38150,"saved":false}
{"ts":1364599195230,"patch":[[{"diffs":[[0,"{\n    \n};\n\n\n"],[1,"\n"],[0,"/**\n * Retur"]],"start1":12839,"start2":12839,"length1":24,"length2":25}]],"length":38151,"saved":false}
{"ts":1364600951105,"patch":[[{"diffs":[[0,"   \n};\n\n"],[1,"/**\n * Return a list of the files in the target directory.\n * \n * @param args the command arguments.\n * @param a promise to return the list.\n **/\nfunction ls (args) {\n    var lsDefer = Q.defer();\n    var target = args.target;\n    var vol = vol(target);\n    \n    if (vol) {\n        \n        ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target], function(response) {\n            lsDefer.reject(response);\n        });\n    } else {\n        ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target], function(response) {\n            lsDefer.reject(response);\n        });\n    }\n}"],[0,"\n\n/**\n *"]],"start1":12842,"start2":12842,"length1":16,"length2":580},{"diffs":[[0,".\n * \n * @param "],[-1,"cmd"],[1,"args"],[0," command argumen"]],"start1":13460,"start2":13460,"length1":35,"length2":36}]],"length":38716,"saved":false}
{"ts":1364600955321,"patch":[[{"diffs":[[0,"   \n"],[-1,"        ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target], function(response) {\n            lsDefer.reject(response);\n        });"],[0,"\n   "]],"start1":13128,"start2":13128,"length1":138,"length2":8}]],"length":38586,"saved":false}
{"ts":1364601008621,"patch":[[{"diffs":[[0,"        "],[1,"vol.ls(target)\n        .then(function(list) {\n            lsDefer.resolve(list); \n        }, function(err) {\n        ElFinder.error({}, [ERRORS.ERROR_OPEN, '#'+target], function(response) {\n            lsDefer.reject(response);\n        });\n    });"],[0,"\n\n    } "]],"start1":13123,"start2":13123,"length1":16,"length2":263}]],"length":38833,"saved":false}
{"ts":1364601020442,"patch":[[{"diffs":[[0,"(err) {\n        "],[1,"    "],[0,"ElFinder.error({"]],"start1":13232,"start2":13232,"length1":32,"length2":36},{"diffs":[[0,") {\n            "],[1,"    "],[0,"lsDefer.reject(r"]],"start1":13321,"start2":13321,"length1":32,"length2":36},{"diffs":[[0,"    "],[1,"    "],[0,"});\n    "],[1," "],[1,"   "],[0,"});\n"],[-1,"\n"],[0,"    "]],"start1":13371,"start2":13371,"length1":21,"length2":28}]],"length":38848,"saved":false}
{"ts":1364601041637,"patch":[[{"diffs":[[0,"      });\n    }\n"],[1,"    \n    return lsDefer.promise;\n"],[0,"}\n\n/**\n * Return"]],"start1":13529,"start2":13529,"length1":32,"length2":65}]],"length":38881,"saved":false}
{"ts":1364601061204,"patch":[[{"diffs":[[0,") {\n    "],[1,"  "],[0,"\n};\n\n/**"]],"start1":12837,"start2":12837,"length1":16,"length2":18}]],"length":38883,"saved":false}
{"ts":1364601133752,"patch":[[{"diffs":[[0,") {\n    "],[-1,"  "],[1,"var target = args.target;\n    var init = !_.isUndefined(args.init);\n    var tree = !_.isUndefined(args.tree) && !_.isEmpty(args.tree);"],[0,"\n};\n\n/**"]],"start1":12837,"start2":12837,"length1":18,"length2":150}]],"length":39015,"saved":false}
{"ts":1364601181814,"patch":[[{"diffs":[[0,"args.tree);\n"],[1,"    var vol = volume(target);\n    \n    var cwd\n    var hash = init ? 'default folder' : '#' + target;\n    \n    \n"],[0,"};\n\n/**\n * R"]],"start1":12968,"start2":12968,"length1":24,"length2":136}]],"length":39127,"saved":false}
{"ts":1364601342380,"patch":[[{"diffs":[[0,"unction(args) {\n"],[1,"    var openDefer = Q.defer();\n"],[0,"    var target ="]],"start1":12825,"start2":12825,"length1":32,"length2":63},{"diffs":[[0,"   \n    "],[1,"if (!vol) {\n        ElFinder.error({}, 'Volume not found', function(response) {\n            openDefer.reject(response);\n        })\n    } else {\n        \n    }"],[0,"\n};\n\n/**"]],"start1":13114,"start2":13114,"length1":16,"length2":174}]],"length":39316,"saved":false}
{"ts":1364601348687,"patch":[[{"diffs":[[0," \n    }\n"],[1,"    return openDefer.promise;\n"],[0,"};\n\n/**\n"]],"start1":13273,"start2":13273,"length1":16,"length2":46}]],"length":39346,"saved":false}
{"ts":1364601461144,"patch":[[{"diffs":[[0,"t;\n    \n    if ("],[-1,"!"],[0,"vol) {\n        E"]],"start1":13110,"start2":13110,"length1":33,"length2":32},{"diffs":[[0,"    "],[-1,"ElFinder.error({}, 'Volume not found', "],[1,"vol.dir(target, true).then("],[0,"func"]],"start1":13137,"start2":13137,"length1":47,"length2":35},{"diffs":[[0,"en(function("],[-1,"response"],[1,"val"],[0,") {\n        "]],"start1":13165,"start2":13165,"length1":32,"length2":27},{"diffs":[[0,"    "],[-1,"openDefer.reject(response)"],[1,"cwd = val"],[0,";\n  "]],"start1":13192,"start2":13192,"length1":34,"length2":17},{"diffs":[[0," else {\n"],[-1,""],[0,"        "],[1,"cwd = false;"],[0,"\n    }\n "]],"start1":13223,"start2":13223,"length1":24,"length2":36}]],"length":39323,"saved":false}
{"ts":1364601466006,"patch":[[{"diffs":[[0," = false;\n    }\n"],[1,"    \n"],[0,"    return openD"]],"start1":13242,"start2":13242,"length1":32,"length2":37}]],"length":39328,"saved":false}
{"ts":1364601531987,"patch":[[{"diffs":[[0," var cwd"],[1,";\n    if (vol) {\n        cwd = true;\n    }"],[0,"\n    var"]],"start1":13049,"start2":13049,"length1":16,"length2":58}]],"length":39370,"saved":false}
{"ts":1364601537466,"patch":[[{"diffs":[[0," var cwd"],[1," = false"],[0,";\n    if"]],"start1":13049,"start2":13049,"length1":16,"length2":24}]],"length":39378,"saved":false}
{"ts":1364601546291,"patch":[[{"diffs":[[0,"se;\n"],[-1,"    if (vol) {\n        cwd = true;\n    }\n"],[0,"    "]],"start1":13063,"start2":13063,"length1":49,"length2":8},{"diffs":[[0,"arget;\n    \n"],[1,"    \n"],[0,"    if (vol)"]],"start1":13115,"start2":13115,"length1":24,"length2":29}]],"length":39342,"saved":false}
{"ts":1364601609241,"patch":[[{"diffs":[[0,"t;\n    \n    "],[1,"var volDefer = vol.dir(target, true);\n    volDefer.then(function(dirValue) {\n        cwd = dirValue; \n    });"],[0,"\n    if (vol"]],"start1":13119,"start2":13119,"length1":24,"length2":133}]],"length":39451,"saved":false}
{"ts":1364601649596,"patch":[[{"diffs":[[0,"lue;"],[-1," \n    });"],[1,"\n        return Q.resolve();\n    })\n    volDefer.then(function())"],[0,"\n   "]],"start1":13227,"start2":13227,"length1":17,"length2":73}]],"length":39507,"saved":false}
{"ts":1364601659115,"patch":[[{"diffs":[[0,"ve();\n    })"],[1,";"],[0,"\n    volDefe"]],"start1":13254,"start2":13254,"length1":24,"length2":25},{"diffs":[[0,"nction()"],[-1,")"],[1," {\n            \n    });"],[0,"\n    if "]],"start1":13288,"start2":13288,"length1":17,"length2":39}]],"length":39530,"saved":false}
{"ts":1364601710123,"patch":[[{"diffs":[[0,"n Q.resolve("],[1,"cwd"],[0,");\n    });\n "]],"start1":13245,"start2":13245,"length1":24,"length2":27},{"diffs":[[0,"r.then(function("],[1,"cwd"],[0,") {\n            "]],"start1":13282,"start2":13282,"length1":32,"length2":35},{"diffs":[[0,") {\n        "],[-1,"    "],[1,"if ((!cwd || !cwd.read) && init) {\n            vol = defaultVolume;\n        }"],[0,"\n    });\n   "]],"start1":13301,"start2":13301,"length1":28,"length2":101}]],"length":39609,"saved":false}
{"ts":1364601770904,"patch":[[{"diffs":[[0,"me;\n        "],[-1,"}\n    });"],[1,"    return vol.dir(vol.defaultPath(), true);\n        } else {\n            return cwd;\n        }\n    });\n    volDefer.then(function(val) {\n        cwd = val;\n    })\n    "],[0,"\n    if (vol"]],"start1":13377,"start2":13377,"length1":33,"length2":192}]],"length":39768,"saved":false}
{"ts":1364601945213,"patch":[[{"diffs":[[0,"rValue;\n        "],[1,"if (dirValue)\n        "],[0,"return Q.resolve"]],"start1":13224,"start2":13224,"length1":32,"length2":54},{"diffs":[[0,"  })"],[-1,";\n    volDefer.then(function(cwd) {\n        if ((!cwd || !cwd.read) && init) {\n            vol = defaultVolume;\n            return vol.dir(vol.defaultPath(), true);\n        } else {\n            return cwd;\n        }\n    });\n    volDefer.then(function(val) {\n        cwd = val;\n    })\n    \n    if (vol) {\n        vol.dir(target, true).then(function(val) {\n            cwd = val;\n        })\n    } else {\n        cwd = false"],[0,";\n    "],[-1,"}"],[0,"\n   "]],"start1":13287,"start2":13287,"length1":436,"length2":14}]],"length":39368,"saved":false}
{"ts":1364602133163,"patch":[[{"diffs":[[0,"    if ("],[-1,"dirValue)"],[1,"(!cwd || !cwd.read) && init) {\n            vol = defaultVolume;\n            vol.dir(vol.defaultPath(), true).then(function(val) {\n                cwd = val;\n                if (!cwd) {\n                    ElFinder.error({}, [ERRORS.ERROR_OPEN, hash, ERRORS.ERROR_DIR_NOT_FOUND], function(response) {\n                        openDefer.reject(response);\n                        volDefer.reject(response);\n                    });\n                }\n            });\n        } else {\n            \n        }"],[0,"\n       "]],"start1":13236,"start2":13236,"length1":25,"length2":516}]],"length":39859,"saved":false}
{"ts":1364602151746,"patch":[[{"diffs":[[0,") {\n"],[-1,"                        openDefer.reject(response);\n"],[0,"    "]],"start1":13540,"start2":13540,"length1":60,"length2":8},{"diffs":[[0,"solve(cwd);\n"],[1,"    }, function(response) {\n        openDefer.reject(response);        \n"],[0,"    });\n    "]],"start1":13712,"start2":13712,"length1":24,"length2":96}]],"length":39879,"saved":false}
{"ts":1364602202654,"patch":[[{"diffs":[[0,"            });\n"],[1,"                } else if (!cwd.read) {\n                    ElFinder.error({}, [ERRORS.ERROR_OPEN, hash, ERRORS.ERROR_PERM_DENIED], function(response) {\n                        volDefer.reject(response);\n                    });\n"],[0,"                "]],"start1":13603,"start2":13603,"length1":32,"length2":260}]],"length":40107,"saved":false}
{"ts":1364602230938,"patch":[[{"diffs":[[0,"});\n"],[-1,"        } else {\n            \n"],[0,"    "]],"start1":13877,"start2":13877,"length1":38,"length2":8}]],"length":40077,"saved":false}
{"ts":1364602241140,"patch":[[{"diffs":[[0,"            "],[1,"return "],[0,"vol.dir(vol."]],"start1":13308,"start2":13308,"length1":24,"length2":31},{"diffs":[[0,"  }\n"],[-1,"        return Q.resolve(cwd);\n"],[0,"    "]],"start1":13894,"start2":13894,"length1":39,"length2":8}]],"length":40053,"saved":false}
{"ts":1364602297302,"patch":[[{"diffs":[[0,"onse);      "],[-1,"  "],[0,"\n    });\n   "]],"start1":13955,"start2":13955,"length1":26,"length2":24},{"diffs":[[0,";      \n    });\n"],[1,"    volDefer.then()\n"],[0,"    \n    \n    re"]],"start1":13960,"start2":13960,"length1":32,"length2":52}]],"length":40071,"saved":false}
{"ts":1364602319291,"patch":[[{"diffs":[[0,"' + target;\n"],[1,"    var files = [];\n"],[0,"    \n    var"]],"start1":13110,"start2":13110,"length1":24,"length2":44},{"diffs":[[0,"er.then("],[1,"function() {\n        \n    }"],[0,")\n    \n "]],"start1":14006,"start2":14006,"length1":16,"length2":43}]],"length":40118,"saved":false}
{"ts":1364602408024,"patch":[[{"diffs":[[0,"            });\n"],[1,"        } else {\n            return Q.resolve();\n"],[0,"        }\n    },"]],"start1":13892,"start2":13892,"length1":32,"length2":81},{"diffs":[[0,") {\n        "],[1,"if (tree) {\n            index, keys, fn, completeFn\n            iterateVolumes(0, _.keys(volumes), function(volume) {\n                \n            }, function() {\n                \n            })\n        }"],[0,"\n    })\n    "]],"start1":14072,"start2":14072,"length1":24,"length2":228}]],"length":40371,"saved":false}
{"ts":1364602451157,"patch":[[{"diffs":[[0,") {\n"],[-1,"            index, keys, fn, completeFn\n"],[0,"    "]],"start1":14092,"start2":14092,"length1":48,"length2":8},{"diffs":[[0,"                "],[1,"return Q.resolve()"],[0,"\n            })\n"]],"start1":14207,"start2":14207,"length1":32,"length2":50}]],"length":40349,"saved":false}
{"ts":1364602613881,"patch":[[{"diffs":[[0,"                "],[1,"volume.tree('', 0, cwd.hash).then(function(treeVal) {\n                    if (treeVal) {\n                        files = _.flatten(files.concat(treeVal));\n                    }\n                })"],[0,"\n            }, "]],"start1":14162,"start2":14162,"length1":32,"length2":227}]],"length":40544,"saved":false}
{"ts":1364602660453,"patch":[[{"diffs":[[0,"tree('',"],[-1," 0,"],[0," cwd.has"]],"start1":14185,"start2":14185,"length1":19,"length2":16}]],"length":40541,"saved":false}
{"ts":1364602707508,"patch":[[{"diffs":[[0,"              }\n"],[1,"                    return true;\n"],[0,"                "]],"start1":14336,"start2":14336,"length1":32,"length2":65}]],"length":40574,"saved":false}
{"ts":1364602709741,"patch":[[{"diffs":[[0,"              })"],[1,";"],[0,"\n            }, "]],"start1":14387,"start2":14387,"length1":32,"length2":33}]],"length":40575,"saved":false}
{"ts":1364602830598,"patch":[[{"diffs":[[0,"    if (tree) {\n"],[1,"            var index = 0;\n            var volumesList = _.keys(volumes);\n            function itVolumes(index) {\n                if (index >= _.size(volumesList)) {\n                    volDefer.resolve();\n                }\n            }\n"],[0,"            iter"]],"start1":14080,"start2":14080,"length1":32,"length2":270}]],"length":40813,"saved":false}
{"ts":1364602889796,"patch":[[{"diffs":[[0,"   }"],[-1,"\n            }\n            iterateVolumes(0, _.keys(volumes), function(volume) {\n"],[1," else {\n    "],[0,"    "]],"start1":14315,"start2":14315,"length1":89,"length2":20},{"diffs":[[0,"                "],[1,"    "],[0,"if (treeVal) {\n "]],"start1":14402,"start2":14402,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"files = _.fl"]],"start1":14449,"start2":14449,"length1":24,"length2":28},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"                "]],"start1":14511,"start2":14511,"length1":34,"length2":42},{"diffs":[[0,"        "],[-1,"});\n            }, "],[1,"    }).then("],[0,"function"]],"start1":14578,"start2":14578,"length1":35,"length2":28},{"diffs":[[0,"    "],[1,"    "],[-1,"return Q.resolve()\n            })"],[1,"    itVolumes(++index);\n                    })\n                }\n            }"],[0,"\n   "]],"start1":14623,"start2":14623,"length1":41,"length2":90}]],"length":40802,"saved":false}
{"ts":1364602906328,"patch":[[{"diffs":[[0,"        "],[-1,"volDefer"],[1,"return Q"],[0,".resolve"]],"start1":14274,"start2":14274,"length1":24,"length2":24},{"diffs":[[0,"        "],[1,"return "],[0,"itVolume"]],"start1":14627,"start2":14627,"length1":16,"length2":23}]],"length":40809,"saved":false}
{"ts":1364602921165,"patch":[[{"diffs":[[0,"       }"],[-1,"\n    }"],[1," else {\n            return true;\n        }\n    })\n    volDefer.then("],[0,")\n    \n "]],"start1":14718,"start2":14718,"length1":22,"length2":84}]],"length":40871,"saved":false}
{"ts":1364602933980,"patch":[[{"diffs":[[0,"         return "],[-1,"true"],[1,"Q.resolve()"],[0,";\n        }\n    "]],"start1":14737,"start2":14737,"length1":36,"length2":43}]],"length":40878,"saved":false}
{"ts":1364602985932,"patch":[[{"diffs":[[0,"er.then("],[-1,")"],[1,"vol.scanDir(cwd.hash))\n    volDefer.then(function(ls) {\n        \n    });"],[0,"\n    \n  "]],"start1":14793,"start2":14793,"length1":17,"length2":88}]],"length":40949,"saved":false}
{"ts":1364603012504,"patch":[[{"diffs":[[0," \n    })"],[-1,";"],[0,"\n    "],[-1,"volDefer"],[0,".then(fu"]],"start1":14035,"start2":14035,"length1":30,"length2":21},{"diffs":[[0,"\n    })\n    "],[-1,"volDefer"],[0,".then(vol.sc"]],"start1":14766,"start2":14766,"length1":32,"length2":24},{"diffs":[[0,".hash))\n    "],[-1,"volDefer"],[0,".then(functi"]],"start1":14799,"start2":14799,"length1":32,"length2":24}]],"length":40924,"saved":false}
{"ts":1364603143054,"patch":[[{"diffs":[[0,"        "],[1,"if (!ls) {\n            ElFinder.error({}, [ERRORS.ERROR_OPEN, cwd.name, vol.error()], function(response) {\n                volDefer.reject(response);    \n            });\n        } else {\n            _.each(ls, function(file) {\n                if (!_.contains(files, file)) {\n                    files.push(file);\n                })\n            }\n        }"],[0,"\n    })"],[-1,";"],[0,"\n    \n  "]],"start1":14832,"start2":14832,"length1":24,"length2":378}]],"length":41278,"saved":false}
{"ts":1364603212853,"patch":[[{"diffs":[[0,"s, function(file"],[1,", index, list"],[0,") {\n            "]],"start1":15047,"start2":15047,"length1":32,"length2":45},{"diffs":[[0,"              })"],[1,";\n                if (index >= _.size(list) - 1) {\n                    volDefer.resolve();\n                }"],[0,"\n            }\n "]],"start1":15168,"start2":15168,"length1":32,"length2":140}]],"length":41399,"saved":false}
{"ts":1364603222097,"patch":[[{"diffs":[[0,"               }"],[-1,")"],[0,";\n              "]],"start1":15167,"start2":15167,"length1":33,"length2":32},{"diffs":[[0," }\n            }"],[1,");"],[0,"\n        }\n    }"]],"start1":15289,"start2":15289,"length1":32,"length2":34}]],"length":41400,"saved":false}
{"ts":1364603228322,"patch":[[{"diffs":[[0,"               }"],[-1,";"],[0,"\n               "]],"start1":15167,"start2":15167,"length1":33,"length2":32},{"diffs":[[0,"            });\n"],[1,"            \n"],[0,"        }\n    })"]],"start1":15291,"start2":15291,"length1":32,"length2":45},{"diffs":[[0,"    }\n    })"],[1,";"],[0,"\n    \n    \n "]],"start1":15324,"start2":15324,"length1":24,"length2":25}]],"length":41413,"saved":false}
{"ts":1364603242407,"patch":[[{"diffs":[[0,"    });\n"],[-1,"            \n"],[0,"        "]],"start1":15299,"start2":15299,"length1":29,"length2":16}]],"length":41400,"saved":false}
{"ts":1364603448721,"patch":[[{"diffs":[[0,"    }\n    })"],[-1,";"],[0,"\n    "],[1,".then(vol.options(cwd.hash))\n    .then(function(options) {\n        var result = {\n            'cwd': cwd,\n            'options': options,\n            'files': files\n        }\n        if (!init) {\n            result.api = ElFinder.apiVersion();\n            result.uplMaxSize = ''; // how do I get this in node?\n            result.netDrivers = false;\n        }\n        \n        openDefer.resolve(result);\n    });"],[0,"\n    \n    re"]],"start1":15311,"start2":15311,"length1":30,"length2":439}]],"length":41809,"saved":false}
{"ts":1364603454123,"patch":[[{"diffs":[[0,"ve(result);\n"],[1,"        return true;\n"],[0,"    });\n    "]],"start1":15719,"start2":15719,"length1":24,"length2":45}]],"length":41830,"saved":false}
{"ts":1364603458987,"patch":[[{"diffs":[[0,"esult);\n"],[-1,"        return true;\n"],[0,"    });\n"]],"start1":15723,"start2":15723,"length1":37,"length2":16}]],"length":41809,"saved":false}
{"ts":1364623177433,"patch":[[{"diffs":[[0,"filter(files) {\n"],[1,"    var filterDefer = Q.defer();\n"],[0,"    var ret = []"]],"start1":41315,"start2":41315,"length1":32,"length2":65}]],"length":41842,"saved":false}
{"ts":1364623336299,"patch":[[{"diffs":[[0,"urn "],[-1,"the array of"],[1,"a promise to remove the"],[0," fil"]],"start1":41277,"start2":41277,"length1":20,"length2":31},{"diffs":[[0,"= this;\n    "],[-1,"return ("],[0,"function ite"]],"start1":41406,"start2":41406,"length1":32,"length2":24},{"diffs":[[0,";\n            }\n"],[1,"            iterateFiles(++index);\n"],[0,"        }\n    })"]],"start1":41664,"start2":41664,"length1":32,"length2":67},{"diffs":[[0,"     }\n    }"],[-1,");"],[0,"\n    // How "]],"start1":41718,"start2":41718,"length1":26,"length2":24}]],"length":41878,"saved":false}
{"ts":1364623397630,"patch":[[{"diffs":[[0,"            "],[-1,"return "],[1,"filterDefer.resolve("],[0,"ret"],[1,")"],[0,";\n        } "]],"start1":41491,"start2":41491,"length1":34,"length2":48},{"diffs":[[0,"    }\n    }\n"],[1,"    \n"],[0,"    // How d"]],"start1":41733,"start2":41733,"length1":24,"length2":29}]],"length":41897,"saved":false}
{"ts":1364623423231,"patch":[[{"diffs":[[0,"    }\n    }\n    "],[1,"return filterDefer.promise;"],[0,"\n    // How does"]],"start1":41733,"start2":41733,"length1":32,"length2":59}]],"length":41924,"saved":false}
{"ts":1364623462643,"patch":[[{"diffs":[[0,") {\n"],[-1,"    var filterDefer = Q.defer();\n"],[0,"    "]],"start1":41338,"start2":41338,"length1":41,"length2":8},{"diffs":[[0,"= this;\n    "],[1,"return ("],[0,"function ite"]],"start1":41373,"start2":41373,"length1":24,"length2":32},{"diffs":[[0,"   }"],[-1,"\n    return filterDefer.promise"],[1,")"],[0,";\n  "]],"start1":41715,"start2":41715,"length1":39,"length2":9}]],"length":41869,"saved":false}
{"ts":1364623480426,"patch":[[{"diffs":[[0,"    "],[-1,"filterDefer.resolve("],[1,"return "],[0,"ret"],[-1,")"],[0,";\n  "]],"start1":41474,"start2":41474,"length1":32,"length2":18}]],"length":41855,"saved":false}
{"ts":1364623487414,"patch":[[{"diffs":[[0,"urn "],[-1,"a promise to remove the"],[1,"the filtered"],[0," fil"]],"start1":41277,"start2":41277,"length1":31,"length2":20}]],"length":41844,"saved":false}
{"ts":1364623616376,"patch":[[{"diffs":[[0,"  }\n            "],[1,"return "],[0,"iterateFiles(++i"]],"start1":41640,"start2":41640,"length1":32,"length2":39}]],"length":41851,"saved":false}
{"ts":1364623843555,"patch":[[{"diffs":[[0,") && vol) {\n"],[1,"        var fileDefer = vol.file(target);\n        fileDefer\n        .then(function(file) {\n            if (!_.isUndefined(file) && !_.isNull(file) && file) {\n                return vol.resize(target, width, height, x, y, mode, bg, degree);\n            } else {\n                ElFinder.error({}, ERRORS.ERROR_FILE_NOT_FOUND, function(response) {\n                \n                });\n            }\n        }).then(function(file) {\n            \n        })\n"],[0,"        file"]],"start1":39753,"start2":39753,"length1":24,"length2":478}]],"length":42305,"saved":false}
{"ts":1364623852061,"patch":[[{"diffs":[[0,"                "],[1,"    fileDefer.reject(response);"],[0,"\n               "]],"start1":40111,"start2":40111,"length1":32,"length2":63}]],"length":42336,"saved":false}
{"ts":1364623982532,"patch":[[{"diffs":[[0,"    "],[-1,"\n        })\n        file = vol.file(target);\n        if (!_.isUndefined(file) && !_.null(file) && file) {\n        } else {\n            ElFinder.error({}, ERRORS.ERROR_FILE_NOT_FOUND, function(respons"],[1,"if (fil"],[0,"e) {"]],"start1":40234,"start2":40234,"length1":207,"length2":15},{"diffs":[[0,"sizeDefer.re"],[-1,"ject(response"],[1,"solve({'changed': file}"],[0,");\n         "]],"start1":40268,"start2":40268,"length1":37,"length2":47},{"diffs":[[0,"   }"],[-1,");\n  "],[1," else {\n"],[0,"      "],[-1,"}\n"],[0,"  "],[-1,"  } else {\n"],[0,"    "]],"start1":40315,"start2":40315,"length1":34,"length2":24},{"diffs":[[0,"inder.error("],[-1,"vol.error()"],[1,"{}"],[0,", ERRORS.ERR"]],"start1":40346,"start2":40346,"length1":35,"length2":26},{"diffs":[[0,"RRORS.ERROR_"],[-1,"FILE_NOT_FOUND"],[1,"RESIZE"],[0,", function(r"]],"start1":40363,"start2":40363,"length1":38,"length2":30},{"diffs":[[0,"ion(response) {\n"],[1,"        "],[0,"            resi"]],"start1":40388,"start2":40388,"length1":32,"length2":40},{"diffs":[[0,"    "],[-1,"});\n"],[0,"    "],[-1,"}\n"],[0,"    "],[1,"});"],[0,"\n    "],[-1,"file = vol.resize(target, width, height, x, y, mode, bg, degree);\n    if (file) {\n        resizeDefer.resolve({'changed': file"],[1,"        }\n        "],[0,"})"],[-1,";"],[0,"\n   "]],"start1":40458,"start2":40458,"length1":156,"length2":44},{"diffs":[[0,"), ERRORS.ERROR_"],[-1,"RESIZE"],[1,"FILE_NOT_FOUND"],[0,", function(respo"]],"start1":40545,"start2":40545,"length1":38,"length2":46}]],"length":42031,"saved":false}
{"ts":1364624076914,"patch":[[{"diffs":[[0,"or, next) {\n"],[1,"    var errorString = \"\";\n    if (_.isArray(error)) {\n        errorString = error.join();\n    } else {\n        errorString = error;\n    }\n"],[0,"    if (!_.i"]],"start1":5745,"start2":5745,"length1":24,"length2":162},{"diffs":[[0,"se.error = error"],[1,"String"],[0,";\n    }\n    next"]],"start1":6029,"start2":6029,"length1":32,"length2":38}]],"length":42175,"saved":false}
{"ts":1364624150414,"patch":[[{"diffs":[[0,"if ("],[1,"!"],[0,"_.is"],[-1,"Array(error)) {\n        errorString = error.join("],[1,"Undefined(response.error) && !_.isNull(response.error)) {\n        response.error.push(error"],[0,");\n "]],"start1":5787,"start2":5787,"length1":61,"length2":104},{"diffs":[[0,"    "],[-1,"errorString = "],[1,"if (_.isArray("],[0,"error"],[-1,";"],[1,")) {"],[0,"\n    "],[-1,"}\n"],[0,"    "],[-1,"if (!_.isUndefined(response.error) && !_.isNull("],[1,"    "],[0,"resp"]],"start1":5907,"start2":5907,"length1":87,"length2":44},{"diffs":[[0,"sponse.error"],[-1,")) {\n      "],[0," "],[1,"="],[0," response.er"]],"start1":5949,"start2":5949,"length1":36,"length2":26},{"diffs":[[0," response.error."],[-1,"push"],[1,"concat"],[0,"(error);\n    } e"]],"start1":5963,"start2":5963,"length1":36,"length2":38},{"diffs":[[0,"cat(error);\n    "],[1,"   "],[1," "],[0,"} else {\n       "]],"start1":5982,"start2":5982,"length1":32,"length2":36},{"diffs":[[0," else {\n        "],[1,"  "],[1,"  "],[0,"response.error ="]],"start1":6003,"start2":6003,"length1":32,"length2":36},{"diffs":[[0,"rror"],[-1,"String;"],[1,";\n        }"],[0,"\n   "]],"start1":6041,"start2":6041,"length1":15,"length2":19}]],"length":42179,"saved":false}
{"ts":1364624152323,"patch":[[{"diffs":[[0,"     }\n    }"],[1,";"],[0,"\n    next(re"]],"start1":6050,"start2":6050,"length1":24,"length2":25}]],"length":42180,"saved":false}
{"ts":1364624164291,"patch":[[{"diffs":[[0,"     }\n    }"],[-1,";"],[0,"\n    next(re"]],"start1":6050,"start2":6050,"length1":25,"length2":24}]],"length":42179,"saved":false}
{"ts":1364625264117,"patch":[[{"diffs":[[0," Q.defer();\n"],[-1,"        \n"],[0,"        if ("]],"start1":7126,"start2":7126,"length1":33,"length2":24}]],"length":42170,"saved":false}
{"ts":1364625892011,"patch":[[{"diffs":[[0,"e;\n\n"],[-1,"/**\n * Return the API version;\n **/\nElFinder.prototype.apiVersion = function() {\n    return this.API_VERSION;\n};\n\n"],[0,"/** "]],"start1":2693,"start2":2693,"length1":122,"length2":8}]],"length":42056,"saved":false}
{"ts":1364625896093,"patch":[[{"diffs":[[0,"(root);\n};\n\n"],[1,"/**\n * Return the API version;\n **/\nElFinder.prototype.apiVersion = function() {\n    return this.API_VERSION;\n};\n\n"],[0,"/**\n * Takes"]],"start1":5162,"start2":5162,"length1":24,"length2":138}]],"length":42170,"saved":false}
{"ts":1364626074538,"patch":[[{"diffs":[[0,"        "],[-1,"this."],[0,"opts = _"]],"start1":2994,"start2":2994,"length1":21,"length2":16},{"diffs":[[0,".extend("],[-1,"this."],[0,"opts, ne"]],"start1":3010,"start2":3010,"length1":21,"length2":16},{"diffs":[[0," root = "],[-1,"this."],[0,"opts.roo"]],"start1":3052,"start2":3052,"length1":21,"length2":16}]],"length":42155,"saved":false}
{"ts":1364626099944,"patch":[[{"diffs":[[0,"ts);\n    }\n    \n"],[1,"    logger.log('debug', JSON.stringify(opts));\n"],[0,"    var root = o"]],"start1":3029,"start2":3029,"length1":32,"length2":79}]],"length":42202,"saved":false}
{"ts":1364626114975,"patch":[[{"diffs":[[0,"uire('fs'),\n"],[1,"    logger = require('ghiraldi-simple-logger'),\n"],[0,"    eventEmi"]],"start1":635,"start2":635,"length1":24,"length2":72}]],"length":42250,"saved":false}
{"ts":1364626185253,"patch":[[{"diffs":[[0,"newOpts)) {\n"],[1,"        logger.log('debug', JSON.stringify(opts));\n"],[0,"        opts"]],"start1":3030,"start2":3030,"length1":24,"length2":75}]],"length":42301,"saved":false}
{"ts":1364626216457,"patch":[[{"diffs":[[0,") {\n"],[-1,"        logger.log('debug', JSON.stringify(opts));\n"],[0,"    "]],"start1":3038,"start2":3038,"length1":59,"length2":8}]],"length":42250,"saved":false}
{"ts":1364626249993,"patch":[[{"diffs":[[0,"};\n\n"],[-1,"/**\n * Default root volume (storage);\n **/\nvar defaultRootVolume = {\n    'driver': 'LocalFileSystem',\n    'path': '',\n    'startPath': '',\n    'URL': '',\n    'alias': '',\n    'mimeDetect': 'auto',\n    'mimeFile': 'auto',\n    'imgLib': 'auto',\n    'tmbPath': '.tmb',\n    'tmbPathMode': '0777',\n    'tmbSize': '48',\n    'tmbCrop': true,\n    'tmbBgColor': '#ffffff',\n    'copyOverwrite': true,\n    'copyJoin': true,\n    'copyFrom': true,\n    'copyTo': true,\n    'uploadOverwrite': true,\n    'uploadAllow': [],\n    'uploadDeny': [],\n    'uploadOrder': ['deny', 'allow'],\n    'uploadMaxSize': 0,\n    'defaults': {\n        'read': true,\n        'write': true\n    },\n    'attributes': [],\n    'acceptedName': '/^\\w[\\w\\s\\.\\%\\-]*$/u',\n    'accessControl': null,\n    'accessControlData': null,\n    'disabled': [],\n    'treeDeep': 1,\n    'checkSubfolders': true,\n    'directorySeparator': path.sep,\n    'dateFormat': 'j M Y H:i',\n    'timeFormat': 'H:i',\n    'cryptLib': undefined, /** Not yet implemented. **/\n    'archiveMimes': [],\n    'archivers': []\n};\n\n"],[0,"/** "]],"start1":1418,"start2":1418,"length1":1056,"length2":8}]],"length":41202,"saved":false}
{"ts":1364626254951,"patch":[[{"diffs":[[0," opts;\n\n"],[1,"/**\n * Default root volume (storage);\n **/\nvar defaultRootVolume = {\n    'driver': 'LocalFileSystem',\n    'path': '',\n    'startPath': '',\n    'URL': '',\n    'alias': '',\n    'mimeDetect': 'auto',\n    'mimeFile': 'auto',\n    'imgLib': 'auto',\n    'tmbPath': '.tmb',\n    'tmbPathMode': '0777',\n    'tmbSize': '48',\n    'tmbCrop': true,\n    'tmbBgColor': '#ffffff',\n    'copyOverwrite': true,\n    'copyJoin': true,\n    'copyFrom': true,\n    'copyTo': true,\n    'uploadOverwrite': true,\n    'uploadAllow': [],\n    'uploadDeny': [],\n    'uploadOrder': ['deny', 'allow'],\n    'uploadMaxSize': 0,\n    'defaults': {\n        'read': true,\n        'write': true\n    },\n    'attributes': [],\n    'acceptedName': '/^\\w[\\w\\s\\.\\%\\-]*$/u',\n    'accessControl': null,\n    'accessControlData': null,\n    'disabled': [],\n    'treeDeep': 1,\n    'checkSubfolders': true,\n    'directorySeparator': path.sep,\n    'dateFormat': 'j M Y H:i',\n    'timeFormat': 'H:i',\n    'cryptLib': undefined, /** Not yet implemented. **/\n    'archiveMimes': [],\n    'archivers': []\n};\n"],[0,"/** Firs"]],"start1":1049,"start2":1049,"length1":16,"length2":1063}]],"length":42249,"saved":false}
{"ts":1364626257669,"patch":[[{"diffs":[[0,": []\n};\n"],[1,"\n"],[0,"/** Firs"]],"start1":2096,"start2":2096,"length1":16,"length2":17}]],"length":42250,"saved":false}
{"ts":1364626266028,"patch":[[{"diffs":[[0,"0;\n\n"],[-1,"/** \n * Options\n **/\nvar opts;\n\n"],[0,"/**\n"]],"start1":1021,"start2":1021,"length1":40,"length2":8},{"diffs":[[0,"vers': []\n};"],[1,"\n/** \n * Options\n **/\nvar opts;"],[0,"\n\n/** First,"]],"start1":2059,"start2":2059,"length1":24,"length2":55}]],"length":42249,"saved":false}
{"ts":1364626293105,"patch":[[{"diffs":[[0,"   \n"],[-1,"    logger.log('debug', JSON.stringify(opts));\n"],[0,"    "]],"start1":3088,"start2":3088,"length1":55,"length2":8}]],"length":42202,"saved":false}
{"ts":1364626407224,"patch":[[{"diffs":[[0,"        "],[-1,"this"],[1,"ElFinder"],[0,".on(bind"]],"start1":3454,"start2":3454,"length1":20,"length2":24}]],"length":42206,"saved":false}
{"ts":1364626520717,"patch":[[{"diffs":[[0,"eners. **/\n\n"],[1,"var elEventEmitter = new eventEmitter();\n\n"],[0,"/**\n * API v"]],"start1":775,"start2":775,"length1":24,"length2":66}]],"length":42248,"saved":false}
{"ts":1364626534890,"patch":[[{"diffs":[[0,"        "],[-1,"ElFind"],[1,"elEventEmitt"],[0,"er.on(bi"]],"start1":3496,"start2":3496,"length1":22,"length2":28}]],"length":42254,"saved":false}
{"ts":1364626590818,"patch":[[{"diffs":[[0,"bind);\n    \n"],[1,"    logger.log('debug', 'bindEvents = ' + bindEvents);\n    \n"],[0,"    /** Bind"]],"start1":3203,"start2":3203,"length1":24,"length2":84}]],"length":42314,"saved":false}
{"ts":1364626628294,"patch":[[{"diffs":[[0,"d': "],[-1,"'"],[0,"[]"],[-1,"'"],[0,", /*"]],"start1":2340,"start2":2340,"length1":12,"length2":10}]],"length":42312,"saved":false}
{"ts":1364626735061,"patch":[[{"diffs":[[0,"ebug', '"],[-1,"bindEven"],[1,"op"],[0,"ts = ' +"]],"start1":3230,"start2":3230,"length1":24,"length2":18},{"diffs":[[0,"s = ' + "],[-1,"bindEven"],[1,"JSON.stringify(op"],[0,"ts)"],[1,")"],[0,";\n    \n "]],"start1":3241,"start2":3241,"length1":27,"length2":37}]],"length":42316,"saved":false}
{"ts":1364626954520,"patch":[[{"diffs":[[0,"newOpts)) {\n"],[1,"        if (newOpts.bind) {\n            opts.bind.push(newOpts.bind);\n        }\n"],[0,"        opts"]],"start1":3069,"start2":3069,"length1":24,"length2":104}]],"length":42396,"saved":false}
{"ts":1364626977707,"patch":[[{"diffs":[[0,"ind);\n        }\n"],[1,"        if (newOpts.roots) {\n            opts.roots.push(newOpts.roots);\n        }\n"],[0,"        opts = _"]],"start1":3145,"start2":3145,"length1":32,"length2":115}]],"length":42479,"saved":false}
{"ts":1364627015399,"patch":[[{"diffs":[[0,"    "],[-1,"if (newOpts.bind) {\n            opts.bind.push(newOpts.bind);\n        }\n        if (newOpts.roots) {\n            opts.roots.push(newOpts.roots);\n        }\n        opts = _.extend(opts, newOpts);"],[1,"c"],[0,"\n   "]],"start1":3085,"start2":3085,"length1":202,"length2":9}]],"length":42286,"saved":false}
{"ts":1364627029470,"patch":[[{"diffs":[[0,"        "],[-1,"c"],[1,"logger.log(\"newOpts = \" + newOpts);\n        opts = _.extend(opts, newOpts);"],[0,"\n    }\n "]],"start1":3081,"start2":3081,"length1":17,"length2":91}]],"length":42360,"saved":false}
{"ts":1364627069855,"patch":[[{"diffs":[[0,"newOpts)) {\n"],[1,"        logger.log(\"newOpts roots = \" + newOpts.roots);\n"],[0,"        logg"]],"start1":3069,"start2":3069,"length1":24,"length2":80}]],"length":42416,"saved":false}
{"ts":1364627129675,"patch":[[{"diffs":[[0,"     logger.log("],[1,"\"debug\", "],[0,"\"newOpts roots ="]],"start1":3084,"start2":3084,"length1":32,"length2":41},{"diffs":[[0,"er.log(\""],[1,"debug\", "],[0,"newOpts "]],"start1":3158,"start2":3158,"length1":16,"length2":24}]],"length":42433,"saved":false}
{"ts":1364627138015,"patch":[[{"diffs":[[0,"debug\", "],[1,"\""],[0,"newOpts "]],"start1":3166,"start2":3166,"length1":16,"length2":17}]],"length":42434,"saved":false}
{"ts":1364627155561,"patch":[[{"diffs":[[0,"roots = \" + "],[1,"JSON.stringify("],[0,"newOpts.root"]],"start1":3118,"start2":3118,"length1":24,"length2":39},{"diffs":[[0,"s.roots)"],[1,")"],[0,";\n      "]],"start1":3151,"start2":3151,"length1":16,"length2":17},{"diffs":[[0,"s = \" + "],[1,"JSON.stringify("],[0,"newOpts)"],[1,")"],[0,";\n      "]],"start1":3197,"start2":3197,"length1":24,"length2":40}]],"length":42466,"saved":false}
{"ts":1364628169855,"patch":[[{"diffs":[[0," return "],[-1,"this."],[0,"API_VERS"]],"start1":5554,"start2":5554,"length1":21,"length2":16}]],"length":42461,"saved":false}
{"ts":1364628175751,"patch":[[{"diffs":[[0," return "],[1,"this."],[0,"API_VERS"]],"start1":5554,"start2":5554,"length1":16,"length2":21}]],"length":42466,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364794665610,"patch":[[{"diffs":[[0," value.\n"],[1," * 2) Most functions return promises rather than direct values to keep the functions asynchrounous.\n *    To get the actual values, just pass in a function (ie:  open(function(response){}));\n"],[0," * @auth"]],"start1":281,"start2":281,"length1":16,"length2":207}]],"length":42657,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364800552117,"patch":[[{"diffs":[[0,"ex].driver;\n"],[1,"                logger.log(\"debug\", \"driver = \" + driver)\n"],[0,"            "]],"start1":4503,"start2":4503,"length1":24,"length2":82}]],"length":42715,"saved":false}
{"ts":1364800555055,"patch":[[{"diffs":[[0," driver)"],[1,";Boolean"],[0,"\n       "]],"start1":4564,"start2":4564,"length1":16,"length2":24}]],"length":42723,"saved":false}
{"ts":1364800568843,"patch":[[{"diffs":[[0,"er);"],[-1,"Boolean"],[0,"\n   "]],"start1":4569,"start2":4569,"length1":15,"length2":8},{"diffs":[[0,"s[driver]);\n"],[1,"                    logger.log(\"debug\", \"volume = \" + JSON.stringify(volume));\n"],[0,"            "]],"start1":4667,"start2":4667,"length1":24,"length2":103}]],"length":42795,"saved":false}
{"ts":1364800658382,"patch":[[{"diffs":[[0,"s.roots) - 1) {\n"],[1,"                logger.log(\"debug\", JSON.stringify(opts.roots));\n"],[0,"                "]],"start1":4315,"start2":4315,"length1":32,"length2":97}]],"length":42860,"saved":false}
{"ts":1364800682384,"patch":[[{"diffs":[[0,"\"debug\","],[1," \"roots = \" +"],[0," JSON.st"]],"start1":4358,"start2":4358,"length1":16,"length2":29}]],"length":42873,"saved":false}
{"ts":1364800732440,"patch":[[{"diffs":[[0,"s.roots) - 1) {\n"],[1,"                console.log(\"size of opts.roots = \" + _.size(opts.roots -1 ));\n"],[0,"                "]],"start1":4315,"start2":4315,"length1":32,"length2":111}]],"length":42952,"saved":false}
{"ts":1364800753613,"patch":[[{"diffs":[[0,"oots"],[1,")"],[0," -1 "],[-1,")"],[0,");\n "]],"start1":4398,"start2":4398,"length1":13,"length2":13}]],"length":42952,"saved":false}
{"ts":1364800770146,"patch":[[{"diffs":[[0,"s.roots)"],[-1," - 1"],[0,") {\n    "]],"start1":4315,"start2":4315,"length1":20,"length2":16}]],"length":42948,"saved":false}
{"ts":1364800816089,"patch":[[{"diffs":[[0,"     if (index >"],[-1,"="],[0," _.size(opts.roo"]],"start1":4287,"start2":4287,"length1":33,"length2":32},{"diffs":[[0,") {\n"],[-1,"                console.log(\"size of opts.roots = \" + _.size(opts.roots) -1 );\n                logger.log(\"debug\", \"roots = \" + JSON.stringify(opts.roots));\n"],[0,"    "]],"start1":4322,"start2":4322,"length1":165,"length2":8}]],"length":42790,"saved":false}
{"ts":1364800931594,"patch":[[{"diffs":[[0,"                "],[-1,"that."],[0,"mountErrors.push"]],"start1":4872,"start2":4872,"length1":37,"length2":32}]],"length":42785,"saved":false}
{"ts":1364800943432,"patch":[[{"diffs":[[0,"        "],[-1,"that."],[0,"volumes["]],"start1":4992,"start2":4992,"length1":21,"length2":16},{"diffs":[[0,"   if (!"],[-1,"that."],[0,"defaultV"]],"start1":5047,"start2":5047,"length1":21,"length2":16},{"diffs":[[0,"        "],[-1,"that."],[0,"defaultV"]],"start1":5119,"start2":5119,"length1":21,"length2":16},{"diffs":[[0,"olume = "],[-1,"that."],[0,"volumes["]],"start1":5135,"start2":5135,"length1":21,"length2":16}]],"length":42765,"saved":false}
{"ts":1364800964525,"patch":[[{"diffs":[[0,"        "],[-1,"that."],[0,"mountErr"]],"start1":5273,"start2":5273,"length1":21,"length2":16}]],"length":42760,"saved":false}
{"ts":1364801044899,"patch":[[{"diffs":[[0,"ex].driver;\n"],[1,"        \n"],[0,"            "]],"start1":4498,"start2":4498,"length1":24,"length2":33}]],"length":42769,"saved":false}
{"ts":1364801066971,"patch":[[{"diffs":[[0,"vers"],[1,")"],[0,"[driver]"],[-1,")"],[0,";\n  "]],"start1":4668,"start2":4668,"length1":17,"length2":17}]],"length":42769,"saved":false}
{"ts":1364801088874,"patch":[[{"diffs":[[0,"e = "],[-1,"require("],[0,"drivers"],[-1,")"],[0,"[dri"]],"start1":4653,"start2":4653,"length1":24,"length2":15}]],"length":42760,"saved":false}
{"ts":1364801205257,"patch":[[{"diffs":[[0,"       } else {\n"],[1,"                console.log(\"index = \" + index);\n"],[0,"                "]],"start1":4439,"start2":4439,"length1":32,"length2":81}]],"length":42809,"saved":false}
{"ts":1364801216013,"patch":[[{"diffs":[[0,"olumes(index) {\n"],[1,"                console.log(\"index = \" + index);\n"],[0,"            if ("]],"start1":4264,"start2":4264,"length1":32,"length2":81},{"diffs":[[0,"e {\n"],[-1,"                console.log(\"index = \" + index);\n"],[0,"    "]],"start1":4500,"start2":4500,"length1":57,"length2":8}]],"length":42809,"saved":false}
{"ts":1364801217483,"patch":[[{"diffs":[[0,"        "],[-1,"    "],[0,"console."]],"start1":4284,"start2":4284,"length1":20,"length2":16}]],"length":42805,"saved":false}
{"ts":1364801230020,"patch":[[{"diffs":[[0,"s.roots)"],[1," - 1"],[0,") {\n    "]],"start1":4359,"start2":4359,"length1":16,"length2":20}]],"length":42809,"saved":false}
{"ts":1364801327772,"patch":[[{"diffs":[[0,"river];\n"],[1,"                    if (_.isUndefined(volume)) {\n                        mountErrors.push(\"Volume not found\");\n                    } else {\n    "],[0,"        "]],"start1":4715,"start2":4715,"length1":16,"length2":160},{"diffs":[[0,"            "],[1,"    "],[0,"volume.mount"]],"start1":4954,"start2":4954,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"   "],[1," "],[0,"if (err) {\n "]],"start1":5034,"start2":5034,"length1":24,"length2":28},{"diffs":[[0,"     if (err) {\n"],[1,"    "],[0,"                "]],"start1":5045,"start2":5045,"length1":32,"length2":36},{"diffs":[[0,"                "],[1," "],[1,"   "],[0,"} else {\n       "]],"start1":5152,"start2":5152,"length1":32,"length2":36},{"diffs":[[0,"       } else {\n"],[1,"    "],[0,"                "]],"start1":5165,"start2":5165,"length1":32,"length2":36},{"diffs":[[0,"            "],[1,"    "],[0,"if (!default"]],"start1":5251,"start2":5251,"length1":24,"length2":28},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"defaultVolum"]],"start1":5332,"start2":5332,"length1":24,"length2":28},{"diffs":[[0,"                "],[-1,"}\n"],[1,"    }\n    "],[0,"                "]],"start1":5389,"start2":5389,"length1":34,"length2":42},{"diffs":[[0,"                "],[1,"   "],[1," "],[0,"});"],[1,"   \n                    }"],[0,"\n               "]],"start1":5445,"start2":5445,"length1":35,"length2":64}]],"length":43018,"saved":false}
{"ts":1364801357418,"patch":[[{"diffs":[[0,"(volume)"],[1," || _.isNull(volume)"],[0,") {\n    "]],"start1":4760,"start2":4760,"length1":16,"length2":36}]],"length":43038,"saved":false}
{"ts":1364801483721,"patch":[[{"diffs":[[0,"(root);\n};\n\n"],[1,"ElFinder.prototype.getMountErrors = function() {\n    return mountErrors;\n}\n\n"],[0,"/**\n * Retur"]],"start1":6030,"start2":6030,"length1":24,"length2":100}]],"length":43114,"saved":false}
{"ts":1364801578672,"patch":[[{"diffs":[[0,"\n    }\n    \n    "],[-1,"return "],[0,"Q.all([\n        "]],"start1":5812,"start2":5812,"length1":39,"length2":32}]],"length":43107,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364837247582,"patch":[[{"diffs":[[0,"(newOpts) {\n"],[1,"    var thisFinder = this;\n"],[0,"    if (!_.i"]],"start1":3203,"start2":3203,"length1":24,"length2":51},{"diffs":[[0,"[driver]"],[1,"(thisFinder)"],[0,";\n      "]],"start1":4740,"start2":4740,"length1":16,"length2":28}]],"length":43146,"saved":false}
{"ts":1364837318902,"patch":[[{"diffs":[[0,"l;\n\n"],[-1,"/**\n * Mounted volumes count\n * Required to create a unique volume id\n **/\nvar volumesCount = 0;\n"],[0,"\n/**"]],"start1":1156,"start2":1156,"length1":105,"length2":8},{"diffs":[[0,"(newOpts) {\n"],[1,"    /**\n     * Mounted volumes count\n     * Required to create a unique volume id\n     **/\n    this.volumesCount = 0;\n    \n"],[0,"    var this"]],"start1":3106,"start2":3106,"length1":24,"length2":147}]],"length":43172,"saved":false}
