{"version":3,"sources":["history.js"],"names":["define","elFinder","prototype","history","fm","current","self","this","update","reset","cwd","hash","nativeHistory","options","useBrowserHistory","window","pushState","go","fwd","canForward","canBack","exec","fail","$","Deferred","reject","setNativeHistory","thash","state","location","pathname","search","length","back","forward","bind","startDir","open","l","splice","push","reload","reloadClearHistory"],"mappings":";;;;;;;AAAAA,QACC,cACC,SAASC,GA4HV,OApHAA,EAASC,UAAUC,QAAU,SAASC,GACrC,aACA,IAkBCC,EAlBGC,EAAOC,KAMVC,GAAS,EAMTL,KAYAM,EAAQ,WACPN,GAAWC,EAAGM,MAAMC,MACpBN,EAAU,EACVG,GAAU,GAKXI,EAAiBR,EAAGS,QAAQC,mBAAqBC,OAAOZ,SAAWY,OAAOZ,QAAQa,UAAYD,OAAOZ,QAAU,KAO/Gc,EAAK,SAASC,GACb,OAAKA,GAAOZ,EAAKa,eAAmBD,GAAOZ,EAAKc,WAC/CZ,GAAS,EACFJ,EAAGiB,KAAK,OAAQlB,EAAQe,IAAQb,IAAYA,IAAUiB,KAAKb,IAE5Dc,EAAEC,WAAWC,UAOrBC,EAAmB,SAASC,IACvBf,GAAoBA,EAAcgB,OAAShB,EAAcgB,MAAMD,QAAUA,GAC5Ef,EAAcI,WAAWW,MAAOA,GAAQ,KAAME,SAASC,SAAWD,SAASE,QAAUJ,EAAO,QAAUA,EAAQ,MASjHpB,KAAKa,QAAU,WACd,OAAOf,EAAU,GAQlBE,KAAKY,WAAa,WACjB,OAAOd,EAAUF,EAAQ6B,OAAS,GAQnCzB,KAAK0B,KAAOhB,EAOZV,KAAK2B,QAAU,WACd,OAAOjB,GAAG,IAIXb,EAAG+B,KAAK,OAAQ,WACXvB,IAAkBA,EAAcgB,OACnCF,EAAiBtB,EAAGgC,cAGrBC,KAAK,WACL,IAAIC,EAAInC,EAAQ6B,OACftB,EAAMN,EAAGM,MAAMC,KAEZH,IACHH,GAAW,GAAKiC,EAAIjC,EAAU,GAAKF,EAAQoC,OAAOlC,EAAQ,GAC1DF,EAAQA,EAAQ6B,OAAO,IAAMtB,GAAOP,EAAQqC,KAAK9B,GACjDL,EAAUF,EAAQ6B,OAAS,GAE5BxB,GAAS,EAETkB,EAAiBhB,KAEjB+B,OAAOrC,EAAGS,QAAQ6B,oBAAsBjC,IAInCR","file":"../history.js","sourcesContent":["define([\n\t\"./elFinder\"\n],function(elFinder) {\n\t/**\n\t * @class elFinder.history\n\t * Store visited folders\n\t * and provide \"back\" and \"forward\" methods\n\t *\n\t * @author Dmitry (dio) Levashov\n\t */\n\telFinder.prototype.history = function(fm) {\n\t\t\"use strict\";\n\t\tvar self = this,\n\t\t\t/**\n\t\t\t * Update history on \"open\" event?\n\t\t\t *\n\t\t\t * @type Boolean\n\t\t\t */\n\t\t\tupdate = true,\n\t\t\t/**\n\t\t\t * Directories hashes storage\n\t\t\t *\n\t\t\t * @type Array\n\t\t\t */\n\t\t\thistory = [],\n\t\t\t/**\n\t\t\t * Current directory index in history\n\t\t\t *\n\t\t\t * @type Number\n\t\t\t */\n\t\t\tcurrent,\n\t\t\t/**\n\t\t\t * Clear history\n\t\t\t *\n\t\t\t * @return void\n\t\t\t */\n\t\t\treset = function() {\n\t\t\t\thistory = [fm.cwd().hash];\n\t\t\t\tcurrent = 0;\n\t\t\t\tupdate  = true;\n\t\t\t},\n\t\t\t/**\n\t\t\t * Browser native history object\n\t\t\t */\n\t\t\tnativeHistory = (fm.options.useBrowserHistory && window.history && window.history.pushState)? window.history : null,\n\t\t\t/**\n\t\t\t * Open prev/next folder\n\t\t\t *\n\t\t\t * @Boolen  open next folder?\n\t\t\t * @return jQuery.Deferred\n\t\t\t */\n\t\t\tgo = function(fwd) {\n\t\t\t\tif ((fwd && self.canForward()) || (!fwd && self.canBack())) {\n\t\t\t\t\tupdate = false;\n\t\t\t\t\treturn fm.exec('open', history[fwd ? ++current : --current]).fail(reset);\n\t\t\t\t}\n\t\t\t\treturn $.Deferred().reject();\n\t\t\t},\n\t\t\t/**\n\t\t\t * Sets the native history.\n\t\t\t *\n\t\t\t * @param String thash target hash\n\t\t\t */\n\t\t\tsetNativeHistory = function(thash) {\n\t\t\t\tif (nativeHistory && (! nativeHistory.state || nativeHistory.state.thash !== thash)) {\n\t\t\t\t\tnativeHistory.pushState({thash: thash}, null, location.pathname + location.search + (thash? '#elf_' + thash : ''));\n\t\t\t\t}\n\t\t\t};\n\t\t\n\t\t/**\n\t\t * Return true if there is previous visited directories\n\t\t *\n\t\t * @return Boolen\n\t\t */\n\t\tthis.canBack = function() {\n\t\t\treturn current > 0;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Return true if can go forward\n\t\t *\n\t\t * @return Boolen\n\t\t */\n\t\tthis.canForward = function() {\n\t\t\treturn current < history.length - 1;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Go back\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tthis.back = go;\n\t\t\n\t\t/**\n\t\t * Go forward\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tthis.forward = function() {\n\t\t\treturn go(true);\n\t\t};\n\t\t\n\t\t// bind to elfinder events\n\t\tfm.bind('init', function() {\n\t\t\tif (nativeHistory && !nativeHistory.state) {\n\t\t\t\tsetNativeHistory(fm.startDir());\n\t\t\t}\n\t\t})\n\t\t.open(function() {\n\t\t\tvar l = history.length,\n\t\t\t\tcwd = fm.cwd().hash;\n\n\t\t\tif (update) {\n\t\t\t\tcurrent >= 0 && l > current + 1 && history.splice(current+1);\n\t\t\t\thistory[history.length-1] != cwd && history.push(cwd);\n\t\t\t\tcurrent = history.length - 1;\n\t\t\t}\n\t\t\tupdate = true;\n\n\t\t\tsetNativeHistory(cwd);\n\t\t})\n\t\t.reload(fm.options.reloadClearHistory && reset);\n\t\t\n\t};\n\n\treturn elFinder;\n});\n"]}