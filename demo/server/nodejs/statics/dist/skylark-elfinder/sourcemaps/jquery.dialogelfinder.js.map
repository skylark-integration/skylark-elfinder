{"version":3,"sources":["jquery.dialogelfinder.js"],"names":["define","$","fn","dialogelfinder","opts","opts2","node","pos","destroy","isPlainObject","this","not","each","handlers","elfinder","toolbar","document","title","init","appendTo","on","e","preventDefault","fm","prepend","addClass","css","hide","draggable","handle","containment","stop","trigger","reloadCallback","o","o2","width","parseInt","data","destroyOnClose","find","removeClass","position","autoOpen","top","scrollTop","window","height","left","scrollLeft","is","show","setTimeout","remove","getElFinder"],"mappings":";;;;;;;AAAAA,QACC,kBACC,SAASC,GAeVA,EAAEC,GAAGC,eAAiB,SAASC,EAAMC,GACnC,IAEAC,EAAMC,EADNC,EAAW,yBAGZ,GAAIP,EAAEQ,cAAcL,GACnBM,KAAKC,IAAI,aAAaC,KAAK,WAE1BR,EAAKS,SAAWT,EAAKS,aAErB,IAUCC,EAVGR,EAAUL,EAAES,MAEfK,GADUd,EAAEe,UACFf,EAAE,oEAAoEG,EAAKa,OAAS,SAAS,WAOvGC,GANUjB,EAAE,qHACVkB,SAASJ,GACTK,GAAG,QAAS,SAASC,GACrBA,EAAEC,iBACFhB,EAAKH,eAAe,WAEZC,EAAKS,SAASK,MAGzBd,EAAKS,SAASK,KAAO,SAASG,EAAGE,GAChCjB,EAAKkB,QAAQT,GACbG,GAAQA,EAAKG,EAAGE,KAGjBT,EAAWR,EAAKmB,SAAS,uCACvBC,IAAI,WAAY,YAChBC,OACAR,SAAS,QACTS,WACAC,OAAS,uBACTC,YAAc,SACdC,KAAO,WACNzB,EAAK0B,QAAQ,UACblB,EAASkB,QAAQ,aAGlBlB,SAASV,EAAMC,GACfS,SAAS,aAEFmB,eAAiB,SAASC,EAAGC,GACrCrB,EAASN,UACT0B,EAAErB,SAASK,KAAOA,EAClBZ,EAAKH,eAAe+B,EAAGC,GAAIhC,eAAe,SAG3CG,EAAK8B,MAAMC,SAAS/B,EAAK8B,UAAY,KACnCE,KAAK9B,IAAWJ,EAAKmC,gBACrBC,KAAK,qBAAqBC,YAAY,iBAExCrC,EAAKsC,UAAYpC,EAAKgC,KAnDR,mBAmDuBlC,EAAKsC,WAExB,IAAlBtC,EAAKuC,UAAsB1C,EAAES,MAAMP,eAAe,eAInD,GAAa,SAATC,EAEHG,GADAD,EAAOL,EAAES,OACE4B,KA3DG,sBA4DbM,IAAOP,SAASpC,EAAEe,UAAU6B,aAAe5C,EAAE6C,QAAQC,SAAWzC,EAAKyC,SAAW,GAAK9C,EAAE6C,QAAQC,SAAWzC,EAAKyC,UAAU,IACzHC,KAAOX,SAASpC,EAAEe,UAAUiC,cAAgBhD,EAAE6C,QAAQV,QAAU9B,EAAK8B,QAAW,GAAKnC,EAAE6C,QAAQV,QAAW9B,EAAK8B,SAAS,KAGrH9B,EAAK4C,GAAG,aACX5C,EAAKmB,SAAS,YAAYC,IAAInB,GAAK4C,OAAOnB,QAAQ,UAElDoB,WAAW,WAEV9C,EAAK0B,QAAQ,UAAUA,QAAQ,cAC7B,WAEE,GAAa,UAAT5B,GACVE,EAAOL,EAAES,MAAM+B,YAAY,aAElBS,GAAG,cACT5C,EAAKgC,KAAK9B,GACTF,EAAKQ,SAAS,WAAWuC,SACzB/C,EAAKQ,SAAS,eAEZ,GAAa,aAATV,EACV,OAAOH,EAAES,MAAM4C,cAIjB,OAAO5C","file":"../jquery.dialogelfinder.js","sourcesContent":["define([\n\t\"skylark-jquery\"\n],function($) {\n\t/**\n\t * @class dialogelfinder - open elFinder in dialog window\n\t *\n\t * @param  Object  elFinder options with dialog options\n\t * @example\n\t * $(selector).dialogelfinder({\n\t *     // some elfinder options\n\t *     title          : 'My files', // dialog title, default = \"Files\"\n\t *     width          : 850,        // dialog width, default 840\n\t *     autoOpen       : false,      // if false - dialog will not be opened after init, default = true\n\t *     destroyOnClose : true        // destroy elFinder on close dialog, default = false\n\t * })\n\t * @author Dmitry (dio) Levashov\n\t **/\n\t$.fn.dialogelfinder = function(opts, opts2) {\n\t\t\tvar position = 'elfinderPosition',\n\t\t\tdestroy  = 'elfinderDestroyOnClose',\n\t\t\tnode, pos;\n\n\t\tif ($.isPlainObject(opts)) {\n\t\t\tthis.not('.elfinder').each(function() {\n\n\t\t\t\topts.handlers = opts.handlers || {};\n\n\t\t\t\tvar node    = $(this),\n\t\t\t\t\tdoc     = $(document),\n\t\t\t\t\ttoolbar = $('<div class=\"ui-widget-header dialogelfinder-drag ui-corner-top\">'+(opts.title || 'Files')+'</div>'),\n\t\t\t\t\tbutton  = $('<a href=\"#\" class=\"dialogelfinder-drag-close ui-corner-all\"><span class=\"ui-icon ui-icon-closethick\"> </span></a>')\n\t\t\t\t\t\t.appendTo(toolbar)\n\t\t\t\t\t\t.on('click', function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\tnode.dialogelfinder('close');\n\t\t\t\t\t\t}),\n\t\t\t\t\tinit    = opts.handlers.init,\n\t\t\t\t\telfinder;\n\n\t\t\t\topts.handlers.init = function(e, fm) {\n\t\t\t\t\tnode.prepend(toolbar);\n\t\t\t\t\tinit && init(e, fm);\n\t\t\t\t};\n\n\t\t\t\telfinder = node.addClass('elfinder dialogelfinder touch-punch')\n\t\t\t\t\t.css('position', 'absolute')\n\t\t\t\t\t.hide()\n\t\t\t\t\t.appendTo('body')\n\t\t\t\t\t.draggable({\n\t\t\t\t\t\thandle : '.dialogelfinder-drag',\n\t\t\t\t\t\tcontainment : 'window',\n\t\t\t\t\t\tstop : function() {\n\t\t\t\t\t\t\tnode.trigger('resize');\n\t\t\t\t\t\t\telfinder.trigger('resize');\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.elfinder(opts, opts2)\n\t\t\t\t\t.elfinder('instance');\n\t\t\t\t\n\t\t\t\telfinder.reloadCallback = function(o, o2) {\n\t\t\t\t\telfinder.destroy();\n\t\t\t\t\to.handlers.init = init;\n\t\t\t\t\tnode.dialogelfinder(o, o2).dialogelfinder('open');\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tnode.width(parseInt(node.width()) || 840) // fix width if set to \"auto\"\n\t\t\t\t\t.data(destroy, !!opts.destroyOnClose)\n\t\t\t\t\t.find('.elfinder-toolbar').removeClass('ui-corner-top');\n\t\t\t\t\n\t\t\t\topts.position && node.data(position, opts.position);\n\t\t\t\t\n\t\t\t\topts.autoOpen !== false && $(this).dialogelfinder('open');\n\n\t\t\t});\n\t\t} else {\n\t\t\tif (opts === 'open') {\n\t\t\t\tnode = $(this);\n\t\t\t\tpos = node.data(position) || {\n\t\t\t\t\ttop  : parseInt($(document).scrollTop() + ($(window).height() < node.height() ? 2 : ($(window).height() - node.height())/2)),\n\t\t\t\t\tleft : parseInt($(document).scrollLeft() + ($(window).width() < node.width()  ? 2 : ($(window).width()  - node.width())/2))\n\t\t\t\t};\n\n\t\t\t\tif (node.is(':hidden')) {\n\t\t\t\t\tnode.addClass('ui-front').css(pos).show().trigger('resize');\n\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t// fix resize icon position and make elfinder active\n\t\t\t\t\t\tnode.trigger('resize').trigger('mousedown');\n\t\t\t\t\t}, 200);\n\t\t\t\t}\n\t\t\t} else if (opts === 'close') {\n\t\t\t\tnode = $(this).removeClass('ui-front');\n\t\t\t\t\t\n\t\t\t\tif (node.is(':visible')) {\n\t\t\t\t\t!!node.data(destroy)\n\t\t\t\t\t\t? node.elfinder('destroy').remove()\n\t\t\t\t\t\t: node.elfinder('close');\n\t\t\t\t}\n\t\t\t} else if (opts === 'instance') {\n\t\t\t\treturn $(this).getElFinder();\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t};\n\n});"]}