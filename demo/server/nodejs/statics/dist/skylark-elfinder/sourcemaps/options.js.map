{"version":3,"sources":["options.js"],"names":["define","elFinder","prototype","_options","cdns","ace","codemirror","ckeditor","ckeditor5","tinymce","simplemde","fabric","fabric16","tui","hls","dash","flv","videojs","prettify","psd","rar","zlibUnzip","zlibGunzip","bzip2","marked","sparkmd5","jssha","amr","tiff","url","requestType","cors","parrotHeaders","requestMaxConn","transport","urlUpload","dragUploadAllow","overwriteUploadConfirm","uploadMaxChunkSize","folderUploadExclude","win","mac","iframeTimeout","customData","handlers","customHeaders","xhrFields","lang","baseUrl","i18nBaseUrl","cssAutoLoad","themes","theme","maxErrorDialogs","cssClass","commands","commandsOptions","getfile","onlyURL","multiple","folders","oncomplete","onerror","getPath","getImgSize","open","method","into","selectAction","opennew","useOriginQuery","upload","ui","download","maxRequests","minFilesZipdl","quicklook","autoplay","width","height","mediaControlsList","pdfToolbar","textInitialLines","prettifyMaxLines","contain","docked","dockHeight","dockAutoplay","googleMapsApiKey","googleMapsOpts","maps","kml","suppressInfoWindows","preserveViewport","viewerjs","mimes","pdfNative","sharecadMimes","googleDocsMimes","officeOnlineMimes","getDimThreshold","unzipMaxSize","mimeRegexNotEmptyCheck","edit","dialogWidth","dialogHeight","mkfileHideMimes","makeTextMimes","useStoredEditor","editorMaximized","editors","encodings","extraOptions","uploadOpts","tuiImgEditOpts","iconsPath","pixo","apikey","managerUrl","mode","onlineConvert","maxSize","showLink","fullscreen","search","incsearch","enable","minlen","wait","searchTypes","SearchMime","name","title","info","nullUrlDirLinkSelf","hideItems","showHashMaxsize","showHashAlgorisms","showHashOpts","shake128len","shake256len","custom","mkdir","intoNewFolderToolbtn","resize","grid8px","presetSize","dimSubImgSize","rm","quickTrash","infoCheckWait","toTrashMaxItems","paste","moveConfirm","help","view","helpSource","preference","categories","prefs","langs","selectActions","disabledCmdsRels","get","file&url=","bootCallback","getFileCallback","defaultView","startPathHash","sound","uiOptions","toolbar","toolbarExtra","displayTextLabel","labelExcludeUA","autoHideUA","defaultHides","showPreferenceButton","preferenceInContextmenu","tree","attrTitle","openRootOnLoad","openCwdOnOpen","syncTree","subTreeMax","subdirsMaxConn","subdirsAtOnce","durations","slideUpDown","autoScroll","navbar","minWidth","maxWidth","navdock","disabled","initMaxHeight","maxHeight","cwd","oldSchool","showSelectCheckboxUA","metakeyDragout","listView","columns","columnsCustomName","fixedHeader","iconsView","size","sizeMax","sizeNames","0","1","2","3","path","toWorkzoneWithoutNavbar","dialog","focusOnMouseOver","toast","animate","showMethod","showDuration","showEasing","timeOut","hideMethod","hideDuration","hideEasing","dispInlineRegex","onlyMimes","sortRules","sortType","sortOrder","sortStickFolders","sortAlsoTreeview","clientFormatDate","UTCDate","dateFormat","fancyDateFormat","fileModeStyle","heightBase","resizable","notifyDelay","notifyDialog","position","canClose","hiddens","dialogContained","allowShortcuts","rememberLastDir","reloadClearHistory","useBrowserHistory","showFiles","showThreshold","validName","fileFilter","backupSuffix","sync","syncStart","loadTmbs","cookie","expires","domain","secure","contextmenu","files","enableAlways","enableByMouseOver","windowCloseConfirm","rawStringDecoder","Encoding","$","isFunction","convert","str","to","type","debug","toastBackendWarn"],"mappings":"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","file":"../options.js","sourcesContent":["define([\n\t\"./elFinder\"\n],function(elFinder) {\t\n\t/**\n\n\t * Default elFinder config\n\t *\n\t * @type  Object\n\t * @autor Dmitry (dio) Levashov\n\t */\n\telFinder.prototype._options = {\n\t\t/**\n\t\t * URLs of 3rd party libraries CDN\n\t\t * \n\t\t * @type Object\n\t\t */\n\t\tcdns : {\n\t\t\t// for editor etc.\n\t\t\tace        : 'https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.8',\n\t\t\tcodemirror : 'https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.52.0',\n\t\t\tckeditor   : 'https://cdnjs.cloudflare.com/ajax/libs/ckeditor/4.12.1',\n\t\t\tckeditor5  : 'https://cdn.ckeditor.com/ckeditor5/17.0.0',\n\t\t\ttinymce    : 'https://cdnjs.cloudflare.com/ajax/libs/tinymce/5.2.0',\n\t\t\tsimplemde  : 'https://cdnjs.cloudflare.com/ajax/libs/simplemde/1.11.2',\n\t\t\tfabric     : 'https://cdnjs.cloudflare.com/ajax/libs/fabric.js/3.6.2',\n\t\t\tfabric16   : 'https://cdnjs.cloudflare.com/ajax/libs/fabric.js/1.6.7',\n\t\t\ttui        : 'https://uicdn.toast.com',\n\t\t\t// for quicklook etc.\n\t\t\thls        : 'https://cdnjs.cloudflare.com/ajax/libs/hls.js/0.13.2/hls.min.js',\n\t\t\tdash       : 'https://cdnjs.cloudflare.com/ajax/libs/dashjs/3.0.2/dash.all.min.js',\n\t\t\tflv        : 'https://cdnjs.cloudflare.com/ajax/libs/flv.js/1.5.0/flv.min.js',\n\t\t\tvideojs    : 'https://cdnjs.cloudflare.com/ajax/libs/video.js/7.7.4',\n\t\t\tprettify   : 'https://cdn.jsdelivr.net/gh/google/code-prettify@f1c3473acd1e8ea8c8c1a60c56e89f5cdd06f915/loader/run_prettify.js',\n\t\t\tpsd        : 'https://cdnjs.cloudflare.com/ajax/libs/psd.js/3.2.0/psd.min.js',\n\t\t\trar        : 'https://cdn.jsdelivr.net/gh/nao-pon/rar.js@6cef13ec66dd67992fc7f3ea22f132d770ebaf8b/rar.min.js',\n\t\t\tzlibUnzip  : 'https://cdn.jsdelivr.net/gh/imaya/zlib.js@0.3.1/bin/unzip.min.js', // need check unzipFiles() in quicklook.plugins.js when update\n\t\t\tzlibGunzip : 'https://cdn.jsdelivr.net/gh/imaya/zlib.js@0.3.1/bin/gunzip.min.js',\n\t\t\tbzip2      : 'https://cdn.jsdelivr.net/gh/nao-pon/bzip2.js@0.8.0/bzip2.js',\n\t\t\tmarked     : 'https://cdnjs.cloudflare.com/ajax/libs/marked/0.7.0/marked.min.js',\n\t\t\tsparkmd5   : 'https://cdnjs.cloudflare.com/ajax/libs/spark-md5/3.0.0/spark-md5.min.js',\n\t\t\tjssha      : 'https://cdnjs.cloudflare.com/ajax/libs/jsSHA/2.3.1/sha.js',\n\t\t\tamr        : 'https://cdn.jsdelivr.net/gh/yxl/opencore-amr-js@dcf3d2b5f384a1d9ded2a54e4c137a81747b222b/js/amrnb.js',\n\t\t\ttiff       : 'https://cdn.jsdelivr.net/gh/seikichi/tiff.js@545ede3ee46b5a5bc5f06d65954e775aa2a64017/tiff.min.js'\n\t\t},\n\t\t\n\t\t/**\n\t\t * Connector url. Required!\n\t\t *\n\t\t * @type String\n\t\t */\n\t\turl : '',\n\n\t\t/**\n\t\t * Ajax request type.\n\t\t *\n\t\t * @type String\n\t\t * @default \"get\"\n\t\t */\n\t\trequestType : 'get',\n\t\t\n\t\t/**\n\t\t * Use CORS to connector url\n\t\t * \n\t\t * @type Boolean|null  true|false|null(Auto detect)\n\t\t */\n\t\tcors : null,\n\n\t\t/**\n\t\t * Array of header names to return parrot out in HTTP headers received from the server\n\t\t * \n\t\t * @type Array\n\t\t */\n\t\tparrotHeaders : [],\n\n\t\t/**\n\t\t * Maximum number of concurrent connections on request\n\t\t * \n\t\t * @type Number\n\t\t * @default 3\n\t\t */\n\t\trequestMaxConn : 3,\n\n\t\t/**\n\t\t * Transport to send request to backend.\n\t\t * Required for future extensions using websockets/webdav etc.\n\t\t * Must be an object with \"send\" method.\n\t\t * transport.send must return $.Deferred() object\n\t\t *\n\t\t * @type Object\n\t\t * @default null\n\t\t * @example\n\t\t *  transport : {\n\t\t *    init : function(elfinderInstance) { },\n\t\t *    send : function(options) {\n\t\t *      var dfrd = $.Deferred();\n\t\t *      // connect to backend ...\n\t\t *      return dfrd;\n\t\t *    },\n\t\t *    upload : function(data) {\n\t\t *      var dfrd = $.Deferred();\n\t\t *      // upload ...\n\t\t *      return dfrd;\n\t\t *    }\n\t\t *    \n\t\t *  }\n\t\t **/\n\t\ttransport : {},\n\n\t\t/**\n\t\t * URL to upload file to.\n\t\t * If not set - connector URL will be used\n\t\t *\n\t\t * @type String\n\t\t * @default  ''\n\t\t */\n\t\turlUpload : '',\n\n\t\t/**\n\t\t * Allow to drag and drop to upload files\n\t\t *\n\t\t * @type Boolean|String\n\t\t * @default  'auto'\n\t\t */\n\t\tdragUploadAllow : 'auto',\n\t\t\n\t\t/**\n\t\t * Confirmation dialog displayed at the time of overwriting upload\n\t\t * \n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\toverwriteUploadConfirm : true,\n\t\t\n\t\t/**\n\t\t * Max size of chunked data of file upload\n\t\t * \n\t\t * @type Number\n\t\t * @default  10485760(10MB)\n\t\t */\n\t\tuploadMaxChunkSize : 10485760,\n\t\t\n\t\t/**\n\t\t * Regular expression of file name to exclude when uploading folder\n\t\t * \n\t\t * @type Object\n\t\t * @default { win: /^(?:desktop\\.ini|thumbs\\.db)$/i, mac: /^\\.ds_store$/i }\n\t\t */\n\t\tfolderUploadExclude : {\n\t\t\twin: /^(?:desktop\\.ini|thumbs\\.db)$/i,\n\t\t\tmac: /^\\.ds_store$/i\n\t\t},\n\t\t\n\t\t/**\n\t\t * Timeout for upload using iframe\n\t\t *\n\t\t * @type Number\n\t\t * @default  0 - no timeout\n\t\t */\n\t\tiframeTimeout : 0,\n\t\t\n\t\t/**\n\t\t * Data to append to all requests and to upload files\n\t\t *\n\t\t * @type Object\n\t\t * @default  {}\n\t\t */\n\t\tcustomData : {},\n\t\t\n\t\t/**\n\t\t * Event listeners to bind on elFinder init\n\t\t *\n\t\t * @type Object\n\t\t * @default  {}\n\t\t */\n\t\thandlers : {},\n\n\t\t/**\n\t\t * Any custom headers to send across every ajax request\n\t\t *\n\t\t * @type Object\n\t\t * @default {}\n\t\t */\n\t\tcustomHeaders : {},\n\n\t\t/**\n\t\t * Any custom xhrFields to send across every ajax request\n\t\t *\n\t\t * @type Object\n\t\t * @default {}\n\t\t */\n\t\txhrFields : {},\n\n\t\t/**\n\t\t * Interface language\n\t\t *\n\t\t * @type String\n\t\t * @default \"en\"\n\t\t */\n\t\tlang : 'en',\n\n\t\t/**\n\t\t * Base URL of elfFinder library starting from Manager HTML\n\t\t * Auto detect when empty value\n\t\t * \n\t\t * @type String\n\t\t * @default \"\"\n\t\t */\n\t\tbaseUrl : '',\n\n\t\t/**\n\t\t * Base URL of i18n js files\n\t\t * baseUrl + \"js/i18n/\" when empty value\n\t\t * \n\t\t * @type String\n\t\t * @default \"\"\n\t\t */\n\t\ti18nBaseUrl : '',\n\t\t\n\t\t/**\n\t\t * Auto load required CSS\n\t\t * `false` to disable this function or\n\t\t * CSS URL Array to load additional CSS files\n\t\t * \n\t\t * @type Boolean|Array\n\t\t * @default true\n\t\t */\n\t\tcssAutoLoad : true,\n\n\t\t/**\n\t\t * Theme to load\n\t\t * {\"themeid\" : \"Theme CSS URL\"} or\n\t\t * {\"themeid\" : \"Theme manifesto.json URL\"} or\n\t\t * Theme manifesto.json Object\n\t\t * {\n\t\t *   \"themeid\" : {\n\t\t *     \"name\":\"Theme Name\",\n\t\t *     \"cssurls\":\"Theme CSS URL\",\n\t\t *     \"author\":\"Author Name\",\n\t\t *     \"email\":\"Author Email\",\n\t\t *     \"license\":\"License\",\n\t\t *     \"link\":\"Web Site URL\",\n\t\t *     \"image\":\"Screen Shot URL\",\n\t\t *     \"description\":\"Description\"\n\t\t *   }\n\t\t * }\n\t\t * \n\t\t * @type Object\n\t\t */\n\t\tthemes : {},\n\n\t\t/**\n\t\t * Theme id to initial theme\n\t\t * \n\t\t * @type String|Null\n\t\t */\n\t\ttheme : null,\n\n\t\t/**\n\t\t * Maximum value of error dialog open at the same time\n\t\t * \n\t\t * @type Number\n\t\t */\n\t\tmaxErrorDialogs : 5,\n\n\t\t/**\n\t\t * Additional css class for filemanager node.\n\t\t *\n\t\t * @type String\n\t\t */\n\t\tcssClass : '',\n\n\t\t/**\n\t\t * Active commands list. '*' means all of the commands that have been load.\n\t\t * If some required commands will be missed here, elFinder will add its\n\t\t *\n\t\t * @type Array\n\t\t */\n\t\tcommands : ['*'],\n\t\t// Available commands list\n\t\t//commands : [\n\t\t//\t'archive', 'back', 'chmod', 'colwidth', 'copy', 'cut', 'download', 'duplicate', 'edit', 'extract',\n\t\t//\t'forward', 'fullscreen', 'getfile', 'help', 'home', 'info', 'mkdir', 'mkfile', 'netmount', 'netunmount',\n\t\t//\t'open', 'opendir', 'paste', 'places', 'quicklook', 'reload', 'rename', 'resize', 'restore', 'rm',\n\t\t//\t'search', 'sort', 'up', 'upload', 'view', 'zipdl'\n\t\t//],\n\t\t\n\t\t/**\n\t\t * Commands options.\n\t\t *\n\t\t * @type Object\n\t\t **/\n\t\tcommandsOptions : {\n\t\t\t// // configure shortcuts of any command\n\t\t\t// // add `shortcuts` property into each command\n\t\t\t// any_command_name : {\n\t\t\t// \tshortcuts : [] // for disable this command's shortcuts\n\t\t\t// },\n\t\t\t// any_command_name : {\n\t\t\t// \tshortcuts : function(fm, shortcuts) {\n\t\t\t// \t\t// for add `CTRL + E` for this command action\n\t\t\t// \t\tshortcuts[0]['pattern'] += ' ctrl+e';\n\t\t\t// \t\treturn shortcuts;\n\t\t\t// \t}\n\t\t\t// },\n\t\t\t// any_command_name : {\n\t\t\t// \tshortcuts : function(fm, shortcuts) {\n\t\t\t// \t\t// for full customize of this command's shortcuts\n\t\t\t// \t\treturn [ { pattern: 'ctrl+e ctrl+down numpad_enter' + (fm.OS != 'mac' && ' enter') } ];\n\t\t\t// \t}\n\t\t\t// },\n\t\t\t// \"getfile\" command options.\n\t\t\tgetfile : {\n\t\t\t\tonlyURL  : false,\n\t\t\t\t// allow to return multiple files info\n\t\t\t\tmultiple : false,\n\t\t\t\t// allow to return filers info\n\t\t\t\tfolders  : false,\n\t\t\t\t// action after callback (\"\"/\"close\"/\"destroy\")\n\t\t\t\toncomplete : '',\n\t\t\t\t// action when callback is fail (\"\"/\"close\"/\"destroy\")\n\t\t\t\tonerror : '',\n\t\t\t\t// get path before callback call\n\t\t\t\tgetPath    : true, \n\t\t\t\t// get image sizes before callback call\n\t\t\t\tgetImgSize : false\n\t\t\t},\n\t\t\topen : {\n\t\t\t\t// HTTP method that request to the connector when item URL is not valid URL.\n\t\t\t\t// If you set to \"get\" will be displayed request parameter in the browser's location field\n\t\t\t\t// so if you want to conceal its parameters should be given \"post\".\n\t\t\t\t// Nevertheless, please specify \"get\" if you want to enable the partial request by HTTP Range header.\n\t\t\t\tmethod : 'post',\n\t\t\t\t// Where to open into : 'window'(default), 'tab' or 'tabs'\n\t\t\t\t// 'tabs' opens in each tabs\n\t\t\t\tinto   : 'window',\n\t\t\t\t// Default command list of action when select file\n\t\t\t\t// String value that is 'Command Name' or 'Command Name1/CommandName2...'\n\t\t\t\tselectAction : 'open'\n\t\t\t},\n\t\t\topennew : {\n\t\t\t\t// URL of to open elFinder manager\n\t\t\t\t// Default '' : Origin URL\n\t\t\t\turl : '',\n\t\t\t\t// Use search query of origin URL\n\t\t\t\tuseOriginQuery : true\n\t\t\t},\n\t\t\t// \"upload\" command options.\n\t\t\tupload : {\n\t\t\t\t// Open elFinder upload dialog: 'button' OR Open system OS upload dialog: 'uploadbutton'\n\t\t\t\tui : 'button'\n\t\t\t},\n\t\t\t// \"download\" command options.\n\t\t\tdownload : {\n\t\t\t\t// max request to download files when zipdl disabled\n\t\t\t\tmaxRequests : 10,\n\t\t\t\t// minimum count of files to use zipdl\n\t\t\t\tminFilesZipdl : 2\n\t\t\t},\n\t\t\t// \"quicklook\" command options.\n\t\t\tquicklook : {\n\t\t\t\tautoplay : true,\n\t\t\t\twidth    : 450,\n\t\t\t\theight   : 300,\n\t\t\t\t// ControlsList of HTML5 audio/video preview\n\t\t\t\t// see https://googlechrome.github.io/samples/media/controlslist.html\n\t\t\t\tmediaControlsList : '', // e.g. 'nodownload nofullscreen noremoteplayback'\n\t\t\t\t// Show toolbar of PDF preview (with <embed> tag)\n\t\t\t\tpdfToolbar : true,\n\t\t\t\t// Maximum lines to preview at initial\n\t\t\t\ttextInitialLines : 100,\n\t\t\t\t// Maximum lines to preview by prettify\n\t\t\t\tprettifyMaxLines : 300,\n\t\t\t\t// quicklook window must be contained in elFinder node on window open (true|false)\n\t\t\t\tcontain : false,\n\t\t\t\t// preview window into NavDock (0 : undocked | 1 : docked(show) | 2 : docked(hide))\n\t\t\t\tdocked   : 0,\n\t\t\t\t// Docked preview height ('auto' or Number of pixel) 'auto' is setted to the Navbar width\n\t\t\t\tdockHeight : 'auto',\n\t\t\t\t// media auto play when docked\n\t\t\t\tdockAutoplay : false,\n\t\t\t\t// Google Maps API key (Require Maps JavaScript API)\n\t\t\t\tgoogleMapsApiKey : '',\n\t\t\t\t// Google Maps API Options\n\t\t\t\tgoogleMapsOpts : {\n\t\t\t\t\tmaps : {},\n\t\t\t\t\tkml : {\n\t\t\t\t\t\tsuppressInfoWindows : false,\n\t\t\t\t\t\tpreserveViewport : false\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// ViewerJS (https://viewerjs.org/) Options\n\t\t\t\t// To enable this you need to place ViewerJS on the same server as elFinder and specify that URL in `url`.\n\t\t\t\tviewerjs : {\n\t\t\t\t\turl: '', // Example '/ViewerJS/index.html'\n\t\t\t\t\tmimes: ['application/pdf', 'application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.presentation'],\n\t\t\t\t\tpdfNative: true // Use Native PDF Viewer first\n\t\t\t\t},\n\t\t\t\t// MIME types to CAD-Files and 3D-Models online viewer on sharecad.org\n\t\t\t\t// Example ['image/vnd.dwg', 'image/vnd.dxf', 'model/vnd.dwf', 'application/vnd.hp-hpgl', 'application/plt', 'application/step', 'model/iges', 'application/vnd.ms-pki.stl', 'application/sat', 'image/cgm', 'application/x-msmetafile']\n\t\t\t\tsharecadMimes : [],\n\t\t\t\t// MIME types to use Google Docs online viewer\n\t\t\t\t// Example ['application/pdf', 'image/tiff', 'application/vnd.ms-office', 'application/msword', 'application/vnd.ms-word', 'application/vnd.ms-excel', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/postscript', 'application/rtf']\n\t\t\t\tgoogleDocsMimes : [],\n\t\t\t\t// MIME types to use Microsoft Office Online viewer\n\t\t\t\t// Example ['application/msword', 'application/vnd.ms-word', 'application/vnd.ms-excel', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'application/vnd.oasis.opendocument.text', 'application/vnd.oasis.opendocument.spreadsheet', 'application/vnd.oasis.opendocument.presentation']\n\t\t\t\t// These MIME types override \"googleDocsMimes\"\n\t\t\t\tofficeOnlineMimes : [],\n\t\t\t\t// File size threshold when using the dim command for obtain the image size necessary to image preview\n\t\t\t\tgetDimThreshold : '200K',\n\t\t\t\t// Max filesize to show filenames of the zip/tar/gzip/bzip file \n\t\t\t\tunzipMaxSize : '50M',\n\t\t\t\t// MIME-Type regular expression that does not check empty files\n\t\t\t\tmimeRegexNotEmptyCheck : /^application\\/vnd\\.google-apps\\./\n\t\t\t},\n\t\t\t// \"edit\" command options.\n\t\t\tedit : {\n\t\t\t\t// dialog width, integer(px) or integer+'%' (example: 650, '80%' ...)\n\t\t\t\tdialogWidth : void(0),\n\t\t\t\t// dialog height, integer(px) or integer+'%' (example: 650, '80%' ...)\n\t\t\t\tdialogHeight : void(0),\n\t\t\t\t// list of allowed mimetypes to edit of text files\n\t\t\t\t// if empty - any text files can be edited\n\t\t\t\tmimes : [],\n\t\t\t\t// MIME-types to unselected as default of \"File types to enable with \"New file\"\" in preferences\n\t\t\t\tmkfileHideMimes : [],\n\t\t\t\t// MIME-types of text file to make empty file\n\t\t\t\tmakeTextMimes : ['text/plain', 'text/css', 'text/html'],\n\t\t\t\t// Use the editor stored in the browser\n\t\t\t\t// This value allowd overwrite with user preferences\n\t\t\t\tuseStoredEditor : false,\n\t\t\t\t// Open the maximized editor window\n\t\t\t\t// This value allowd overwrite with user preferences\n\t\t\t\teditorMaximized : false,\n\t\t\t\t// edit files in wysisyg's\n\t\t\t\teditors : [\n\t\t\t\t\t// {\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * editor info\n\t\t\t\t\t// \t * @type  Object\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tinfo : { name: 'Editor Name' },\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * files mimetypes allowed to edit in current wysisyg\n\t\t\t\t\t// \t * @type  Array\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tmimes : ['text/html'], \n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * HTML element for editing area (optional for text editor)\n\t\t\t\t\t// \t * @type  String\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \thtml : '<textarea></textarea>', \n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Initialize editing area node (optional for text editor)\n\t\t\t\t\t// \t * \n\t\t\t\t\t// \t * @param  String  dialog DOM id\n\t\t\t\t\t// \t * @param  Object  target file object\n\t\t\t\t\t// \t * @param  String  target file content (text or Data URI Scheme(binary file))\n\t\t\t\t\t// \t * @param  Object  elFinder instance\n\t\t\t\t\t// \t * @type  Function\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tinit : function(id, file, content, fm) {\n\t\t\t\t\t// \t\t$(this).attr('id', id + '-text').val(content);\n\t\t\t\t\t// \t},\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Get edited contents (optional for text editor)\n\t\t\t\t\t// \t * @type  Function\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tgetContent : function() {\n\t\t\t\t\t// \t\treturn $(this).val();\n\t\t\t\t\t// \t},\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Called when \"edit\" dialog loaded.\n\t\t\t\t\t// \t * Place to init wysisyg.\n\t\t\t\t\t// \t * Can return wysisyg instance\n\t\t\t\t\t// \t *\n\t\t\t\t\t// \t * @param  DOMElement  textarea node\n\t\t\t\t\t// \t * @return Object      editor instance|jQuery.Deferred(return instance on resolve())\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tload : function(textarea) { },\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Called before \"edit\" dialog closed.\n\t\t\t\t\t// \t * Place to destroy wysisyg instance.\n\t\t\t\t\t// \t *\n\t\t\t\t\t// \t * @param  DOMElement  textarea node\n\t\t\t\t\t// \t * @param  Object      wysisyg instance (if was returned by \"load\" callback)\n\t\t\t\t\t// \t * @return void\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tclose : function(textarea, instance) { },\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Called before file content send to backend.\n\t\t\t\t\t// \t * Place to update textarea content if needed.\n\t\t\t\t\t// \t *\n\t\t\t\t\t// \t * @param  DOMElement  textarea node\n\t\t\t\t\t// \t * @param  Object      wysisyg instance (if was returned by \"load\" callback)\n\t\t\t\t\t// \t * @return void\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tsave : function(textarea, instance) {},\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Called after load() or save().\n\t\t\t\t\t// \t * Set focus to wysisyg editor.\n\t\t\t\t\t// \t *\n\t\t\t\t\t// \t * @param  DOMElement  textarea node\n\t\t\t\t\t// \t * @param  Object      wysisyg instance (if was returned by \"load\" callback)\n\t\t\t\t\t// \t * @return void\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tfocus : function(textarea, instance) {}\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Called after dialog resized..\n\t\t\t\t\t// \t *\n\t\t\t\t\t// \t * @param  DOMElement  textarea node\n\t\t\t\t\t// \t * @param  Object      wysisyg instance (if was returned by \"load\" callback)\n\t\t\t\t\t// \t * @param  Object      resize event object\n\t\t\t\t\t// \t * @param  Object      data object\n\t\t\t\t\t// \t * @return void\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tresize : function(textarea, instance, event, data) {}\n\t\t\t\t\t// \n\t\t\t\t\t// }\n\t\t\t\t],\n\t\t\t\t// Character encodings of select box\n\t\t\t\tencodings : ['Big5', 'Big5-HKSCS', 'Cp437', 'Cp737', 'Cp775', 'Cp850', 'Cp852', 'Cp855', 'Cp857', 'Cp858', \n\t\t\t\t\t'Cp862', 'Cp866', 'Cp874', 'EUC-CN', 'EUC-JP', 'EUC-KR', 'GB18030', 'ISO-2022-CN', 'ISO-2022-JP', 'ISO-2022-KR', \n\t\t\t\t\t'ISO-8859-1', 'ISO-8859-2', 'ISO-8859-3', 'ISO-8859-4', 'ISO-8859-5', 'ISO-8859-6', 'ISO-8859-7', \n\t\t\t\t\t'ISO-8859-8', 'ISO-8859-9', 'ISO-8859-13', 'ISO-8859-15', 'KOI8-R', 'KOI8-U', 'Shift-JIS', \n\t\t\t\t\t'Windows-1250', 'Windows-1251', 'Windows-1252', 'Windows-1253', 'Windows-1254', 'Windows-1257'],\n\t\t\t\t// options for extra editors\n\t\t\t\textraOptions : {\n\t\t\t\t\t// upload command options\n\t\t\t\t\tuploadOpts : {},\n\t\t\t\t\t// TUI Image Editor's options\n\t\t\t\t\ttuiImgEditOpts : {\n\t\t\t\t\t\t// Path prefix of icon-a.svg, icon-b.svg, icon-c.svg and icon-d.svg in the Theme. \n\t\t\t\t\t\t// `iconsPath` MUST follow the same origin policy.\n\t\t\t\t\t\ticonsPath : void(0), // default is \"./img/tui-\"\n\t\t\t\t\t\t// Theme object\n\t\t\t\t\t\ttheme : {}\n\t\t\t\t\t},\n\t\t\t\t\t// Pixo image editor constructor options - https://pixoeditor.com/\n\t\t\t\t\t// Require 'apikey' to enable it\n\t\t\t\t\tpixo: {\n\t\t\t\t\t\tapikey: ''\n\t\t\t\t\t},\n\t\t\t\t\t// Browsing manager URL for CKEditor, TinyMCE\n\t\t\t\t\t// Uses self location with the empty value or not defined.\n\t\t\t\t\t//managerUrl : 'elfinder.html'\n\t\t\t\t\tmanagerUrl : null,\n\t\t\t\t\t// CKEditor editor options\n\t\t\t\t\tckeditor: {},\n\t\t\t\t\t// CKEditor 5 editor options\n\t\t\t\t\tckeditor5: {\n\t\t\t\t\t\t// builds mode - 'classic', 'inline', 'balloon', 'balloon-block' or 'decoupled-document'\n\t\t\t\t\t\tmode: 'decoupled-document'\n\t\t\t\t\t},\n\t\t\t\t\t// TinyMCE editor options\n\t\t\t\t\ttinymce : {},\n\t\t\t\t\t// Setting for Online-Convert.com\n\t\t\t\t\tonlineConvert : {\n\t\t\t\t\t\tmaxSize  : 100, // (MB) Max 100MB on free account\n\t\t\t\t\t\tshowLink : true // It must be enabled with free account\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tfullscreen : {\n\t\t\t\t// fullscreen mode 'screen'(When the browser supports it) or 'window'\n\t\t\t\tmode: 'screen' // 'screen' or 'window'\n\t\t\t},\n\t\t\tsearch : {\n\t\t\t\t// Incremental search from the current view\n\t\t\t\tincsearch : {\n\t\t\t\t\tenable : true, // is enable true or false\n\t\t\t\t\tminlen : 1,    // minimum number of characters\n\t\t\t\t\twait   : 500   // wait milliseconds\n\t\t\t\t},\n\t\t\t\t// Additional search types\n\t\t\t\tsearchTypes : {\n\t\t\t\t\t// \"SearchMime\" is implemented in default\n\t\t\t\t\tSearchMime : {           // The key is search type that send to the connector\n\t\t\t\t\t\tname : 'btnMime',    // Button text to be processed in i18n()\n\t\t\t\t\t\ttitle : 'searchMime',// Button title to be processed in i18n()\n\t\t\t\t\t\tincsearch : 'mime'   // Incremental search target filed name of the file object\n\t\t\t\t\t\t// Or Callable function\n\t\t\t\t\t\t/* incsearch function example\n\t\t\t\t\t\tfunction(queryObject, cwdHashes, elFinderInstance) {\n\t\t\t\t\t\t\tvar q = queryObject.val;\n\t\t\t\t\t\t\tvar regex = queryObject.regex;\n\t\t\t\t\t\t\tvar matchedHashes = $.grep(cwdHashes, function(hash) {\n\t\t\t\t\t\t\t\tvar file = elFinderInstance.file(hash);\n\t\t\t\t\t\t\t\treturn (file && file.mime && file.mime.match(regex))? true : false;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn matchedHashes;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// \"info\" command options.\n\t\t\tinfo : {\n\t\t\t\t// If the URL of the Directory is null,\n\t\t\t\t// it is assumed that the link destination is a URL to open the folder in elFinder\n\t\t\t\tnullUrlDirLinkSelf : true,\n\t\t\t\t// Information items to be hidden by default\n\t\t\t\t// These name are 'size', 'aliasfor', 'path', 'link', 'dim', 'modify', 'perms', 'locked', 'owner', 'group', 'perm' and your custom info items label\n\t\t\t\thideItems : [],\n\t\t\t\t// Maximum file size (byte) to get file contents hash (md5, sha256 ...)\n\t\t\t\tshowHashMaxsize : 104857600, // 100 MB\n\t\t\t\t// Array of hash algorisms to show on info dialog\n\t\t\t\t// These name are 'md5', 'sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'sha3-224', 'sha3-256', 'sha3-384', 'sha3-512', 'shake128' and 'shake256'\n\t\t\t\tshowHashAlgorisms : ['md5', 'sha256'],\n\t\t\t\t// Options for fm.getContentsHashes()\n\t\t\t\tshowHashOpts : {\n\t\t\t\t\tshake128len : 256,\n\t\t\t\t\tshake256len : 512\n\t\t\t\t},\n\t\t\t\tcustom : {\n\t\t\t\t\t// /**\n\t\t\t\t\t//  * Example of custom info `desc`\n\t\t\t\t\t//  */\n\t\t\t\t\t// desc : {\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Lable (require)\n\t\t\t\t\t// \t * It is filtered by the `fm.i18n()`\n\t\t\t\t\t// \t * \n\t\t\t\t\t// \t * @type String\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tlabel : 'Description',\n\t\t\t\t\t// \t\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Template (require)\n\t\t\t\t\t// \t * `{id}` is replaced in dialog.id\n\t\t\t\t\t// \t * \n\t\t\t\t\t// \t * @type String\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \ttpl : '<div class=\"elfinder-info-desc\"><span class=\"elfinder-spinner\"></span></div>',\n\t\t\t\t\t// \t\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Restricts to mimetypes (optional)\n\t\t\t\t\t// \t * Exact match or category match\n\t\t\t\t\t// \t * \n\t\t\t\t\t// \t * @type Array\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \tmimes : ['text', 'image/jpeg', 'directory'],\n\t\t\t\t\t// \t\n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Restricts to file.hash (optional)\n\t\t\t\t\t// \t * \n\t\t\t\t\t// \t * @ type Regex\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \thashRegex : /^l\\d+_/,\n\t\t\t\t\t// \n\t\t\t\t\t// \t/**\n\t\t\t\t\t// \t * Request that asks for the description and sets the field (optional)\n\t\t\t\t\t// \t * \n\t\t\t\t\t// \t * @type Function\n\t\t\t\t\t// \t */\n\t\t\t\t\t// \taction : function(file, fm, dialog) {\n\t\t\t\t\t// \t\tfm.request({\n\t\t\t\t\t// \t\tdata : { cmd : 'desc', target: file.hash },\n\t\t\t\t\t// \t\t\tpreventDefault: true,\n\t\t\t\t\t// \t\t})\n\t\t\t\t\t// \t\t.fail(function() {\n\t\t\t\t\t// \t\t\tdialog.find('div.elfinder-info-desc').html(fm.i18n('unknown'));\n\t\t\t\t\t// \t\t})\n\t\t\t\t\t// \t\t.done(function(data) {\n\t\t\t\t\t// \t\t\tdialog.find('div.elfinder-info-desc').html(data.desc);\n\t\t\t\t\t// \t\t});\n\t\t\t\t\t// \t}\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t},\n\t\t\tmkdir: {\n\t\t\t\t// Enable automatic switching function [\"New Folder\" / \"Into New Folder\"] of toolbar buttton\n\t\t\t\tintoNewFolderToolbtn: false\n\t\t\t},\n\t\t\tresize: {\n\t\t\t\t// defalt status of snap to 8px grid of the jpeg image (\"enable\" or \"disable\")\n\t\t\t\tgrid8px : 'disable',\n\t\t\t\t// Preset size array [width, height]\n\t\t\t\tpresetSize : [[320, 240], [400, 400], [640, 480], [800,600]],\n\t\t\t\t// File size (bytes) threshold when using the `dim` command for obtain the image size necessary to start editing\n\t\t\t\tgetDimThreshold : 204800,\n\t\t\t\t// File size (bytes) to request to get substitute image (400px) with the `dim` command\n\t\t\t\tdimSubImgSize : 307200\n\t\t\t},\n\t\t\trm: {\n\t\t\t\t// If trash is valid, items moves immediately to the trash holder without confirm.\n\t\t\t\tquickTrash : true,\n\t\t\t\t// Maximum wait seconds when checking the number of items to into the trash\n\t\t\t\tinfoCheckWait : 10,\n\t\t\t\t// Maximum number of items that can be placed into the Trash at one time\n\t\t\t\ttoTrashMaxItems : 1000\n\t\t\t},\n\t\t\tpaste : {\n\t\t\t\tmoveConfirm : false // Display confirmation dialog when moving items\n\t\t\t},\n\t\t\thelp : {\n\t\t\t\t// Tabs to show\n\t\t\t\tview : ['about', 'shortcuts', 'help', 'integrations', 'debug'],\n\t\t\t\t// HTML source URL of the heip tab\n\t\t\t\thelpSource : ''\n\t\t\t},\n\t\t\tpreference : {\n\t\t\t\t// dialog width\n\t\t\t\twidth: 600,\n\t\t\t\t// dialog height\n\t\t\t\theight: 400,\n\t\t\t\t// tabs setting see preference.js : build()\n\t\t\t\tcategories: null,\n\t\t\t\t// preference setting see preference.js : build()\n\t\t\t\tprefs: null,\n\t\t\t\t// language setting  see preference.js : build()\n\t\t\t\tlangs: null,\n\t\t\t\t// Command list of action when select file\n\t\t\t\t// Array value are 'Command Name' or 'Command Name1/CommandName2...'\n\t\t\t\tselectActions : ['open', 'edit/download', 'resize/edit/download', 'download', 'quicklook']\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Disabled commands relationship\n\t\t * \n\t\t * @type Object\n\t\t */\n\t\tdisabledCmdsRels : {\n\t\t\t'get'       : ['edit'],\n\t\t\t'rm'        : ['cut', 'empty'],\n\t\t\t'file&url=' : ['download', 'zipdl'] // file command and volume options url is empty\n\t\t},\n\n\t\t/**\n\t\t * Callback for prepare boot up\n\t\t * \n\t\t * - The this object in the function is an elFinder node\n\t\t * - The first parameter is elFinder Instance\n\t\t * - The second parameter is an object of other parameters\n\t\t *   For now it can use `dfrdsBeforeBootup` Array\n\t\t * \n\t\t * @type Function\n\t\t * @default null\n\t\t * @return void\n\t\t */\n\t\tbootCallback : null,\n\t\t\n\t\t/**\n\t\t * Callback for \"getfile\" commands.\n\t\t * Required to use elFinder with WYSIWYG editors etc..\n\t\t *\n\t\t * @type Function\n\t\t * @default null (command not active)\n\t\t */\n\t\tgetFileCallback : null,\n\t\t\n\t\t/**\n\t\t * Default directory view. icons/list\n\t\t *\n\t\t * @type String\n\t\t * @default \"icons\"\n\t\t */\n\t\tdefaultView : 'icons',\n\t\t\n\t\t/**\n\t\t * Hash of default directory path to open\n\t\t * \n\t\t * NOTE: This setting will be disabled if the target folder is specified in location.hash.\n\t\t * \n\t\t * If you want to find the hash in Javascript\n\t\t * can be obtained with the following code. (In the case of a standard hashing method)\n\t\t * \n\t\t * var volumeId = 'l1_'; // volume id\n\t\t * var path = 'path/to/target'; // without root path\n\t\t * //var path = 'path\\\\to\\\\target'; // use \\ on windows server\n\t\t * var hash = volumeId + btoa(path).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '.').replace(/\\.+$/, '');\n\t\t * \n\t\t * @type String\n\t\t * @default \"\"\n\t\t */\n\t\tstartPathHash : '',\n\n\t\t/**\n\t\t * Emit a sound when a file is deleted\n\t\t * Sounds are in sounds/ folder\n\t\t * \n\t\t * @type Boolean\n\t\t * @default true\n\t\t */\n\t\tsound : true,\n\t\t\n\t\t/**\n\t\t * UI plugins to load.\n\t\t * Current dir ui and dialogs loads always.\n\t\t * Here set not required plugins as folders tree/toolbar/statusbar etc.\n\t\t *\n\t\t * @type Array\n\t\t * @default ['toolbar', 'places', 'tree', 'path', 'stat']\n\t\t * @full ['toolbar', 'places', 'tree', 'path', 'stat']\n\t\t */\n\t\tui : ['toolbar', 'places', 'tree', 'path', 'stat'],\n\t\t\n\t\t/**\n\t\t * Some UI plugins options.\n\t\t * @type Object\n\t\t */\n\t\tuiOptions : {\n\t\t\t// toolbar configuration\n\t\t\ttoolbar : [\n\t\t\t\t['home', 'back', 'forward', 'up', 'reload'],\n\t\t\t\t['netmount'],\n\t\t\t\t['mkdir', 'mkfile', 'upload'],\n\t\t\t\t['open', 'download', 'getfile'],\n\t\t\t\t['undo', 'redo'],\n\t\t\t\t['copy', 'cut', 'paste', 'rm', 'empty', 'hide'],\n\t\t\t\t['duplicate', 'rename', 'edit', 'resize', 'chmod'],\n\t\t\t\t['selectall', 'selectnone', 'selectinvert'],\n\t\t\t\t['quicklook', 'info'],\n\t\t\t\t['extract', 'archive'],\n\t\t\t\t['search'],\n\t\t\t\t['view', 'sort'],\n\t\t\t\t['preference', 'help'],\n\t\t\t\t['fullscreen']\n\t\t\t],\n\t\t\t// toolbar extra options\n\t\t\ttoolbarExtra : {\n\t\t\t\t// also displays the text label on the button (true / false / 'none')\n\t\t\t\tdisplayTextLabel: false,\n\t\t\t\t// Exclude `displayTextLabel` setting UA type\n\t\t\t\tlabelExcludeUA: ['Mobile'],\n\t\t\t\t// auto hide on initial open\n\t\t\t\tautoHideUA: ['Mobile'],\n\t\t\t\t// Initial setting value of hide button in toolbar setting\n\t\t\t\tdefaultHides: ['home', 'reload'],\n\t\t\t\t// show Preference button ('none', 'auto', 'always')\n\t\t\t\t// If you do not include 'preference' in the context menu you should specify 'auto' or 'always'\n\t\t\t\tshowPreferenceButton: 'none',\n\t\t\t\t// show Preference button into contextmenu of the toolbar (true / false)\n\t\t\t\tpreferenceInContextmenu: true\n\t\t\t},\n\t\t\t// directories tree options\n\t\t\ttree : {\n\t\t\t\t// set path info to attr title\n\t\t\t\tattrTitle : true,\n\t\t\t\t// expand current root on init\n\t\t\t\topenRootOnLoad : true,\n\t\t\t\t// expand current work directory on open\n\t\t\t\topenCwdOnOpen  : true,\n\t\t\t\t// auto loading current directory parents and do expand their node.\n\t\t\t\tsyncTree : true,\n\t\t\t\t// Maximum number of display of each child trees\n\t\t\t\t// The tree of directories with children exceeding this number will be split\n\t\t\t\tsubTreeMax : 100,\n\t\t\t\t// Numbar of max connctions of subdirs request\n\t\t\t\tsubdirsMaxConn : 2,\n\t\t\t\t// Number of max simultaneous processing directory of subdirs\n\t\t\t\tsubdirsAtOnce : 5,\n\t\t\t\t// Durations of each animations\n\t\t\t\tdurations : {\n\t\t\t\t\tslideUpDown : 'fast',\n\t\t\t\t\tautoScroll : 'fast'\n\t\t\t\t}\n\t\t\t\t// ,\n\t\t\t\t// /**\n\t\t\t\t//  * Add CSS class name to navbar directories (optional)\n\t\t\t\t//  * see: https://github.com/Studio-42/elFinder/pull/1061,\n\t\t\t\t//  *      https://github.com/Studio-42/elFinder/issues/1231\n\t\t\t\t//  * \n\t\t\t\t//  * @type Function\n\t\t\t\t//  */\n\t\t\t\t// getClass: function(dir) {\n\t\t\t\t// \t// e.g. This adds the directory's name (lowercase) with prefix as a CSS class\n\t\t\t\t// \treturn 'elfinder-tree-' + dir.name.replace(/[ \"]/g, '').toLowerCase();\n\t\t\t\t// }\n\t\t\t},\n\t\t\t// navbar options\n\t\t\tnavbar : {\n\t\t\t\tminWidth : 150,\n\t\t\t\tmaxWidth : 500,\n\t\t\t\t// auto hide on initial open\n\t\t\t\tautoHideUA: [] // e.g. ['Mobile']\n\t\t\t},\n\t\t\tnavdock : {\n\t\t\t\t// disabled navdock ui\n\t\t\t\tdisabled : false,\n\t\t\t\t// percentage of initial maximum height to work zone\n\t\t\t\tinitMaxHeight : '50%',\n\t\t\t\t// percentage of maximum height to work zone by user resize action\n\t\t\t\tmaxHeight : '90%'\n\t\t\t},\n\t\t\tcwd : {\n\t\t\t\t// display parent folder with \"..\" name :)\n\t\t\t\toldSchool : false,\n\t\t\t\t\n\t\t\t\t// fm.UA types array to show item select checkboxes e.g. ['All'] or ['Mobile'] etc. default: ['Touch']\n\t\t\t\tshowSelectCheckboxUA : ['Touch'],\n\n\t\t\t\t// Enable dragout by dragstart with Alt key or Shift key\n\t\t\t\tmetakeyDragout : true,\n\t\t\t\t\n\t\t\t\t// file info columns displayed\n\t\t\t\tlistView : {\n\t\t\t\t\t// name is always displayed, cols are ordered\n\t\t\t\t\t// e.g. ['perm', 'date', 'size', 'kind', 'owner', 'group', 'mode']\n\t\t\t\t\t// mode: 'mode'(by `fileModeStyle` setting), 'modestr'(rwxr-xr-x) , 'modeoct'(755), 'modeboth'(rwxr-xr-x (755))\n\t\t\t\t\t// 'owner', 'group' and 'mode', It's necessary set volume driver option \"statOwner\" to `true`\n\t\t\t\t\t// for custom, characters that can be used in the name is `a-z0-9_`\n\t\t\t\t\tcolumns : ['perm', 'date', 'size', 'kind'],\n\t\t\t\t\t// override this if you want custom columns name\n\t\t\t\t\t// example\n\t\t\t\t\t// columnsCustomName : {\n\t\t\t\t\t//\t\tdate : 'Last modification',\n\t\t\t\t\t// \t\tkind : 'Mime type'\n\t\t\t\t\t// }\n\t\t\t\t\tcolumnsCustomName : {},\n\t\t\t\t\t// fixed list header colmun\n\t\t\t\t\tfixedHeader : true\n\t\t\t\t},\n\n\t\t\t\t// icons view setting\n\t\t\t\ticonsView : {\n\t\t\t\t\t// default icon size (0-3 in default CSS (cwd.css - elfinder-cwd-size[number]))\n\t\t\t\t\tsize: 0,\n\t\t\t\t\t// number of maximum size (3 in default CSS (cwd.css - elfinder-cwd-size[number]))\n\t\t\t\t\t// uses in preference.js\n\t\t\t\t\tsizeMax: 3,\n\t\t\t\t\t// Name of each size\n\t\t\t\t\tsizeNames: {\n\t\t\t\t\t\t0: 'viewSmall',\n\t\t\t\t\t\t1: 'viewMedium',\n\t\t\t\t\t\t2: 'viewLarge',\n\t\t\t\t\t\t3: 'viewExtraLarge' \n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\t// /**\n\t\t\t\t//  * Add CSS class name to cwd directories (optional)\n\t\t\t\t//  * see: https://github.com/Studio-42/elFinder/pull/1061,\n\t\t\t\t//  *      https://github.com/Studio-42/elFinder/issues/1231\n\t\t\t\t//  * \n\t\t\t\t//  * @type Function\n\t\t\t\t//  */\n\t\t\t\t// ,\n\t\t\t\t// getClass: function(file) {\n\t\t\t\t// \t// e.g. This adds the directory's name (lowercase) with prefix as a CSS class\n\t\t\t\t// \treturn 'elfinder-cwd-' + file.name.replace(/[ \"]/g, '').toLowerCase();\n\t\t\t\t//}\n\t\t\t\t\n\t\t\t\t//,\n\t\t\t\t//// Template placeholders replacement rules for overwrite. see ui/cwd.js replacement\n\t\t\t\t//replacement : {\n\t\t\t\t//\ttooltip : function(f, fm) {\n\t\t\t\t//\t\tvar list = fm.viewType == 'list', // current view type\n\t\t\t\t//\t\t\tquery = fm.searchStatus.state == 2, // is in search results\n\t\t\t\t//\t\t\ttitle = fm.formatDate(f) + (f.size > 0 ? ' ('+fm.formatSize(f.size)+')' : ''),\n\t\t\t\t//\t\t\tinfo  = '';\n\t\t\t\t//\t\tif (query && f.path) {\n\t\t\t\t//\t\t\tinfo = fm.escape(f.path.replace(/\\/[^\\/]*$/, ''));\n\t\t\t\t//\t\t} else {\n\t\t\t\t//\t\t\tinfo = f.tooltip? fm.escape(f.tooltip).replace(/\\r/g, '&#13;') : '';\n\t\t\t\t//\t\t}\n\t\t\t\t//\t\tif (list) {\n\t\t\t\t//\t\t\tinfo += (info? '&#13;' : '') + fm.escape(f.name);\n\t\t\t\t//\t\t}\n\t\t\t\t//\t\treturn info? info + '&#13;' + title : title;\n\t\t\t\t//\t}\n\t\t\t\t//}\n\t\t\t},\n\t\t\tpath : {\n\t\t\t\t// Move to head of work zone without UI navbar\n\t\t\t\ttoWorkzoneWithoutNavbar : true\n\t\t\t},\n\t\t\tdialog : {\n\t\t\t\t// Enable to auto focusing on mouse over in the target form element\n\t\t\t\tfocusOnMouseOver : true\n\t\t\t},\n\t\t\ttoast : {\n\t\t\t\tanimate : {\n\t\t\t\t\t// to show\n\t\t\t\t\tshowMethod: 'fadeIn', // fadeIn, slideDown, and show are built into jQuery\n\t\t\t\t\tshowDuration: 300,    // milliseconds\n\t\t\t\t\tshowEasing: 'swing',  // swing and linear are built into jQuery\n\t\t\t\t\t// timeout to hide\n\t\t\t\t\ttimeOut: 3000,\n\t\t\t\t\t// to hide\n\t\t\t\t\thideMethod: 'fadeOut',\n\t\t\t\t\thideDuration: 1500,\n\t\t\t\t\thideEasing: 'swing'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * MIME regex of send HTTP header \"Content-Disposition: inline\" or allow preview in quicklook\n\t\t * This option will overwrite by connector configuration\n\t\t * \n\t\t * @type String\n\t\t * @default '^(?:(?:image|video|audio)|text/plain|application/pdf$)'\n\t\t * @example\n\t\t *  dispInlineRegex : '.',  // is allow inline of all of MIME types\n\t\t *  dispInlineRegex : '$^', // is not allow inline of all of MIME types\n\t\t */\n\t\tdispInlineRegex : '^(?:(?:image|video|audio)|application/(?:x-mpegURL|dash\\+xml)|(?:text/plain|application/pdf)$)',\n\n\t\t/**\n\t\t * Display only required files by types\n\t\t *\n\t\t * @type Array\n\t\t * @default []\n\t\t * @example\n\t\t *  onlyMimes : [\"image\"] - display all images\n\t\t *  onlyMimes : [\"image/png\", \"application/x-shockwave-flash\"] - display png and flash\n\t\t */\n\t\tonlyMimes : [],\n\n\t\t/**\n\t\t * Custom files sort rules.\n\t\t * All default rules (name/size/kind/date/perm/mode/owner/group) set in elFinder._sortRules\n\t\t *\n\t\t * @type {Object}\n\t\t * @example\n\t\t * sortRules : {\n\t\t *   name : function(file1, file2) { return file1.name.toLowerCase().localeCompare(file2.name.toLowerCase()); }\n\t\t * }\n\t\t */\n\t\tsortRules : {},\n\n\t\t/**\n\t\t * Default sort type.\n\t\t *\n\t\t * @type {String}\n\t\t */\n\t\tsortType : 'name',\n\t\t\n\t\t/**\n\t\t * Default sort order.\n\t\t *\n\t\t * @type {String}\n\t\t * @default \"asc\"\n\t\t */\n\t\tsortOrder : 'asc',\n\t\t\n\t\t/**\n\t\t * Display folders first?\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default true\n\t\t */\n\t\tsortStickFolders : true,\n\t\t\n\t\t/**\n\t\t * Sort also applies to the treeview (null: disable this feature)\n\t\t *\n\t\t * @type Boolean|null\n\t\t * @default false\n\t\t */\n\t\tsortAlsoTreeview : false,\n\t\t\n\t\t/**\n\t\t * If true - elFinder will formating dates itself, \n\t\t * otherwise - backend date will be used.\n\t\t *\n\t\t * @type Boolean\n\t\t */\n\t\tclientFormatDate : true,\n\t\t\n\t\t/**\n\t\t * Show UTC dates.\n\t\t * Required set clientFormatDate to true\n\t\t *\n\t\t * @type Boolean\n\t\t */\n\t\tUTCDate : false,\n\t\t\n\t\t/**\n\t\t * File modification datetime format.\n\t\t * Value from selected language data  is used by default.\n\t\t * Set format here to overwrite it.\n\t\t *\n\t\t * @type String\n\t\t * @default  \"\"\n\t\t */\n\t\tdateFormat : '',\n\t\t\n\t\t/**\n\t\t * File modification datetime format in form \"Yesterday 12:23:01\".\n\t\t * Value from selected language data is used by default.\n\t\t * Set format here to overwrite it.\n\t\t * Use $1 for \"Today\"/\"Yesterday\" placeholder\n\t\t *\n\t\t * @type String\n\t\t * @default  \"\"\n\t\t * @example \"$1 H:m:i\"\n\t\t */\n\t\tfancyDateFormat : '',\n\t\t\n\t\t/**\n\t\t * Style of file mode at cwd-list, info dialog\n\t\t * 'string' (ex. rwxr-xr-x) or 'octal' (ex. 755) or 'both' (ex. rwxr-xr-x (755))\n\t\t * \n\t\t * @type {String}\n\t\t * @default 'both'\n\t\t */\n\t\tfileModeStyle : 'both',\n\t\t\n\t\t/**\n\t\t * elFinder width\n\t\t *\n\t\t * @type String|Number\n\t\t * @default  \"auto\"\n\t\t */\n\t\twidth : 'auto',\n\t\t\n\t\t/**\n\t\t * elFinder node height\n\t\t * Number: pixcel or String: Number + \"%\"\n\t\t *\n\t\t * @type Number | String\n\t\t * @default  400\n\t\t */\n\t\theight : 400,\n\t\t\n\t\t/**\n\t\t * Base node object or selector\n\t\t * Element which is the reference of the height percentage\n\t\t *\n\t\t * @type Object|String\n\t\t * @default null | $(window) (if height is percentage)\n\t\t **/\n\t\theightBase : null,\n\t\t\n\t\t/**\n\t\t * Make elFinder resizable if jquery ui resizable available\n\t\t *\n\t\t * @type Boolean\n\t\t * @default  true\n\t\t */\n\t\tresizable : true,\n\t\t\n\t\t/**\n\t\t * Timeout before open notifications dialogs\n\t\t *\n\t\t * @type Number\n\t\t * @default  500 (.5 sec)\n\t\t */\n\t\tnotifyDelay : 500,\n\t\t\n\t\t/**\n\t\t * Position CSS, Width of notifications dialogs\n\t\t *\n\t\t * @type Object\n\t\t * @default {position: {}, width : null} - Apply CSS definition\n\t\t * position: CSS object | null (null: position center & middle)\n\t\t */\n\t\tnotifyDialog : {position : {}, width : null, canClose : false, hiddens : ['open']},\n\t\t\n\t\t/**\n\t\t * Dialog contained in the elFinder node\n\t\t * \n\t\t * @type Boolean\n\t\t * @default false\n\t\t */\n\t\tdialogContained : false,\n\t\t\n\t\t/**\n\t\t * Allow shortcuts\n\t\t *\n\t\t * @type Boolean\n\t\t * @default  true\n\t\t */\n\t\tallowShortcuts : true,\n\t\t\n\t\t/**\n\t\t * Remeber last opened dir to open it after reload or in next session\n\t\t *\n\t\t * @type Boolean\n\t\t * @default  true\n\t\t */\n\t\trememberLastDir : true,\n\t\t\n\t\t/**\n\t\t * Clear historys(elFinder) on reload(not browser) function\n\t\t * Historys was cleared on Reload function on elFinder 2.0 (value is true)\n\t\t * \n\t\t * @type Boolean\n\t\t * @default  false\n\t\t */\n\t\treloadClearHistory : false,\n\t\t\n\t\t/**\n\t\t * Use browser native history with supported browsers\n\t\t *\n\t\t * @type Boolean\n\t\t * @default  true\n\t\t */\n\t\tuseBrowserHistory : true,\n\t\t\n\t\t/**\n\t\t * Lazy load config.\n\t\t * How many files display at once?\n\t\t *\n\t\t * @type Number\n\t\t * @default  50\n\t\t */\n\t\tshowFiles : 50,\n\t\t\n\t\t/**\n\t\t * Lazy load config.\n\t\t * Distance in px to cwd bottom edge to start display files\n\t\t *\n\t\t * @type Number\n\t\t * @default  50\n\t\t */\n\t\tshowThreshold : 50,\n\t\t\n\t\t/**\n\t\t * Additional rule to valid new file name.\n\t\t * By default not allowed empty names or '..'\n\t\t * This setting does not have a sense of security.\n\t\t *\n\t\t * @type false|RegExp|function\n\t\t * @default  false\n\t\t * @example\n\t\t *  disable names with spaces:\n\t\t *  validName : /^[^\\s]+$/,\n\t\t */\n\t\tvalidName : false,\n\t\t\n\t\t/**\n\t\t * Additional rule to filtering for browsing.\n\t\t * This setting does not have a sense of security.\n\t\t * \n\t\t * The object `this` is elFinder instance object in this function\n\t\t *\n\t\t * @type false|RegExp|function\n\t\t * @default  false\n\t\t * @example\n\t\t *  show only png and jpg files:\n\t\t *  fileFilter : /.*\\.(png|jpg)$/i,\n\t\t *  \n\t\t *  show only image type files:\n\t\t *  fileFilter : function(file) { return file.mime && file.mime.match(/^image\\//i); },\n\t\t */\n\t\tfileFilter : false,\n\t\t\n\t\t/**\n\t\t * Backup name suffix.\n\t\t *\n\t\t * @type String\n\t\t * @default  \"~\"\n\t\t */\n\t\tbackupSuffix : '~',\n\t\t\n\t\t/**\n\t\t * Sync content interval\n\t\t *\n\t\t * @type Number\n\t\t * @default  0 (do not sync)\n\t\t */\n\t\tsync : 0,\n\t\t\n\t\t/**\n\t\t * Sync start on load if sync value >= 1000\n\t\t *\n\t\t * @type     Bool\n\t\t * @default  true\n\t\t */\n\t\tsyncStart : true,\n\t\t\n\t\t/**\n\t\t * How many thumbnails create in one request\n\t\t *\n\t\t * @type Number\n\t\t * @default  5\n\t\t */\n\t\tloadTmbs : 5,\n\t\t\n\t\t/**\n\t\t * Cookie option for browsersdoes not suppot localStorage\n\t\t *\n\t\t * @type Object\n\t\t */\n\t\tcookie         : {\n\t\t\texpires : 30,\n\t\t\tdomain  : '',\n\t\t\tpath    : '/',\n\t\t\tsecure  : false\n\t\t},\n\t\t\n\t\t/**\n\t\t * Contextmenu config\n\t\t *\n\t\t * @type Object\n\t\t */\n\t\tcontextmenu : {\n\t\t\t// navbarfolder menu\n\t\t\tnavbar : ['open', 'opennew', 'download', '|', 'upload', 'mkdir', '|', 'copy', 'cut', 'paste', 'duplicate', '|', 'rm', 'empty', 'hide', '|', 'rename', '|', 'archive', '|', 'places', 'info', 'chmod', 'netunmount'],\n\t\t\t// current directory menu\n\t\t\tcwd    : ['undo', 'redo', '|', 'back', 'up', 'reload', '|', 'upload', 'mkdir', 'mkfile', 'paste', '|', 'empty', 'hide', '|', 'view', 'sort', 'selectall', 'colwidth', '|', 'places', 'info', 'chmod', 'netunmount', '|', 'fullscreen', '|', 'preference'],\n\t\t\t// current directory file menu\n\t\t\tfiles  : ['getfile', '|' ,'open', 'opennew', 'download', 'opendir', 'quicklook', '|', 'upload', 'mkdir', '|', 'copy', 'cut', 'paste', 'duplicate', '|', 'rm', 'empty', 'hide', '|', 'rename', 'edit', 'resize', '|', 'archive', 'extract', '|', 'selectall', 'selectinvert', '|', 'places', 'info', 'chmod', 'netunmount']\n\t\t},\n\n\t\t/**\n\t\t * elFinder node enable always\n\t\t * This value will set to `true` if <body> has elFinder node only\n\t\t * \n\t\t * @type     Bool\n\t\t * @default  false\n\t\t */\n\t\tenableAlways : false,\n\t\t\n\t\t/**\n\t\t * elFinder node enable by mouse over\n\t\t * \n\t\t * @type     Bool\n\t\t * @default  true\n\t\t */\n\t\tenableByMouseOver : true,\n\n\t\t/**\n\t\t * Show window close confirm dialog\n\t\t * Value is which state to show\n\t\t * 'hasNotifyDialog', 'editingFile', 'hasSelectedItem' and 'hasClipboardData'\n\t\t * \n\t\t * @type     Array\n\t\t * @default  ['hasNotifyDialog', 'editingFile']\n\t\t */\n\t\twindowCloseConfirm : ['hasNotifyDialog', 'editingFile'],\n\n\t\t/**\n\t\t * Function decoding 'raw' string converted to unicode\n\t\t * It is used instead of fm.decodeRawString(str)\n\t\t * \n\t\t * @type Null|Function\n\t\t */\n\t\trawStringDecoder : typeof Encoding === 'object' && $.isFunction(Encoding.convert)? function(str) {\n\t\t\treturn Encoding.convert(str, {\n\t\t\t\tto: 'UNICODE',\n\t\t\t\ttype: 'string'\n\t\t\t});\n\t\t} : null,\n\n\t\t/**\n\t\t * Debug config\n\t\t *\n\t\t * @type Array|String('auto')|Boolean(true|false)\n\t\t */\n\t\tdebug : ['error', 'warning', 'event-destroy'],\n\n\t\t/**\n\t\t * Show toast messeges of backend warning (if found data `debug.backendErrors` in backend results)\n\t\t *\n\t\t * @type Boolean|Object (toast options)\n\t\t */\n\t\ttoastBackendWarn : true\n\t};\n\n\treturn elFinder;\n});\n"]}