{"version":3,"sources":["command.js"],"names":["define","elFinder","prototype","command","fm","this","name","dialogClass","className","title","linkedCmds","state","alwaysEnabled","noChangeDirOnRemovedCwd","_disabled","disableOnSearch","updateOnSelect","syncTitleOnChange","keepContextmenu","_handlers","enable","update","value","disable","open reload load sync","isCommandEnabled","change","handlers","shortcuts","options","ui","listeners","setup","opts","i","s","sc","self","setCallback","cb","callback","e","exec","_userAction","_currentType","enabled","checks","searchStatus","$","each","selected","h","optionsByHashes","volOptions","id","indexOf","event","call","messages","i18n","extendsCmd","Object","assign","Array","isArray","select","cmd","handler","bind","proxy","length","description","shortcut","type","init","files","Deferred","reject","getUndo","resData","disabled","active","getstate","v","c","push","debug","hashes","grep","hash","file","map","selectedFiles","fmDialog","content","cssClass","dialog"],"mappings":"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","file":"../command.js","sourcesContent":["define([\n\t\"./elFinder\"\n],function(elFinder) {\n\t/**\n\t * elFinder command prototype\n\t *\n\t * @type  elFinder.command\n\t * @author  Dmitry (dio) Levashov\n\t */\n\telFinder.prototype.command = function(fm) {\n\t\t\"use strict\";\n\t\t/**\n\t\t * elFinder instance\n\t\t *\n\t\t * @type  elFinder\n\t\t */\n\t\tthis.fm = fm;\n\t\t\n\t\t/**\n\t\t * Command name, same as class name\n\t\t *\n\t\t * @type  String\n\t\t */\n\t\tthis.name = '';\n\t\t\n\t\t/**\n\t\t * Dialog class name\n\t\t *\n\t\t * @type  String\n\t\t */\n\t\tthis.dialogClass = '';\n\n\t\t/**\n\t\t * Command icon class name with out 'elfinder-button-icon-'\n\t\t * Use this.name if it is empty\n\t\t *\n\t\t * @type  String\n\t\t */\n\t\tthis.className = '';\n\n\t\t/**\n\t\t * Short command description\n\t\t *\n\t\t * @type  String\n\t\t */\n\t\tthis.title = '';\n\t\t\n\t\t/**\n\t\t * Linked(Child) commands name\n\t\t * They are loaded together when tthis command is loaded.\n\t\t * \n\t\t * @type  Array\n\t\t */\n\t\tthis.linkedCmds = [];\n\t\t\n\t\t/**\n\t\t * Current command state\n\t\t *\n\t\t * @example\n\t\t * this.state = -1; // command disabled\n\t\t * this.state = 0;  // command enabled\n\t\t * this.state = 1;  // command active (for example \"fullscreen\" command while elfinder in fullscreen mode)\n\t\t * @default -1\n\t\t * @type  Number\n\t\t */\n\t\tthis.state = -1;\n\t\t\n\t\t/**\n\t\t * If true, command can not be disabled by connector.\n\t\t * @see this.update()\n\t\t *\n\t\t * @type  Boolen\n\t\t */\n\t\tthis.alwaysEnabled = false;\n\t\t\n\t\t/**\n\t\t * Do not change dirctory on removed current work directory\n\t\t * \n\t\t * @type  Boolen\n\t\t */\n\t\tthis.noChangeDirOnRemovedCwd = false;\n\t\t\n\t\t/**\n\t\t * If true, this means command was disabled by connector.\n\t\t * @see this.update()\n\t\t *\n\t\t * @type  Boolen\n\t\t */\n\t\tthis._disabled = false;\n\t\t\n\t\t/**\n\t\t * If true, this command is disabled on serach results\n\t\t * \n\t\t * @type  Boolean\n\t\t */\n\t\tthis.disableOnSearch = false;\n\t\t\n\t\t/**\n\t\t * Call update() when event select fired\n\t\t * \n\t\t * @type  Boolean\n\t\t */\n\t\tthis.updateOnSelect = true;\n\t\t\n\t\t/**\n\t\t * Sync toolbar button title on change\n\t\t * \n\t\t * @type  Boolean\n\t\t */\n\t\tthis.syncTitleOnChange = false;\n\n\t\t/**\n\t\t * Keep display of the context menu when command execution\n\t\t * \n\t\t * @type  Boolean\n\t\t */\n\t\tthis.keepContextmenu = false;\n\t\t\n\t\t/**\n\t\t * elFinder events defaults handlers.\n\t\t * Inside handlers \"this\" is current command object\n\t\t *\n\t\t * @type  Object\n\t\t */\n\t\tthis._handlers = {\n\t\t\tenable  : function() { this.update(void(0), this.value); },\n\t\t\tdisable : function() { this.update(-1, this.value); },\n\t\t\t'open reload load sync'    : function() { \n\t\t\t\tthis._disabled = !(this.alwaysEnabled || this.fm.isCommandEnabled(this.name));\n\t\t\t\tthis.update(void(0), this.value);\n\t\t\t\tthis.change(); \n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * elFinder events handlers.\n\t\t * Inside handlers \"this\" is current command object\n\t\t *\n\t\t * @type  Object\n\t\t */\n\t\tthis.handlers = {};\n\t\t\n\t\t/**\n\t\t * Shortcuts\n\t\t *\n\t\t * @type  Array\n\t\t */\n\t\tthis.shortcuts = [];\n\t\t\n\t\t/**\n\t\t * Command options\n\t\t *\n\t\t * @type  Object\n\t\t */\n\t\tthis.options = {ui : 'button'};\n\t\t\n\t\t/**\n\t\t * Callback functions on `change` event\n\t\t * \n\t\t * @type  Array\n\t\t */\n\t\tthis.listeners = [];\n\n\t\t/**\n\t\t * Prepare object -\n\t\t * bind events and shortcuts\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tthis.setup = function(name, opts) {\n\t\t\tvar self = this,\n\t\t\t\tfm   = this.fm,\n\t\t\t\tsetCallback = function(s) {\n\t\t\t\t\tvar cb = s.callback || function(e) {\n\t\t\t\t\t\t\t\tfm.exec(self.name, void(0), {\n\t\t\t\t\t\t\t\t_userAction: true,\n\t\t\t\t\t\t\t\t_currentType: 'shortcut'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t};\n\t\t\t\t\ts.callback = function(e) {\n\t\t\t\t\t\tvar enabled, checks = {};\n\t\t\t\t\t\tif (self.enabled()) {\n\t\t\t\t\t\t\tif (fm.searchStatus.state < 2) {\n\t\t\t\t\t\t\t\tenabled = fm.isCommandEnabled(self.name);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$.each(fm.selected(), function(i, h) {\n\t\t\t\t\t\t\t\t\tif (fm.optionsByHashes[h]) {\n\t\t\t\t\t\t\t\t\t\tchecks[h] = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t$.each(fm.volOptions, function(id) {\n\t\t\t\t\t\t\t\t\t\t\tif (!checks[id] && h.indexOf(id) === 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tchecks[id] = true;\n\t\t\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t$.each(checks, function(h) {\n\t\t\t\t\t\t\t\t\tenabled = fm.isCommandEnabled(self.name, h);\n\t\t\t\t\t\t\t\t\tif (! enabled) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\t\tself.event = e;\n\t\t\t\t\t\t\t\tcb.call(self);\n\t\t\t\t\t\t\t\tdelete self.event;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\ti, s, sc;\n\n\t\t\tthis.name      = name;\n\t\t\tthis.title     = fm.messages['cmd'+name] ? fm.i18n('cmd'+name)\n\t\t\t               : ((this.extendsCmd && fm.messages['cmd'+this.extendsCmd]) ? fm.i18n('cmd'+this.extendsCmd) : name);\n\t\t\tthis.options   = Object.assign({}, this.options, opts);\n\t\t\tthis.listeners = [];\n\t\t\tthis.dialogClass = 'elfinder-dialog-' + name;\n\n\t\t\tif (opts.shortcuts) {\n\t\t\t\tif (typeof opts.shortcuts === 'function') {\n\t\t\t\t\tsc = opts.shortcuts(this.fm, this.shortcuts);\n\t\t\t\t} else if (Array.isArray(opts.shortcuts)) {\n\t\t\t\t\tsc = opts.shortcuts;\n\t\t\t\t}\n\t\t\t\tthis.shortcuts = sc || [];\n\t\t\t}\n\n\t\t\tif (this.updateOnSelect) {\n\t\t\t\tthis._handlers.select = function() { this.update(void(0), this.value); };\n\t\t\t}\n\n\t\t\t$.each(Object.assign({}, self._handlers, self.handlers), function(cmd, handler) {\n\t\t\t\tfm.bind(cmd, $.proxy(handler, self));\n\t\t\t});\n\n\t\t\tfor (i = 0; i < this.shortcuts.length; i++) {\n\t\t\t\ts = this.shortcuts[i];\n\t\t\t\tsetCallback(s);\n\t\t\t\t!s.description && (s.description = this.title);\n\t\t\t\tfm.shortcut(s);\n\t\t\t}\n\n\t\t\tif (this.disableOnSearch) {\n\t\t\t\tfm.bind('search searchend', function() {\n\t\t\t\t\tself._disabled = this.type === 'search'? true : ! (this.alwaysEnabled || fm.isCommandEnabled(name));\n\t\t\t\t\tself.update(void(0), self.value);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.init();\n\t\t};\n\n\t\t/**\n\t\t * Command specific init stuffs\n\t\t *\n\t\t * @return void\n\t\t */\n\t\tthis.init = function() {};\n\n\t\t/**\n\t\t * Exec command\n\t\t *\n\t\t * @param  Array         target files hashes\n\t\t * @param  Array|Object  command value\n\t\t * @return $.Deferred\n\t\t */\n\t\tthis.exec = function(files, opts) { \n\t\t\treturn $.Deferred().reject(); \n\t\t};\n\t\t\n\t\tthis.getUndo = function(opts, resData) {\n\t\t\treturn false;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Return true if command disabled.\n\t\t *\n\t\t * @return Boolen\n\t\t */\n\t\tthis.disabled = function() {\n\t\t\treturn this.state < 0;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Return true if command enabled.\n\t\t *\n\t\t * @return Boolen\n\t\t */\n\t\tthis.enabled = function() {\n\t\t\treturn this.state > -1;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Return true if command active.\n\t\t *\n\t\t * @return Boolen\n\t\t */\n\t\tthis.active = function() {\n\t\t\treturn this.state > 0;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Return current command state.\n\t\t * Must be overloaded in most commands\n\t\t *\n\t\t * @return Number\n\t\t */\n\t\tthis.getstate = function() {\n\t\t\treturn -1;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Update command state/value\n\t\t * and rize 'change' event if smth changed\n\t\t *\n\t\t * @param  Number  new state or undefined to auto update state\n\t\t * @param  mixed   new value\n\t\t * @return void\n\t\t */\n\t\tthis.update = function(s, v) {\n\t\t\tvar state = this.state,\n\t\t\t\tvalue = this.value;\n\n\t\t\tif (this._disabled && this.fm.searchStatus === 0) {\n\t\t\t\tthis.state = -1;\n\t\t\t} else {\n\t\t\t\tthis.state = s !== void(0) ? s : this.getstate();\n\t\t\t}\n\n\t\t\tthis.value = v;\n\t\t\t\n\t\t\tif (state != this.state || value != this.value) {\n\t\t\t\tthis.change();\n\t\t\t}\n\t\t};\n\t\t\n\t\t/**\n\t\t * Bind handler / fire 'change' event.\n\t\t *\n\t\t * @param  Function|undefined  event callback\n\t\t * @return void\n\t\t */\n\t\tthis.change = function(c) {\n\t\t\tvar cmd, i;\n\t\t\t\n\t\t\tif (typeof(c) === 'function') {\n\t\t\t\tthis.listeners.push(c);\t\t\t\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < this.listeners.length; i++) {\n\t\t\t\t\tcmd = this.listeners[i];\n\t\t\t\t\ttry {\n\t\t\t\t\t\tcmd(this.state, this.value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tthis.fm.debug('error', e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\t\n\n\t\t/**\n\t\t * With argument check given files hashes and return list of existed files hashes.\n\t\t * Without argument return selected files hashes.\n\t\t *\n\t\t * @param  Array|String|void  hashes\n\t\t * @return Array\n\t\t */\n\t\tthis.hashes = function(hashes) {\n\t\t\treturn hashes\n\t\t\t\t? $.grep(Array.isArray(hashes) ? hashes : [hashes], function(hash) { return fm.file(hash) ? true : false; })\n\t\t\t\t: fm.selected();\n\t\t};\n\t\t\n\t\t/**\n\t\t * Return only existed files from given fils hashes | selected files\n\t\t *\n\t\t * @param  Array|String|void  hashes\n\t\t * @return Array\n\t\t */\n\t\tthis.files = function(hashes) {\n\t\t\tvar fm = this.fm;\n\t\t\t\n\t\t\treturn hashes\n\t\t\t\t? $.map(Array.isArray(hashes) ? hashes : [hashes], function(hash) { return fm.file(hash) || null; })\n\t\t\t\t: fm.selectedFiles();\n\t\t};\n\n\t\t/**\n\t\t * Wrapper to fm.dialog()\n\t\t *\n\t\t * @param  String|DOMElement  content\n\t\t * @param  Object             options\n\t\t * @return Object             jQuery element object\n\t\t */\n\t\tthis.fmDialog = function(content, options) {\n\t\t\tif (options.cssClass) {\n\t\t\t\toptions.cssClass += ' ' + this.dialogClass;\n\t\t\t} else {\n\t\t\t\toptions.cssClass = this.dialogClass;\n\t\t\t}\n\t\t\treturn this.fm.dialog(content, options);\n\t\t};\n\t};\n\n\treturn elFinder;\n});\n"]}