{"version":3,"sources":["commands/archive.js"],"names":["define","elFinder","prototype","commands","archive","dfrd","self","this","fm","mimes","variants","disableOnSearch","nextAction","bind","$","each","option","i","mime","push","mime2kind","change","getstate","select","cwdId","sel","files","cnt","length","chk","isRoot","file","phash","write","grep","f","read","searchStatus","state","cwd","volumeid","hash","indexOf","_disabled","exec","hashes","type","error","Deferred","fail","inArray","reject","prefix","name","data","targets","done","one","selectfiles","proxy","res"],"mappings":";;;;;;;AAAAA,QACC,eACC,SAASC,GAwFV,OAvFAA,EAASC,UAAUC,SAASC,QAAU,WACrC,aACA,IAGCC,EAHGC,EAAQC,KACXC,EAAQF,EAAKE,GACbC,KAGDF,KAAKG,YAELH,KAAKI,iBAAkB,EAEvBJ,KAAKK,cAOLJ,EAAGK,KAAK,cAAe,WACtBP,EAAKI,YACLI,EAAEC,KAAMN,EAAQD,EAAGQ,OAAO,aAAqB,WAAU,SAASC,EAAGC,GACpEZ,EAAKI,SAASS,MAAMD,EAAMV,EAAGY,UAAUF,OAExCZ,EAAKe,WAGNd,KAAKe,SAAW,SAASC,GACxB,IAGCC,EAHGC,EAAMlB,KAAKmB,MAAMH,GACpBI,EAAMF,EAAIG,OACVC,EAAOF,IAASnB,EAAGsB,OAAOL,EAAI,MAAQjB,EAAGuB,KAAKN,EAAI,GAAGO,YAAcC,QAAWnB,EAAEoB,KAAKT,EAAK,SAASU,GAAI,OAAOA,EAAEC,OAAwBR,OAQzI,OALIC,GAAOrB,EAAG6B,aAAaC,MAAQ,IAClCd,EAAQhB,EAAG+B,MAAMC,SACjBX,EAAOF,IAAQb,EAAEoB,KAAKT,EAAK,SAASU,GAAK,SAAOA,EAAEC,MAAkC,IAA1BD,EAAEM,KAAKC,QAAQlB,MAAgCI,QAGnGC,IAAQtB,KAAKoC,WAAalC,EAAMmB,SAAWD,GAAQtB,GAAwB,WAAhBA,EAAKiC,SAAyB,GAAK,GAGtG/B,KAAKqC,KAAO,SAASC,EAAQC,GAC5B,IAKC7B,EALGS,EAAQnB,KAAKmB,MAAMmB,GACtBlB,EAAQD,EAAME,OACdV,EAAQ4B,GAAQrC,EAAM,GACtB8B,EAAQ/B,EAAGuB,KAAKL,EAAM,GAAGM,QAAU,KACnCe,GAAS,aAAc,UAAW,qBAAsB,qBAAsB,mBAAoB,cAAe,iBAAkB,iBAAkB,SAOtJ,GAJA1C,EAAOS,EAAEkC,WAAWC,KAAK,SAASF,GACjCA,GAASvC,EAAGuC,MAAMA,MAGZpB,IAAOlB,EAAMmB,SAAsC,IAA5Bd,EAAEoC,QAAQhC,EAAMT,GAC7C,OAAOJ,EAAK8C,SAGb,IAAKZ,EAAIN,MACR,OAAO5B,EAAK8C,OAAOJ,GAGpB,IAAK9B,EAAI,EAAGA,EAAIU,EAAKV,IACpB,IAAKS,EAAMT,GAAGmB,KACb,OAAO/B,EAAK8C,OAAOJ,GAoBrB,OAhBAzC,EAAKY,KAASA,EACdZ,EAAK8C,QAAWzB,EAAM,EAAI,UAAYD,EAAM,GAAG2B,OAAS7C,EAAGQ,OAAO,aAAwB,UAAG,IAAMR,EAAGQ,OAAO,aAAwB,UAAEE,GAAQ,IAC/IZ,EAAKgD,MAAUC,QAAUjD,EAAKuC,OAAOA,GAASC,KAAO5B,GAEjDV,EAAG+B,MAAME,OAASF,EAAIE,KAClBjC,EAAGoC,KAAK,OAAQL,EAAIE,MAAMe,KAAK,WACrChD,EAAGiD,IAAI,YAAa,WACnBjD,EAAGkD,aAAahC,MAAQmB,IACxBxC,EAAOS,EAAE6C,MAAMnD,EAAGoD,IAAI,QAAS,QAAStD,EAAjCQ,QAITN,EAAGkD,aAAahC,MAAQmB,IACxBxC,EAAOS,EAAE6C,MAAMnD,EAAGoD,IAAI,QAAS,QAAStD,EAAjCQ,IAGDT,IAKFJ","file":"../../commands/archive.js","sourcesContent":["define([\n\t\"../elFinder\"\n],function(elFinder){\n\telFinder.prototype.commands.archive = function() {\n\t\t\"use strict\";\n\t\tvar self  = this,\n\t\t\tfm    = self.fm,\n\t\t\tmimes = [],\n\t\t\tdfrd;\n\t\t\t\n\t\tthis.variants = [];\n\t\t\n\t\tthis.disableOnSearch = false;\n\t\t\n\t\tthis.nextAction = {};\n\t\t\n\t\t/**\n\t\t * Update mimes on open/reload\n\t\t *\n\t\t * @return void\n\t\t **/\n\t\tfm.bind('open reload', function() {\n\t\t\tself.variants = [];\n\t\t\t$.each((mimes = fm.option('archivers')['create'] || []), function(i, mime) {\n\t\t\t\tself.variants.push([mime, fm.mime2kind(mime)]);\n\t\t\t});\n\t\t\tself.change();\n\t\t});\n\t\t\n\t\tthis.getstate = function(select) {\n\t\t\tvar sel = this.files(select),\n\t\t\t\tcnt = sel.length,\n\t\t\t\tchk = (cnt && ! fm.isRoot(sel[0]) && (fm.file(sel[0].phash) || {}).write && ! $.grep(sel, function(f){ return f.read ? false : true; }).length),\n\t\t\t\tcwdId;\n\t\t\t\n\t\t\tif (chk && fm.searchStatus.state > 1) {\n\t\t\t\tcwdId = fm.cwd().volumeid;\n\t\t\t\tchk = (cnt === $.grep(sel, function(f) { return f.read && f.hash.indexOf(cwdId) === 0 ? true : false; }).length);\n\t\t\t}\n\t\t\t\n\t\t\treturn chk && !this._disabled && mimes.length && (cnt || (dfrd && dfrd.state() == 'pending')) ? 0 : -1;\n\t\t};\n\t\t\n\t\tthis.exec = function(hashes, type) {\n\t\t\tvar files = this.files(hashes),\n\t\t\t\tcnt   = files.length,\n\t\t\t\tmime  = type || mimes[0],\n\t\t\t\tcwd   = fm.file(files[0].phash) || null,\n\t\t\t\terror = ['errArchive', 'errPerm', 'errCreatingTempDir', 'errFtpDownloadFile', 'errFtpUploadFile', 'errFtpMkdir', 'errArchiveExec', 'errExtractExec', 'errRm'],\n\t\t\t\ti, open;\n\n\t\t\tdfrd = $.Deferred().fail(function(error) {\n\t\t\t\terror && fm.error(error);\n\t\t\t});\n\n\t\t\tif (! (cnt && mimes.length && $.inArray(mime, mimes) !== -1)) {\n\t\t\t\treturn dfrd.reject();\n\t\t\t}\n\t\t\t\n\t\t\tif (!cwd.write) {\n\t\t\t\treturn dfrd.reject(error);\n\t\t\t}\n\t\t\t\n\t\t\tfor (i = 0; i < cnt; i++) {\n\t\t\t\tif (!files[i].read) {\n\t\t\t\t\treturn dfrd.reject(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself.mime   = mime;\n\t\t\tself.prefix = ((cnt > 1)? 'Archive' : files[0].name) + (fm.option('archivers')['createext']? '.' + fm.option('archivers')['createext'][mime] : '');\n\t\t\tself.data   = {targets : self.hashes(hashes), type : mime};\n\t\t\t\n\t\t\tif (fm.cwd().hash !== cwd.hash) {\n\t\t\t\topen = fm.exec('open', cwd.hash).done(function() {\n\t\t\t\t\tfm.one('cwdrender', function() {\n\t\t\t\t\t\tfm.selectfiles({files : hashes});\n\t\t\t\t\t\tdfrd = $.proxy(fm.res('mixin', 'make'), self)();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tfm.selectfiles({files : hashes});\n\t\t\t\tdfrd = $.proxy(fm.res('mixin', 'make'), self)();\n\t\t\t}\n\t\t\t\n\t\t\treturn dfrd;\n\t\t};\n\n\t};\n\n\treturn elFinder;\n\n});"]}