{"version":3,"sources":["commands/duplicate.js"],"names":["define","elFinder","prototype","commands","duplicate","fm","this","getstate","select","sel","files","cnt","length","cwd","write","$","grep","f","read","phash","hash","isRoot","exec","hashes","dfrd","Deferred","fail","error","each","i","file","reject","name","state","request","data","cmd","targets","notify","type","navigate","toast","inbuffer","msg","i18n"],"mappings":";;;;;;;AAAAA,QACC,eACC,SAASC,GAkDV,OAjDAA,EAASC,UAAUC,SAASC,UAAY,WACvC,aACA,IAAIC,EAAKC,KAAKD,GAEdC,KAAKC,SAAW,SAASC,GACxB,IAAIC,EAAMH,KAAKI,MAAMF,GACpBG,EAAMF,EAAIG,OAEX,OAAOD,GAAON,EAAGQ,MAAMC,OAASC,EAAEC,KAAKP,EAAK,SAASQ,GAAK,SAAOA,EAAEC,MAAQD,EAAEE,QAAUd,EAAGQ,MAAMO,MAAUf,EAAGgB,OAAOJ,MAAqBL,QAAUD,EAAM,GAAK,GAG/JL,KAAKgB,KAAO,SAASC,GACpB,IAAIlB,EAASC,KAAKD,GACjBK,EAASJ,KAAKI,MAAMa,GACpBZ,EAASD,EAAME,OACfY,EAAST,EAAEU,WACTC,KAAK,SAASC,GACdA,GAAStB,EAAGsB,MAAMA,KAIrB,OAAMhB,GAINI,EAAEa,KAAKlB,EAAO,SAASmB,EAAGC,GACzB,IAAKA,EAAKZ,OAASb,EAAGyB,KAAKA,EAAKX,OAAOL,MACtC,OAAQU,EAAKO,QAAQ,UAAWD,EAAKE,KAAM,cAIzB,YAAhBR,EAAKS,QACDT,EAGDnB,EAAG6B,SACTC,MAAUC,IAAM,YAAaC,QAAU/B,KAAKiB,OAAOA,IACnDe,QAAUC,KAAO,OAAQ5B,IAAMA,GAC/B6B,UACCC,OACCC,UAAYC,IAAKtC,EAAGuC,MAAM,WAAYvC,EAAGuC,KAAK,wBAlBzCpB,EAAKO,WA2BR9B","file":"../../commands/duplicate.js","sourcesContent":["define([\n\t\"../elFinder\"\n],function(elFinder){\n\telFinder.prototype.commands.duplicate = function() {\n\t\t\"use strict\";\n\t\tvar fm = this.fm;\n\t\t\n\t\tthis.getstate = function(select) {\n\t\t\tvar sel = this.files(select),\n\t\t\t\tcnt = sel.length;\n\n\t\t\treturn cnt && fm.cwd().write && $.grep(sel, function(f) { return f.read && f.phash === fm.cwd().hash && ! fm.isRoot(f)? true : false; }).length == cnt ? 0 : -1;\n\t\t};\n\t\t\n\t\tthis.exec = function(hashes) {\n\t\t\tvar fm     = this.fm,\n\t\t\t\tfiles  = this.files(hashes),\n\t\t\t\tcnt    = files.length,\n\t\t\t\tdfrd   = $.Deferred()\n\t\t\t\t\t.fail(function(error) {\n\t\t\t\t\t\terror && fm.error(error);\n\t\t\t\t\t}), \n\t\t\t\targs = [];\n\t\t\t\t\n\t\t\tif (! cnt) {\n\t\t\t\treturn dfrd.reject();\n\t\t\t}\n\t\t\t\n\t\t\t$.each(files, function(i, file) {\n\t\t\t\tif (!file.read || !fm.file(file.phash).write) {\n\t\t\t\t\treturn !dfrd.reject(['errCopy', file.name, 'errPerm']);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tif (dfrd.state() == 'rejected') {\n\t\t\t\treturn dfrd;\n\t\t\t}\n\t\t\t\n\t\t\treturn fm.request({\n\t\t\t\tdata   : {cmd : 'duplicate', targets : this.hashes(hashes)},\n\t\t\t\tnotify : {type : 'copy', cnt : cnt},\n\t\t\t\tnavigate : {\n\t\t\t\t\ttoast : {\n\t\t\t\t\t\tinbuffer : {msg: fm.i18n(['complete', fm.i18n('cmdduplicate')])}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t};\n\n\t};\n\n\treturn elFinder;\n\n});"]}