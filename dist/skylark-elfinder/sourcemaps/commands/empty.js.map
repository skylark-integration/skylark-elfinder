{"version":3,"sources":["commands/empty.js"],"names":["define","elFinder","prototype","commands","empty","self","fm","selFiles","select","sel","files","length","cwd","this","linkedCmds","init","getstate","cnt","$","grep","f","read","write","mime","exec","hashes","dirs","dfrd","Deferred","done","data","changed","toast","msg","i18n","success","join","each","i","dir","hash","change","always","trigger","map","d","phash","res","push","name","error","tm","isCommandEnabled","setTimeout","notify","type","hideCnt","notifyDelay","request","cmd","target","preventDefault","asNotOpen","targets","clearTimeout","ui","children","maxTargets","updateCache","locked","_userAction","addTexts","fail","selected","parseError","mode"],"mappings":"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","file":"../../commands/empty.js","sourcesContent":["define([\n\t\"../elFinder\"\n],function(elFinder){\n\t/**\n\t * @class elFinder command \"empty\".\n\t * Empty the folder\n\t *\n\t * @type  elFinder.command\n\t * @author  Naoki Sawada\n\t */\n\telFinder.prototype.commands.empty = function() {\n\t\t\"use strict\";\n\t\tvar self, fm,\n\t\t\tselFiles = function(select) {\n\t\t\t\tvar sel = self.files(select);\n\t\t\t\tif (!sel.length) {\n\t\t\t\t\tsel = [ fm.cwd() ];\n\t\t\t\t}\n\t\t\t\treturn sel;\n\t\t\t};\n\t\t\n\t\tthis.linkedCmds = ['rm'];\n\t\t\n\t\tthis.init = function() {\n\t\t\t// lazy assign to make possible to become superclass\n\t\t\tself = this;\n\t\t\tfm = this.fm;\n\t\t};\n\n\t\tthis.getstate = function(select) {\n\t\t\tvar sel = selFiles(select),\n\t\t\t\tcnt;\n\t\t\t\n\t\t\tcnt = sel.length;\n\t\t\treturn $.grep(sel, function(f) { return f.read && f.write && f.mime === 'directory' ? true : false; }).length == cnt ? 0 : -1;\n\t\t};\n\t\t\n\t\tthis.exec = function(hashes) {\n\t\t\tvar dirs = selFiles(hashes),\n\t\t\t\tcnt  = dirs.length,\n\t\t\t\tdfrd = $.Deferred()\n\t\t\t\t\t.done(function() {\n\t\t\t\t\t\tvar data = {changed: {}};\n\t\t\t\t\t\tfm.toast({msg: fm.i18n(['\"'+success.join('\", ')+'\"', 'complete', fm.i18n('cmdempty')])});\n\t\t\t\t\t\t$.each(dirs, function(i, dir) {\n\t\t\t\t\t\t\tdata.changed[dir.hash] = dir;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfm.change(data);\n\t\t\t\t\t})\n\t\t\t\t\t.always(function() {\n\t\t\t\t\t\tvar cwd = fm.cwd().hash;\n\t\t\t\t\t\tfm.trigger('selectfiles', {files: $.map(dirs, function(d) { return cwd === d.phash? d.hash : null; })});\n\t\t\t\t\t}),\n\t\t\t\tsuccess = [],\n\t\t\t\tdone = function(res) {\n\t\t\t\t\tif (typeof res === 'number') {\n\t\t\t\t\t\tsuccess.push(dirs[res].name);\n\t\t\t\t\t\tdelete dirs[res].dirs;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres && fm.error(res);\n\t\t\t\t\t}\n\t\t\t\t\t(--cnt < 1) && dfrd[success.length? 'resolve' : 'reject']();\n\t\t\t\t};\n\n\t\t\t$.each(dirs, function(i, dir) {\n\t\t\t\tvar tm;\n\t\t\t\tif (!(dir.write && dir.mime === 'directory')) {\n\t\t\t\t\tdone(['errEmpty', dir.name, 'errPerm']);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (!fm.isCommandEnabled('rm', dir.hash)) {\n\t\t\t\t\tdone(['errCmdNoSupport', '\"rm\"']);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\ttm = setTimeout(function() {\n\t\t\t\t\tfm.notify({type : 'search', cnt : 1, hideCnt : cnt > 1? false : true});\n\t\t\t\t}, fm.notifyDelay);\n\t\t\t\tfm.request({\n\t\t\t\t\tdata : {cmd  : 'open', target : dir.hash},\n\t\t\t\t\tpreventDefault : true,\n\t\t\t\t\tasNotOpen : true\n\t\t\t\t}).done(function(data) {\n\t\t\t\t\tvar targets = [];\n\t\t\t\t\ttm && clearTimeout(tm);\n\t\t\t\t\tif (fm.ui.notify.children('.elfinder-notify-search').length) {\n\t\t\t\t\t\tfm.notify({type : 'search', cnt : -1, hideCnt : cnt > 1? false : true});\n\t\t\t\t\t}\n\t\t\t\t\tif (data && data.files && data.files.length) {\n\t\t\t\t\t\tif (data.files.length > fm.maxTargets) {\n\t\t\t\t\t\t\tdone(['errEmpty', dir.name, 'errMaxTargets', fm.maxTargets]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfm.updateCache(data);\n\t\t\t\t\t\t\t$.each(data.files, function(i, f) {\n\t\t\t\t\t\t\t\tif (!f.write || f.locked) {\n\t\t\t\t\t\t\t\t\tdone(['errEmpty', dir.name, 'errRm', f.name, 'errPerm']);\n\t\t\t\t\t\t\t\t\ttargets = [];\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttargets.push(f.hash);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (targets.length) {\n\t\t\t\t\t\t\t\tfm.exec('rm', targets, { _userAction : true, addTexts : [ fm.i18n('folderToEmpty', dir.name) ] })\n\t\t\t\t\t\t\t\t.fail(function(error) {\n\t\t\t\t\t\t\t\t\tfm.trigger('unselectfiles', {files: fm.selected()});\n\t\t\t\t\t\t\t\t\tdone(fm.parseError(error) || '');\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.done(function() { done(i); });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfm.toast({ mode: 'warning', msg: fm.i18n('filderIsEmpty', dir.name)});\n\t\t\t\t\t\tdone('');\n\t\t\t\t\t}\n\t\t\t\t}).fail(function(error) {\n\t\t\t\t\tdone(fm.parseError(error) || '');\n\t\t\t\t});\n\t\t\t});\n\t\t\t\n\t\t\treturn dfrd;\n\t\t};\n\n\t};\n\n\treturn elFinder;\n\n});"]}