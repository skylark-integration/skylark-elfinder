{"version":3,"sources":["commands/extract.js"],"names":["define","elFinder","prototype","commands","extract","self","this","fm","mimes","variants","disableOnSearch","bind","option","api","makedir","i18n","change","getstate","select","files","sel","cnt","length","cwd","write","$","grep","file","read","inArray","mime","exec","hashes","opts","i","error","decision","dfrd","Deferred","overwriteAll","omitAll","mkdirAll","names","map","name","decide","unpack","phash","reject","request","data","cmd","target","hash","notify","type","syncOnFail","navigate","toast","incwd","msg","action","inbuffer","fail","state","done","confirm","index","splitFileExtention","existed","next","resolve","title","text","accept","label","callback","all","cancel","enabled"],"mappings":"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","file":"../../commands/extract.js","sourcesContent":["define([\n\t\"../elFinder\"\n],function(elFinder){\n\t/**\n\t * @class  elFinder command \"extract\"\n\t * Extract files from archive\n\t *\n\t * @author Dmitry (dio) Levashov\n\t **/\n\telFinder.prototype.commands.extract = function() {\n\t\t\"use strict\";\n\t\tvar self    = this,\n\t\t\tfm      = self.fm,\n\t\t\tmimes   = [],\n\t\t\tfilter  = function(files) {\n\t\t\t\treturn $.grep(files, function(file) { \n\t\t\t\t\treturn file.read && $.inArray(file.mime, mimes) !== -1 ? true : false;\n\t\t\t\t});\n\t\t\t};\n\t\t\n\t\tthis.variants = [];\n\t\tthis.disableOnSearch = true;\n\t\t\n\t\t// Update mimes list on open/reload\n\t\tfm.bind('open reload', function() {\n\t\t\tmimes = fm.option('archivers')['extract'] || [];\n\t\t\tif (fm.api > 2) {\n\t\t\t\tself.variants = [[{makedir: true}, fm.i18n('cmdmkdir')], [{}, fm.i18n('btnCwd')]];\n\t\t\t} else {\n\t\t\t\tself.variants = [[{}, fm.i18n('btnCwd')]];\n\t\t\t}\n\t\t\tself.change();\n\t\t});\n\t\t\n\t\tthis.getstate = function(select) {\n\t\t\tvar sel = this.files(select),\n\t\t\t\tcnt = sel.length;\n\t\t\t\n\t\t\treturn cnt && this.fm.cwd().write && filter(sel).length == cnt ? 0 : -1;\n\t\t};\n\t\t\n\t\tthis.exec = function(hashes, opts) {\n\t\t\tvar files    = this.files(hashes),\n\t\t\t\tdfrd     = $.Deferred(),\n\t\t\t\tcnt      = files.length,\n\t\t\t\tmakedir  = opts && opts.makedir ? 1 : 0,\n\t\t\t\ti, error,\n\t\t\t\tdecision;\n\n\t\t\tvar overwriteAll = false;\n\t\t\tvar omitAll = false;\n\t\t\tvar mkdirAll = 0;\n\n\t\t\tvar names = $.map(fm.files(hashes), function(file) { return file.name; });\n\t\t\tvar map = {};\n\t\t\t$.grep(fm.files(hashes), function(file) {\n\t\t\t\tmap[file.name] = file;\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\t\n\t\t\tvar decide = function(decision) {\n\t\t\t\tswitch (decision) {\n\t\t\t\t\tcase 'overwrite_all' :\n\t\t\t\t\t\toverwriteAll = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'omit_all':\n\t\t\t\t\t\tomitAll = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tvar unpack = function(file) {\n\t\t\t\tif (!(file.read && fm.file(file.phash).write)) {\n\t\t\t\t\terror = ['errExtract', file.name, 'errPerm'];\n\t\t\t\t\tfm.error(error);\n\t\t\t\t\tdfrd.reject(error);\n\t\t\t\t} else if ($.inArray(file.mime, mimes) === -1) {\n\t\t\t\t\terror = ['errExtract', file.name, 'errNoArchive'];\n\t\t\t\t\tfm.error(error);\n\t\t\t\t\tdfrd.reject(error);\n\t\t\t\t} else {\n\t\t\t\t\tfm.request({\n\t\t\t\t\t\tdata:{cmd:'extract', target:file.hash, makedir:makedir},\n\t\t\t\t\t\tnotify:{type:'extract', cnt:1},\n\t\t\t\t\t\tsyncOnFail:true,\n\t\t\t\t\t\tnavigate:{\n\t\t\t\t\t\t\ttoast : makedir? {\n\t\t\t\t\t\t\t\tincwd    : {msg: fm.i18n(['complete', fm.i18n('cmdextract')]), action: {cmd: 'open', msg: 'cmdopen'}},\n\t\t\t\t\t\t\t\tinbuffer : {msg: fm.i18n(['complete', fm.i18n('cmdextract')]), action: {cmd: 'open', msg: 'cmdopen'}}\n\t\t\t\t\t\t\t} : {\n\t\t\t\t\t\t\t\tinbuffer : {msg: fm.i18n(['complete', fm.i18n('cmdextract')])}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.fail(function (error) {\n\t\t\t\t\t\tif (dfrd.state() != 'rejected') {\n\t\t\t\t\t\t\tdfrd.reject(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.done(function () {\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tvar confirm = function(files, index) {\n\t\t\t\tvar file = files[index],\n\t\t\t\tname = fm.splitFileExtention(file.name)[0],\n\t\t\t\texisted = ($.inArray(name, names) >= 0),\n\t\t\t\tnext = function(){\n\t\t\t\t\tif((index+1) < cnt) {\n\t\t\t\t\t\tconfirm(files, index+1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdfrd.resolve();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tif (!makedir && existed && map[name].mime != 'directory') {\n\t\t\t\t\tfm.confirm(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttitle : fm.i18n('ntfextract'),\n\t\t\t\t\t\t\ttext  : ['errExists', name, 'confirmRepl'],\n\t\t\t\t\t\t\taccept:{\n\t\t\t\t\t\t\t\tlabel : 'btnYes',\n\t\t\t\t\t\t\t\tcallback:function (all) {\n\t\t\t\t\t\t\t\t\tdecision = all ? 'overwrite_all' : 'overwrite';\n\t\t\t\t\t\t\t\t\tdecide(decision);\n\t\t\t\t\t\t\t\t\tif(!overwriteAll && !omitAll) {\n\t\t\t\t\t\t\t\t\t\tif('overwrite' == decision) {\n\t\t\t\t\t\t\t\t\t\t\tunpack(file);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif((index+1) < cnt) {\n\t\t\t\t\t\t\t\t\t\t\tconfirm(files, index+1);\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tdfrd.resolve();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if(overwriteAll) {\n\t\t\t\t\t\t\t\t\t\tfor (i = index; i < cnt; i++) {\n\t\t\t\t\t\t\t\t\t\t\tunpack(files[i]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tdfrd.resolve();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject : {\n\t\t\t\t\t\t\t\tlabel : 'btnNo',\n\t\t\t\t\t\t\t\tcallback:function (all) {\n\t\t\t\t\t\t\t\t\tdecision = all ? 'omit_all' : 'omit';\n\t\t\t\t\t\t\t\t\tdecide(decision);\n\t\t\t\t\t\t\t\t\tif(!overwriteAll && !omitAll && (index+1) < cnt) {\n\t\t\t\t\t\t\t\t\t\tconfirm(files, index+1);\n\t\t\t\t\t\t\t\t\t} else if (omitAll) {\n\t\t\t\t\t\t\t\t\t\tdfrd.resolve();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcancel : {\n\t\t\t\t\t\t\t\tlabel : 'btnCancel',\n\t\t\t\t\t\t\t\tcallback:function () {\n\t\t\t\t\t\t\t\t\tdfrd.resolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tall : ((index+1) < cnt)\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} else if (!makedir) {\n\t\t\t\t\tif (mkdirAll == 0) {\n\t\t\t\t\t\tfm.confirm({\n\t\t\t\t\t\t\ttitle : fm.i18n('cmdextract'),\n\t\t\t\t\t\t\ttext  : [fm.i18n('cmdextract')+' \"'+file.name+'\"', 'confirmRepl'],\n\t\t\t\t\t\t\taccept:{\n\t\t\t\t\t\t\t\tlabel : 'btnYes',\n\t\t\t\t\t\t\t\tcallback:function (all) {\n\t\t\t\t\t\t\t\t\tall && (mkdirAll = 1);\n\t\t\t\t\t\t\t\t\tunpack(file);\n\t\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\treject : {\n\t\t\t\t\t\t\t\tlabel : 'btnNo',\n\t\t\t\t\t\t\t\tcallback:function (all) {\n\t\t\t\t\t\t\t\t\tall && (mkdirAll = -1);\n\t\t\t\t\t\t\t\t\tnext();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcancel : {\n\t\t\t\t\t\t\t\tlabel : 'btnCancel',\n\t\t\t\t\t\t\t\tcallback:function () {\n\t\t\t\t\t\t\t\t\tdfrd.resolve();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tall : ((index+1) < cnt)\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(mkdirAll > 0) && unpack(file);\n\t\t\t\t\t\tnext();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tunpack(file);\n\t\t\t\t\tnext();\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tif (!(this.enabled() && cnt && mimes.length)) {\n\t\t\t\treturn dfrd.reject();\n\t\t\t}\n\t\t\t\n\t\t\tif(cnt > 0) {\n\t\t\t\tconfirm(files, 0);\n\t\t\t}\n\n\t\t\treturn dfrd;\n\t\t};\n\n\t};\n\n\treturn elFinder;\n\n});"]}