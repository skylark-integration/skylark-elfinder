{"version":3,"sources":["proxy/elFinderSupportVer1.js"],"names":["define","window","elFinderSupportVer1","upload","dateObj","today","yesterday","self","this","getDateString","date","replace","Date","getFullYear","getMonth","getDate","now","init","fm","parseUploadData","text","data","$","trim","error","JSON","parse","e","normalize","send","opts","xhr","dfrd","Deferred","cmd","_opts","abort","state","quiet","tree","resolve","current","file","target","phash","targets","extend","each","i","hash","ajax","Object","assign","fail","res","done","added","trigger","dst","h","mime","reject","raw","diff","isCwd","treeDiff","files","getDirs","items","grep","cwd","warning","changed","normalizeFile","normalizeTree","cdc","mcts","isNaN","ts","Math","floor","formatDate","locked","rm","tmb","map","f","options","normalizeOptions","params","debug","name","dirs","length","removed","item","push","getTreeDiff","sync","root","result","traverse","dir","size","linkTo","info","url","read","write","alias","indexOf","dim","resize","path","rel","disabled","merge","copyOverwrite","api","archivers","create","archives","extract","separator"],"mappings":"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","file":"../../proxy/elFinderSupportVer1.js","sourcesContent":["define([],function() {\n\t/**\n\t * elFinder transport to support old protocol.\n\t *\n\t * @example\n\t * $('selector').elfinder({\n\t *   .... \n\t *   transport : new elFinderSupportVer1()\n\t * })\n\t *\n\t * @author Dmitry (dio) Levashov\n\t **/\n\twindow.elFinderSupportVer1 = function(upload) {\n\t\t\"use strict\";\n\t\tvar self = this,\n\t\t\tdateObj, today, yesterday,\n\t\t\tgetDateString = function(date) {\n\t\t\t\treturn date.replace('Today', today).replace('Yesterday', yesterday);\n\t\t\t};\n\t\t\n\t\tdateObj = new Date();\n\t\ttoday = dateObj.getFullYear() + '/' + (dateObj.getMonth() + 1) + '/' + dateObj.getDate();\n\t\tdateObj = new Date(Date.now() - 86400000);\n\t\tyesterday = dateObj.getFullYear() + '/' + (dateObj.getMonth() + 1) + '/' + dateObj.getDate();\n\t\t\n\t\tthis.upload = upload || 'auto';\n\t\t\n\t\tthis.init = function(fm) {\n\t\t\tthis.fm = fm;\n\t\t\tthis.fm.parseUploadData = function(text) {\n\t\t\t\tvar data;\n\n\t\t\t\tif (!$.trim(text)) {\n\t\t\t\t\treturn {error : ['errResponse', 'errDataEmpty']};\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tdata = JSON.parse(text);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn {error : ['errResponse', 'errDataNotJSON']};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn self.normalize('upload', data);\n\t\t\t};\n\t\t};\n\t\t\n\t\t\n\t\tthis.send = function(opts) {\n\t\t\tvar self = this,\n\t\t\t\tfm = this.fm,\n\t\t\t\tdfrd = $.Deferred(),\n\t\t\t\tcmd = opts.data.cmd,\n\t\t\t\targs = [],\n\t\t\t\t_opts = {},\n\t\t\t\tdata,\n\t\t\t\txhr;\n\t\t\t\t\n\t\t\tdfrd.abort = function() {\n\t\t\t\tif (xhr.state() == 'pending') {\n\t\t\t\t\txhr.quiet = true;\n\t\t\t\t\txhr.abort();\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\tswitch (cmd) {\n\t\t\t\tcase 'open':\n\t\t\t\t\topts.data.tree = 1;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'parents':\n\t\t\t\tcase 'tree':\n\t\t\t\t\treturn dfrd.resolve({tree : []});\n\t\t\t\tcase 'get':\n\t\t\t\t\topts.data.cmd = 'read';\n\t\t\t\t\topts.data.current = fm.file(opts.data.target).phash;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'put':\n\t\t\t\t\topts.data.cmd = 'edit';\n\t\t\t\t\topts.data.current = fm.file(opts.data.target).phash;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'archive':\n\t\t\t\tcase 'rm':\n\t\t\t\t\topts.data.current = fm.file(opts.data.targets[0]).phash;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'extract':\n\t\t\t\tcase 'rename':\n\t\t\t\tcase 'resize':\n\t\t\t\t\topts.data.current = fm.file(opts.data.target).phash;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'duplicate':\n\t\t\t\t\t_opts = $.extend(true, {}, opts);\n\n\t\t\t\t\t$.each(opts.data.targets, function(i, hash) {\n\t\t\t\t\t\t$.ajax(Object.assign(_opts, {data : {cmd : 'duplicate', target : hash, current : fm.file(hash).phash}}))\n\t\t\t\t\t\t\t.fail(function(error) {\n\t\t\t\t\t\t\t\tfm.error(fm.res('error', 'connect'));\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.done(function(data) {\n\t\t\t\t\t\t\t\tdata = self.normalize('duplicate', data);\n\t\t\t\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\t\t\t\tfm.error(data.error);\n\t\t\t\t\t\t\t\t} else if (data.added) {\n\t\t\t\t\t\t\t\t\tfm.trigger('add', {added : data.added});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\treturn dfrd.resolve({});\n\t\t\t\t\t\n\t\t\t\tcase 'mkdir':\n\t\t\t\tcase 'mkfile':\n\t\t\t\t\topts.data.current = opts.data.target;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'paste':\n\t\t\t\t\topts.data.current = opts.data.dst;\n\t\t\t\t\tif (! opts.data.tree) {\n\t\t\t\t\t\t$.each(opts.data.targets, function(i, h) {\n\t\t\t\t\t\t\tif (fm.file(h) && fm.file(h).mime === 'directory') {\n\t\t\t\t\t\t\t\topts.data.tree = '1';\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\tcase 'size':\n\t\t\t\t\treturn dfrd.resolve({error : fm.res('error', 'cmdsupport')});\n\t\t\t\tcase 'search':\n\t\t\t\t\treturn dfrd.resolve({error : fm.res('error', 'cmdsupport')});\n\t\t\t\t\t\n\t\t\t\tcase 'file':\n\t\t\t\t\topts.data.cmd = 'open';\n\t\t\t\t\topts.data.current = fm.file(opts.data.target).phash;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// cmd = opts.data.cmd\n\t\t\t\n\t\t\txhr = $.ajax(opts)\n\t\t\t\t.fail(function(error) {\n\t\t\t\t\tdfrd.reject(error);\n\t\t\t\t})\n\t\t\t\t.done(function(raw) {\n\t\t\t\t\tdata = self.normalize(cmd, raw);\n\t\t\t\t\tdfrd.resolve(data);\n\t\t\t\t});\n\t\t\t\t\n\t\t\treturn dfrd;\n\t\t};\n\t\t\n\t\t// fix old connectors errors messages as possible\n\t\t// this.errors = {\n\t\t// \t'Unknown command'                                  : 'Unknown command.',\n\t\t// \t'Invalid backend configuration'                    : 'Invalid backend configuration.',\n\t\t// \t'Access denied'                                    : 'Access denied.',\n\t\t// \t'PHP JSON module not installed'                    : 'PHP JSON module not installed.',\n\t\t// \t'File not found'                                   : 'File not found.',\n\t\t// \t'Invalid name'                                     : 'Invalid file name.',\n\t\t// \t'File or folder with the same name already exists' : 'File named \"$1\" already exists in this location.',\n\t\t// \t'Not allowed file type'                            : 'Not allowed file type.',\n\t\t// \t'File exceeds the maximum allowed filesize'        : 'File exceeds maximum allowed size.',\n\t\t// \t'Unable to copy into itself'                       : 'Unable to copy \"$1\" into itself.',\n\t\t// \t'Unable to create archive'                         : 'Unable to create archive.',\n\t\t// \t'Unable to extract files from archive'             : 'Unable to extract files from \"$1\".'\n\t\t// }\n\t\t\n\t\tthis.normalize = function(cmd, data) {\n\t\t\tvar self = this,\n\t\t\t\tfm   = this.fm,\n\t\t\t\tfiles = {}, \n\t\t\t\tfilter = function(file) { return file && file.hash && file.name && file.mime ? file : null; },\n\t\t\t\tgetDirs = function(items) {\n\t\t\t\t\treturn $.grep(items, function(i) {\n\t\t\t\t\t\treturn i && i.mime && i.mime === 'directory'? true : false;\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tgetTreeDiff = function(files) {\n\t\t\t\t\tvar dirs = getDirs(files);\n\t\t\t\t\ttreeDiff = fm.diff(dirs, null, ['date', 'ts']);\n\t\t\t\t\tif (treeDiff.added.length) {\n\t\t\t\t\t\ttreeDiff.added = getDirs(treeDiff.added);\n\t\t\t\t\t}\n\t\t\t\t\tif (treeDiff.changed.length) {\n\t\t\t\t\t\ttreeDiff.changed = getDirs(treeDiff.changed);\n\t\t\t\t\t}\n\t\t\t\t\tif (treeDiff.removed.length) {\n\t\t\t\t\t\tvar removed = [];\n\t\t\t\t\t\t$.each(treeDiff.removed, function(i, h) {\n\t\t\t\t\t\t\tvar item;\n\t\t\t\t\t\t\tif ((item = fm.file(h)) && item.mime === 'directory') {\n\t\t\t\t\t\t\t\tremoved.push(h);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttreeDiff.removed = removed;\n\t\t\t\t\t}\n\t\t\t\t\treturn treeDiff;\n\t\t\t\t},\n\t\t\t\tphash, diff, isCwd, treeDiff;\n\n\t\t\tif ((cmd == 'tmb' || cmd == 'get')) {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\t\n\t\t\t// if (data.error) {\n\t\t\t// \t$.each(data.error, function(i, msg) {\n\t\t\t// \t\tif (self.errors[msg]) {\n\t\t\t// \t\t\tdata.error[i] = self.errors[msg];\n\t\t\t// \t\t}\n\t\t\t// \t});\n\t\t\t// }\n\t\t\t\n\t\t\tif (cmd == 'upload' && data.error && data.cwd) {\n\t\t\t\tdata.warning = Object.assign({}, data.error);\n\t\t\t\tdata.error = false;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif (data.error) {\n\t\t\t\treturn data;\n\t\t\t}\n\t\t\t\n\t\t\tif (cmd == 'put') {\n\n\t\t\t\tphash = fm.file(data.target.hash).phash;\n\t\t\t\treturn {changed : [this.normalizeFile(data.target, phash)]};\n\t\t\t}\n\t\t\t\n\t\t\tphash = data.cwd.hash;\n\n\t\t\tisCwd = (phash == fm.cwd().hash);\n\t\t\t\n\t\t\tif (data.tree) {\n\t\t\t\t$.each(this.normalizeTree(data.tree), function(i, file) {\n\t\t\t\t\tfiles[file.hash] = file;\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t$.each(data.cdc||[], function(i, file) {\n\t\t\t\tvar hash = file.hash,\n\t\t\t\t\tmcts;\n\n\t\t\t\tif (files[hash]) {\n\t\t\t\t\tif (file.date) {\n\t\t\t\t\t\tmcts = Date.parse(getDateString(file.date));\n\t\t\t\t\t\tif (mcts && !isNaN(mcts)) {\n\t\t\t\t\t\t\tfiles[hash].ts = Math.floor(mcts / 1000);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfiles[hash].date = file.date || fm.formatDate(file);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfiles[hash].locked = file.hash == phash ? true : file.rm === void(0) ? false : !file.rm;\n\t\t\t\t} else {\n\t\t\t\t\tfiles[hash] = self.normalizeFile(file, phash, data.tmb);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tif (!data.tree) {\n\t\t\t\t$.each(fm.files(), function(hash, file) {\n\t\t\t\t\tif (!files[hash] && file.phash != phash && file.mime == 'directory') {\n\t\t\t\t\t\tfiles[hash] = file;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\tif (cmd == 'open') {\n\t\t\t\treturn {\n\t\t\t\t\t\tcwd     : files[phash] || this.normalizeFile(data.cwd),\n\t\t\t\t\t\tfiles   : $.map(files, function(f) { return f; }),\n\t\t\t\t\t\toptions : self.normalizeOptions(data),\n\t\t\t\t\t\tinit    : !!data.params,\n\t\t\t\t\t\tdebug   : data.debug\n\t\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\tif (isCwd) {\n\t\t\t\tdiff = fm.diff($.map(files, filter));\n\t\t\t} else {\n\t\t\t\tif (data.tree && cmd !== 'paste') {\n\t\t\t\t\tdiff = getTreeDiff(files);\n\t\t\t\t} else {\n\t\t\t\t\tdiff = {\n\t\t\t\t\t\tadded   : [],\n\t\t\t\t\t\tremoved : [],\n\t\t\t\t\t\tchanged : []\n\t\t\t\t\t};\n\t\t\t\t\tif (cmd === 'paste') {\n\t\t\t\t\t\tdiff.sync = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn Object.assign({\n\t\t\t\tcurrent : data.cwd.hash,\n\t\t\t\terror   : data.error,\n\t\t\t\twarning : data.warning,\n\t\t\t\toptions : {tmb : !!data.tmb}\n\t\t\t}, diff);\n\t\t\t\n\t\t};\n\t\t\n\t\t/**\n\t\t * Convert old api tree into plain array of dirs\n\t\t *\n\t\t * @param  Object  root dir\n\t\t * @return Array\n\t\t */\n\t\tthis.normalizeTree = function(root) {\n\t\t\tvar self     = this,\n\t\t\t\tresult   = [],\n\t\t\t\ttraverse = function(dirs, phash) {\n\t\t\t\t\tvar i, dir;\n\t\t\t\t\t\n\t\t\t\t\tfor (i = 0; i < dirs.length; i++) {\n\t\t\t\t\t\tdir = dirs[i];\n\t\t\t\t\t\tresult.push(self.normalizeFile(dir, phash));\n\t\t\t\t\t\tdir.dirs.length && traverse(dir.dirs, dir.hash);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\ttraverse([root]);\n\n\t\t\treturn result;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Convert file info from old api format into new one\n\t\t *\n\t\t * @param  Object  file\n\t\t * @param  String  parent dir hash\n\t\t * @return Object\n\t\t */\n\t\tthis.normalizeFile = function(file, phash, tmb) {\n\t\t\tvar mime = file.mime || 'directory',\n\t\t\t\tsize = mime == 'directory' && !file.linkTo ? 0 : file.size,\n\t\t\t\tmcts = file.date? Date.parse(getDateString(file.date)) : void 0,\n\t\t\t\tinfo = {\n\t\t\t\t\turl    : file.url,\n\t\t\t\t\thash   : file.hash,\n\t\t\t\t\tphash  : phash,\n\t\t\t\t\tname   : file.name,\n\t\t\t\t\tmime   : mime,\n\t\t\t\t\tts     : file.ts,\n\t\t\t\t\tsize   : size,\n\t\t\t\t\tread   : file.read,\n\t\t\t\t\twrite  : file.write,\n\t\t\t\t\tlocked : !phash ? true : file.rm === void(0) ? false : !file.rm\n\t\t\t\t};\n\t\t\t\n\t\t\tif (! info.ts) {\n\t\t\t\tif (mcts && !isNaN(mcts)) {\n\t\t\t\t\tinfo.ts = Math.floor(mcts / 1000);\n\t\t\t\t} else {\n\t\t\t\t\tinfo.date = file.date || this.fm.formatDate(file);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (file.mime == 'application/x-empty' || file.mime == 'inode/x-empty') {\n\t\t\t\tinfo.mime = 'text/plain';\n\t\t\t}\n\t\t\t\n\t\t\tif (file.linkTo) {\n\t\t\t\tinfo.alias = file.linkTo;\n\t\t\t}\n\n\t\t\tif (file.linkTo) {\n\t\t\t\tinfo.linkTo = file.linkTo;\n\t\t\t}\n\t\t\t\n\t\t\tif (file.tmb) {\n\t\t\t\tinfo.tmb = file.tmb;\n\t\t\t} else if (info.mime.indexOf('image/') === 0 && tmb) {\n\t\t\t\tinfo.tmb = 1;\n\t\t\t\t\n\t\t\t}\n\n\t\t\tif (file.dirs && file.dirs.length) {\n\t\t\t\tinfo.dirs = true;\n\t\t\t}\n\t\t\tif (file.dim) {\n\t\t\t\tinfo.dim = file.dim;\n\t\t\t}\n\t\t\tif (file.resize) {\n\t\t\t\tinfo.resize = file.resize;\n\t\t\t}\n\t\t\treturn info;\n\t\t};\n\t\t\n\t\tthis.normalizeOptions = function(data) {\n\t\t\tvar opts = {\n\t\t\t\t\tpath          : data.cwd.rel,\n\t\t\t\t\tdisabled      : $.merge((data.disabled || []), [ 'search', 'netmount', 'zipdl' ]),\n\t\t\t\t\ttmb           : !!data.tmb,\n\t\t\t\t\tcopyOverwrite : true\n\t\t\t\t};\n\t\t\t\n\t\t\tif (data.params) {\n\t\t\t\topts.api      = 1;\n\t\t\t\topts.url      = data.params.url;\n\t\t\t\topts.archivers = {\n\t\t\t\t\tcreate  : data.params.archives || [],\n\t\t\t\t\textract : data.params.extract || []\n\t\t\t\t};\n\t\t\t}\n\t\t\t\n\t\t\tif (opts.path.indexOf('/') !== -1) {\n\t\t\t\topts.separator = '/';\n\t\t\t} else if (opts.path.indexOf('\\\\') !== -1) {\n\t\t\t\topts.separator = '\\\\';\n\t\t\t}\n\t\t\treturn opts;\n\t\t};\n\t};\n\n});"]}